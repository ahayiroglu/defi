{"version":3,"sources":["webpack://defi/webpack/universalModuleDefinition","webpack://defi/webpack/bootstrap","webpack://defi/./src/_helpers/foreach.js","webpack://defi/./node_modules/@babel/runtime/helpers/typeof.js","webpack://defi/./src/trigger/_triggerone.js","webpack://defi/./src/_core/defs.js","webpack://defi/./src/_helpers/checkobjecttype.js","webpack://defi/./src/_helpers/defierror.js","webpack://defi/./src/_helpers/forown.js","webpack://defi/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://defi/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://defi/./src/on/_addlistener.js","webpack://defi/./src/set.js","webpack://defi/./src/off/_removelistener.js","webpack://defi/./src/_mq/_html2nodelist.js","webpack://defi/./src/_mq/_init.js","webpack://defi/./src/_mq/_data.js","webpack://defi/./src/_mq/on.js","webpack://defi/./src/_mq/off.js","webpack://defi/./src/_mq/index.js","webpack://defi/./src/_mq/parsehtml.js","webpack://defi/./src/_mq/add.js","webpack://defi/./src/_core/init.js","webpack://defi/./src/_core/defineprop.js","webpack://defi/./src/_helpers/assign.js","webpack://defi/./src/on/_domeventregexp.js","webpack://defi/./src/off/_undelegatelistener.js","webpack://defi/./src/on/_delegatelistener/changehandler.js","webpack://defi/./src/on/_delegatelistener/index.js","webpack://defi/./src/_helpers/is.js","webpack://defi/./src/_helpers/slice.js","webpack://defi/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://defi/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://defi/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://defi/./src/off/_removedomlistener.js","webpack://defi/./src/on/_splitbyspaceregexp.js","webpack://defi/./src/off/index.js","webpack://defi/./src/_helpers/debounce.js","webpack://defi/./src/on/index.js","webpack://defi/./src/trigger/_triggeronedomevent.js","webpack://defi/./src/trigger/index.js","webpack://defi/./src/trigger/_triggerdomevent.js","webpack://defi/./src/off/_removetreelistener.js","webpack://defi/./src/on/_addtreelistener.js","webpack://defi/./src/calc/_addsource.js","webpack://defi/./src/calc/index.js","webpack://defi/./src/calc/_createcalchandler.js","webpack://defi/./src/_helpers/deepfind.js","webpack://defi/./src/bindnode/_selectnodes.js","webpack://defi/./src/bindnode/_getnodes.js","webpack://defi/./src/unbindnode/_removebinding.js","webpack://defi/./src/unbindnode/index.js","webpack://defi/./src/binders/input.js","webpack://defi/./src/defaultbinders.js","webpack://defi/./src/binders/textarea.js","webpack://defi/./src/binders/select.js","webpack://defi/./src/binders/progress.js","webpack://defi/./src/binders/output.js","webpack://defi/./src/lookforbinder.js","webpack://defi/./src/bindnode/_createnodehandler.js","webpack://defi/./src/bindnode/_bindsinglenode.js","webpack://defi/./src/bindnode/_createobjecthandler.js","webpack://defi/./src/bindnode/index.js","webpack://defi/./src/bindnode/_createbindingswitcher.js","webpack://defi/./src/bound.js","webpack://defi/./src/remove.js","webpack://defi/./src/mediate.js","webpack://defi/./src/chain.js","webpack://defi/./src/index.js","webpack://defi/./src/on/_adddomlistener.js","webpack://defi/./src/on/_createdomeventhandler.js"],"names":["root","factory","exports","module","define","amd","defi","window","installedModules","__webpack_require__","m","forEach","arr","callback","i","l","length","d","__webpack_exports__","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","triggerOne","_core_defs__WEBPACK_IMPORTED_MODULE_0__","object","name","triggerArgs","def","defs","get","events","Array","latestEvent","apply","call","info","_helpers_assign__WEBPACK_IMPORTED_MODULE_0__","PseudoMap","assign","set","data","Object","defineProperty","value","enumerable","writable","configurable","has","a","WeakMap","checkObjectType","method","typeofObject","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default","defiError","getTypeError","variable","variableName","expectedType","concat","bindingErrorPrefix","calcErrorPrefix","errors","common:object_type","_ref","binding:node_missing","_ref2","key","node","selectorInfo","binding:falsy_key","calc:target_type","_ref3","target","calc:source_key_type","_ref4","sourceKey","calc:source_object_type","_ref5","sourceObject","calc:source_type","_ref6","source","trigger:names_type","_ref7","names","on:names_type","_ref8","remove:key_type","_ref9","mediate:key_type","_ref10","getError","Error","forOwn","keys","arrayWithHoles","require","iterableToArrayLimit","nonIterableRest","propModEventReg","addListener","arguments","allEvents","initDefi","event","_info$skipChecks","skipChecks","domEventExecResult","domEventReg","exec","_domEventExecResult","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","eventName","selector","default","existingEvent","_callback","push","test","defineProp","replace","eventOptions","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default","objVal","objKey","props","propDef","newValue","previousValue","mediator","_eventOptions","skipMediator","fromMediator","force","forceHTML","silent","silentHTML","skipCalc","is","isChanged","extendedEventOptions","self","triggerChange","beforechangeStr","beforechangeEventName","changeBindingsEventName","changeStr","changeEventName","changeDepsEventName","changeDelegatedKeyEventName","changeTreeEventName","changeCommonEventName","changeDelegatedEventName","removeListener","retain","noTrigger","allEventsItem","allEventsName","removeEventData","argCallback","eventCallback","html2nodeList","givenHTML","wrapMap","option","legend","thead","tr","td","col","area","_","html","document","createElement","optgroup","tbody","tfoot","colgroup","caption","th","ex","wrapper","innerHTML","children","childNodes","win","MQInit","context","result","nodeType","typeof_default","newContext","querySelectorAll","this","_data","nodeIndex","splitBySpaceReg","splitByDotReg","randomID","Math","random","toString","mq","Init","parseHTML","on","namesStr","handler","delegate","split","evt","scopeSelector","splittedSelector","matching","sel","setAttribute","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","removeAttribute","_names$i$split","_names$i$split2","slicedToArray_default","namespace","j","nodeID","b$","exist","k","addEventListener","off","removeEventListener","splice","add","idMap","nodes","_defs__WEBPACK_IMPORTED_MODULE_0__","objectId","id","_set__WEBPACK_IMPORTED_MODULE_1__","bindings","v","fromSetter","undelegateListener","givenPath","path","pathStr","slice","join","delegatedChangeEvtName","delegatedEventName","changeHandler","t","delegatedData","delegateListener","_delegatelistener_delegateListener","v1","v2","arrLike","start","end","_end","isArray","_arr","_n","_d","_e","_s","_i","next","done","err","return","TypeError","r","removeDomListener","_removelistener__WEBPACK_IMPORTED_MODULE_1__","_mq__WEBPACK_IMPORTED_MODULE_2__","_helpers_foreach__WEBPACK_IMPORTED_MODULE_3__","eventNamespace","binding","index","$","_splitbyspaceregexp","givenNames","isNamesVarArray","namesObjCallback","namesObjName","propName","delegatedEventParts","_delegatedEventParts","delegatedName","debounce","func","givenDelay","thisArg","timeout","delay","args","callContext","clearTimeout","setTimeout","givenCallback","options","triggerOnInit","once","debounceOption","onceCallback","triggerOneDOMEvent","Event","bubbles","cancelable","defiTriggerArgs","dispatchEvent","trigger","_len","_key","domEvtExecResult","_domEvtExecResult","descendants","descendant","removeTreeListener","deepPath","listenedPath","createTreeListener","newHandler","changeEvent","extendedChangeEvent","restPath","addTreeListener","listenPath","addSource","calcHandler","allSources","_eventOptions$exactKe","exactKey","isDelegated","calc","sources","givenHandler","itemTarget","itemSource","itemHandler","itemEventOptions","commonEventOptions","mergedEventOptions","debouncedCalcHandler","_eventOptions$setOnIn","setOnInit","_eventOptions$debounc","debounceCalcOnInit","_eventOptions$debounc2","debounceCalc","_eventOptions$debounc3","debounceCalcDelay","syncCalcHandler","e","values","_changeEvent$protecto","protector","protectKey","promiseCalc","setEventOptions","paths","current","targetValue","Promise","resolve","then","promiseResult","catch","createCalcHandler","sourceKeyItem","customSelectorReg","randomAttr","htmlReg","getNodes","givenSelector","selectors","execResult","boundKey","subSelector","boundNodes","indexOf","selected","spaceReg","removeBinding","bindingOptions","binder","nodeHandler","objectHandler","destroy","disabled","evtName","unbindNode","itemKey","keyObjValue","keyObjKey","keyObjValueItem","deep","propsItem","propsKey","deepPathLength","$nodes","retainBindings","retainNodes","nodesItem","input","type","getValue","checked","setValue","defaultbinders","tagName","multiple","givenValue","textContent","lookForBinder","defaultBinders","createNodeHandler","domEvent","which","ctrlKey","altKey","originalEvent","preventDefault","stopPropagation","fromNode","changedNode","onChangeValue","bindSingleNode","givenBinder","getValueOnBind","setValueOnBind","debounceSetValue","debounceGetValue","debounceSetValueOnBind","_eventOptions$debounc4","debounceGetValueOnBind","_eventOptions$debounc5","debounceSetValueDelay","_eventOptions$debounc6","debounceGetValueDelay","_eventOptions$useExac","useExactBinder","isUndefined","foundBinder","_binder","initialize","debouncedNodeHandler","syncNodeHandler","debouncedObjectHandler","syncObjectHandler","evtBinder","dirtyHackValue","createObjectHandler","bindNode","_eventOptions$optiona","optional","bindingSwitcher","previousTarget","lastDeepPathItem","oneNode","bound","all","map","remove","givenKey","_loop","prefix","mediate","givenKeys","isKeysArray","propMediator","funcNames","functions","funcName","argument","chain_loop","ChainClass","chain","addDomListener","domEventHandler","_createBindingHandler","fullEventName","bindHandler","unbindHandler","addBindListenerResult","addUnbindListenerResult","c","getter","o","toStringTag","mode","__esModule","ns","create","bind","n","property","hasOwnProperty","p","s","moduleId","modules"],"mappings":"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","file":"defi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"defi\"] = factory();\n\telse\n\t\troot[\"defi\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","export default function forEach(arr, callback) {\n    let i = 0;\n    const l = arr.length;\n\n    for (; i < l; i++) {\n        callback(arr[i], i);\n    }\n}\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","import defs from '../_core/defs';\n\n// triggers one event\nexport default function triggerOne(object, name, triggerArgs) {\n    const def = defs.get(object);\n    const events = def && def.events[name];\n\n    if (events) {\n        const l = events.length;\n        let i = 0;\n\n        // allow to pass both array of args and single arg as triggerArgs\n        if (triggerArgs instanceof Array) {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.apply(object, triggerArgs);\n                i += 1;\n            }\n        } else {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.call(object, triggerArgs);\n                i += 1;\n            }\n        }\n    }\n}\n\n// latestEvent is used as required hack in somemethods\ntriggerOne.latestEvent = {\n    info: {},\n    name: null\n};\n","import assign from '../_helpers/assign';\n\nfunction PseudoMap() {}\n\n// PseudoMap simulates WeakMap behavior with O(1) search complexity\n// it's needed to support @IE9 and @IE10\nassign(PseudoMap.prototype, {\n    get(obj) {\n        return obj.defi;\n    },\n    set(obj, data) {\n        Object.defineProperty(obj, 'defi', {\n            value: data,\n            enumerable: false,\n            writable: false,\n            configurable: false\n        });\n    },\n    has(obj) {\n        return 'defi' in obj;\n    }\n});\n\nexport default typeof WeakMap === 'undefined' ? new PseudoMap() : new WeakMap();\n","import defiError from './defierror';\n\n// checks type of a variable and throws an error if its type is not an object\nexport default function checkObjectType(object, method) {\n    const typeofObject = object === null ? 'null' : typeof object;\n\n    if (typeofObject !== 'object' && typeofObject !== 'function') {\n        throw defiError('common:object_type', {\n            object,\n            method\n        });\n    }\n}\n","/* eslint-disable prefer-template, max-len */\nconst bindingErrorPrefix = 'Binding error:';\nconst calcErrorPrefix = 'Calc error:';\nconst eventsErrorPrefix = 'Events error:';\n\nconst getType = (variable) => {\n    if (variable === null) {\n        return 'null';\n    }\n\n    return typeof variable;\n};\nconst getTypeError = (variable, variableName, expectedType) => `${variableName} must have type \"${expectedType}\" but got \"${getType(variable)}\" instead.`;\n\nconst errors = {\n    'common:object_type': ({ object, method }) => `Error in ${method}: `\n        + getTypeError(object, 'object', 'object'),\n\n    'binding:node_missing': ({ key, node }) => {\n        const selectorInfo = typeof node === 'string' ? ` (given selector is \"${node}\")` : '';\n        return `${bindingErrorPrefix} node is missing for key \"${key}\"${selectorInfo}.`;\n    },\n    'binding:falsy_key': () => `${bindingErrorPrefix} \"key\" arg cannot be falsy`,\n    'calc:target_type': ({ target }) => `${calcErrorPrefix} ${getTypeError(target, 'target key', 'string')}`,\n    'calc:source_key_type': ({ sourceKey }) => `${calcErrorPrefix} ${getTypeError(sourceKey, 'source key', 'string')}`,\n    'calc:source_object_type': ({ sourceObject }) => `${calcErrorPrefix} ${getTypeError(sourceObject, 'source object', 'object')}`,\n    'calc:source_type': ({ source }) => `${calcErrorPrefix} ${getTypeError(source, 'source', 'object')}`,\n\n    'trigger:names_type': ({ names }) => `${eventsErrorPrefix} ${getTypeError(names, 'event name', 'string')}`,\n\n    'on:names_type': ({ names }) => errors['trigger:names_type']({ names }),\n\n    'remove:key_type': ({ key }) => `Error in remove: ${getTypeError(key, 'key', 'string')}`,\n\n    'mediate:key_type': ({ key }) => `Error in mediate: ${getTypeError(key, 'key', 'string')}`\n};\n\nexport default function defiError(key, data) {\n    const getError = errors[key];\n    if (!getError) {\n        /* istanbul ignore next */\n        throw Error(`Unknown error \"${key}\". Please report about this on Github.`);\n    }\n\n    return new Error(getError(data));\n}\n","export default function forOwn(obj, callback) {\n    const keys = Object.keys(obj);\n    const l = keys.length;\n    let i = 0;\n    let key;\n\n    while (i < l) {\n        key = keys[i++];\n        callback(obj[key], key);\n    }\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import initDefi from '../_core/init';\nimport triggerOne from '../trigger/_triggerone';\nimport defineProp from '../_core/defineprop';\nimport domEventReg from './_domeventregexp';\n\n// property modifier event regexp\n// eslint-disable-next-line max-len\nconst propModEventReg = /^_change:deps:|^_change:bindings:|^_change:delegated:|^_change:common:|^_change:tree:|^change:|^beforechange:/;\n\n// adds simple event listener\n// used as core of event engine\nexport default function addListener(object, name, callback, info = {}) {\n    const { events: allEvents } = initDefi(object);\n    const events = allEvents[name];\n    const event = {\n        callback, name, info\n    };\n\n    // skipChecks is used by internal methods for better performance\n    const { skipChecks = false } = info;\n\n    if (!skipChecks) {\n        const domEventExecResult = domEventReg.exec(name);\n\n        if (domEventExecResult) {\n            const [, eventName, key, selector] = domEventExecResult;\n            // fixing circular reference issue\n            const { default: addDomListener } = require('./_adddomlistener');\n\n            addDomListener(object, key, eventName, selector, callback, info);\n\n            return true;\n        }\n    }\n\n    // if there are events with the same name\n    if (events) {\n        if (!skipChecks) {\n            // if there are events with the same data, return false\n            for (let i = 0; i < events.length; i++) {\n                const existingEvent = events[i];\n                const argCallback = (callback && callback._callback) || callback;\n                const eventCallback = existingEvent.callback._callback || existingEvent.callback;\n                if (argCallback === eventCallback) {\n                    return false;\n                }\n            }\n        }\n\n        // if the event isn't found add it to the event list\n        events.push(event);\n    } else {\n        // if there are no events with the same name, create an array with only  one event\n        allEvents[name] = [event];\n    }\n\n    if (propModEventReg.test(name)) {\n        // define needed accessors for KEY\n        defineProp(object, name.replace(propModEventReg, ''));\n    }\n\n    // names prefixed by underscore mean \"private\" events\n    if (!skipChecks && name[0] !== '_') {\n        triggerOne(object, `addevent:${name}`, event);\n        triggerOne(object, 'addevent', event);\n    }\n\n    // if event is added successfully return true\n    return true;\n}\n","import defs from './_core/defs';\nimport triggerOne from './trigger/_triggerone';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport is from './_helpers/is';\nimport forOwn from './_helpers/forown';\n\n// the function sets new value for a property\n// since its performance is very critical we're checking events existence manually\nexport default function set(object, key, value, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'set');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return object;\n    }\n\n    // allow to use key-value object as another method variation\n    if (typeof key === 'object') {\n        forOwn(key, (objVal, objKey) => set(object, objKey, objVal, value));\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n\n    // if no object definition then make simple assignment\n    if (!def) {\n        object[key] = value;\n        return object;\n    }\n\n    const { props, events } = def;\n    const propDef = props[key];\n\n    // if no property definition then make simple assignment\n    if (!propDef) {\n        object[key] = value;\n        return object;\n    }\n\n    const { value: previousValue, mediator } = propDef;\n\n    // possible flags, all of them are falsy by default\n    const {\n        skipMediator,\n        fromMediator,\n        force,\n        forceHTML,\n        silent,\n        silentHTML,\n        skipCalc\n    } = eventOptions;\n\n    let newValue;\n\n    if (mediator && !is(value, previousValue) && !skipMediator && !fromMediator) {\n        newValue = mediator(value);\n    } else {\n        newValue = value;\n    }\n\n    const isChanged = !is(newValue, previousValue);\n\n    // add to eventOptions object some useful properties\n    // we override default eventOptions because some of the properties need to have actual values,\n    // not inherited ones (eg when calc is used)\n    const extendedEventOptions = {\n        ...eventOptions,\n        value: newValue,\n        self: object,\n        previousValue,\n        key,\n        isChanged\n    };\n\n    const triggerChange = (isChanged || force) && !silent;\n\n    // trigger beforechange:KEY and beforechange events\n    if (triggerChange) {\n        const beforechangeStr = 'beforechange';\n        const beforechangeEventName = `${beforechangeStr}:${key}`;\n\n        if (events[beforechangeEventName]) {\n            triggerOne(object, beforechangeEventName, extendedEventOptions);\n        }\n\n        if (events[beforechangeStr]) {\n            triggerOne(object, beforechangeStr, extendedEventOptions);\n        }\n    }\n\n    propDef.value = newValue;\n\n    // triger bindings\n    if (!silentHTML && (isChanged || forceHTML)) {\n        const changeBindingsEventName = `_change:bindings:${key}`;\n        if (events[changeBindingsEventName]) {\n            triggerOne(object, changeBindingsEventName, extendedEventOptions);\n        }\n    }\n\n    // trigger change:KEY and change events\n    if (triggerChange) {\n        const changeStr = 'change';\n        const changeEventName = `${changeStr}:${key}`;\n        if (events[changeEventName]) {\n            triggerOne(object, changeEventName, extendedEventOptions);\n        }\n\n        if (events[changeStr]) {\n            triggerOne(object, changeStr, extendedEventOptions);\n        }\n    }\n\n    // trigger dependencies made by calc method\n    if ((isChanged || force) && !skipCalc) {\n        const changeDepsEventName = `_change:deps:${key}`;\n        if (events[changeDepsEventName]) {\n            triggerOne(object, changeDepsEventName, extendedEventOptions);\n        }\n    }\n\n\n    if (isChanged) {\n        // trigger common delegated events logic\n        const changeDelegatedKeyEventName = `_change:delegated:${key}`;\n        if (events[changeDelegatedKeyEventName]) {\n            triggerOne(object, changeDelegatedKeyEventName, extendedEventOptions);\n        }\n\n        // trigger tree change events logic\n        const changeTreeEventName = `_change:tree:${key}`;\n        if (events[changeTreeEventName]) {\n            triggerOne(object, changeTreeEventName, extendedEventOptions);\n        }\n\n        // trigger other internal change events\n        const changeCommonEventName = `_change:common:${key}`;\n        if (events[changeCommonEventName]) {\n            triggerOne(object, changeCommonEventName, extendedEventOptions);\n        }\n\n        // trigger delegated logic for asterisk events (*.*.*@foo)\n        // TODO: Confusing events names (\"_change:delegated\", \"_change:common:KEY\" etc)\n        const changeDelegatedEventName = '_change:delegated';\n        if (events[changeDelegatedEventName]) {\n            triggerOne(object, changeDelegatedEventName, extendedEventOptions);\n        }\n    }\n\n    return object;\n}\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport domEventReg from '../on/_domeventregexp';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\n\n// removes simple event listener from an object\nexport default function removeListener(object, name, callback, info) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return false;\n    }\n\n    const { events: allEvents } = def;\n    const events = allEvents[name];\n    const retain = [];\n    const noTrigger = name ? name[0] === '_' : false;\n    const domEventExecResult = domEventReg.exec(name);\n\n    if (domEventExecResult) {\n        const [, eventName, key, selector] = domEventExecResult;\n        // fixing circular reference issue\n        const { default: removeDomListener } = require('./_removedomlistener');\n\n        removeDomListener(object, key, eventName, selector, callback, info);\n\n        return true;\n    }\n\n    // if all events need to be removed\n    if (typeof name === 'undefined') {\n        if (!noTrigger) {\n            forOwn(allEvents, (allEventsItem, allEventsName) => {\n                forEach(allEventsItem, (event) => {\n                    const removeEventData = {\n                        allEventsName,\n                        callback: event.callback\n                    };\n\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                });\n            });\n        }\n\n        // restore default value of \"events\"\n        def.events = {};\n    } else if (events) {\n        // if events with given name are found\n        forEach(events, (event) => {\n            const argCallback = (callback && callback._callback) || callback;\n            const eventCallback = event.callback._callback || event.callback;\n\n            if (argCallback && argCallback !== eventCallback) {\n                // keep event\n                retain.push(event);\n            } else {\n                const removeEventData = {\n                    name,\n                    callback: event.callback\n                };\n\n                if (!noTrigger) {\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                }\n            }\n        });\n\n        if (retain.length) {\n            allEvents[name] = retain;\n        } else {\n            delete def.events[name];\n        }\n    }\n\n    return false;\n}\n","// converts HTML string to NodeList instance\nexport default function html2nodeList(givenHTML) {\n    // wrapMap is taken from jQuery\n    const wrapMap = {\n        option: [1, '<select multiple=\"multiple\">', '</select>'],\n        legend: [1, '<fieldset>', '</fieldset>'],\n        thead: [1, '<table>', '</table>'],\n        tr: [2, '<table><tbody>', '</tbody></table>'],\n        td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n        area: [1, '<map>', '</map>'],\n        _: [0, '', '']\n    };\n\n    const html = givenHTML.replace(/^\\s+|\\s+$/g, '');\n    let node = window.document.createElement('div');\n    let i;\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    const ex = /<([\\w:]+)/.exec(html);\n    const wrapper = (ex && wrapMap[ex[1]]) || wrapMap._;\n\n    node.innerHTML = wrapper[1] + html + wrapper[2];\n\n    i = wrapper[0];\n\n    while (i) {\n        i -= 1;\n        node = node.children[0];\n    }\n\n    return node.childNodes;\n}\n","import html2nodeList from './_html2nodelist';\n\nconst win = window;\n\n// function-constructor of mq library\n// accepts many kinds of arguments (selector, html, function)\nfunction MQInit(selector, context) {\n    let result;\n\n    if (selector) {\n        if (selector.nodeType || (typeof win === 'object' && selector === win)) {\n            result = [selector];\n        } else if (typeof selector === 'string') {\n            if (/</.test(selector)) {\n                result = html2nodeList(selector);\n            } else if (context) {\n                const newContext = (new MQInit(context))[0];\n\n                if (newContext) {\n                    result = newContext.querySelectorAll(selector);\n                }\n            } else {\n                result = win.document.querySelectorAll(selector);\n            }\n        } else if ('length' in selector) {\n            // if it's something array-like (eg NodeList)\n            result = selector;\n        } else {\n            // this is somethong another (eg Attr)\n            result = [selector];\n        }\n    }\n\n    const length = result && result.length;\n\n    if (length) {\n        for (let i = 0; i < length; i++) {\n            this.push(result[i]);\n        }\n    }\n}\n\nMQInit.prototype = [];\n\nexport default MQInit;\n","// an object allows to share data between modules; it's needed because we use\n// simplified ES modules there and cannot import and share a number\nexport default {\n    nodeIndex: 0,\n    allEvents: {}\n};\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n    return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n    const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n    const splittedSelector = selector.split(',');\n\n    let matching = '';\n\n    for (let i = 0; i < splittedSelector.length; i++) {\n        const sel = splittedSelector[i];\n        matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n    }\n\n\n    this.setAttribute(randomID, randomID);\n\n    if (is(evt.target, matching)) {\n        handler.call(this, evt);\n    }\n\n    this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n    const names = namesStr.split(splitBySpaceReg);\n    let delegate;\n\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (selector) {\n        delegate = function uniqueDelegateHandler(evt) {\n            delegateHandler.call(this, evt, selector, handler);\n        };\n    }\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n            let exist = false;\n\n            for (let k = 0; k < events.length; k++) {\n                const event = events[k];\n\n                if (handler === event.handler && (!selector || selector === event.selector)) {\n                    exist = true;\n                    break;\n                }\n            }\n\n            if (!exist) {\n                events.push({\n                    delegate,\n                    handler,\n                    namespace,\n                    selector,\n                    nodeID,\n                    name\n                });\n\n                node.addEventListener(name, delegate || handler, false);\n            }\n        }\n    }\n\n    return this;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\n\n// removes event handler from a set of elements\nexport default function off(namesStr, selector, handler) {\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    const names = namesStr.split(splitBySpaceReg);\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n\n            if (!name && namespace) {\n                for (let k = 0, keys = Object.keys(data.allEvents); k < keys.length; k++) {\n                    const events = data.allEvents[keys[k]];\n\n                    for (let l = 0; l < events.length; l++) {\n                        const event = events[i];\n                        if (event.namespace === namespace && event.nodeID === node.b$) {\n                            node.removeEventListener(event.name, event.delegate || event.handler);\n                            events.splice(l, 1);\n                            l -= 1;\n                        }\n                    }\n                }\n\n                continue;\n            }\n\n            const events = data.allEvents[name + node.b$];\n            if (events) {\n                for (let k = 0; k < events.length; k++) {\n                    const event = events[k];\n                    if (\n                        (!handler || handler === event.handler || handler === event.delegate)\n                        && (!namespace || namespace === event.namespace)\n                        && (!selector || selector === event.selector)\n                    ) {\n                        node.removeEventListener(name, event.delegate || event.handler);\n                        events.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n            } else if (!namespace && !selector) {\n                node.removeEventListener(name, handler);\n            }\n        }\n    }\n\n    return this;\n}\n","import Init from './_init';\nimport parseHTML from './parsehtml';\nimport on from './on';\nimport off from './off';\nimport add from './add';\nimport assign from '../_helpers/assign';\n\n// a tiny jQuery-like library\nexport default function mq(selector, context) {\n    return new Init(selector, context);\n}\n\nmq.parseHTML = parseHTML;\n\nassign(Init.prototype, {\n    on,\n    off,\n    add\n});\n","import html2nodeList from './_html2nodelist';\nimport Init from './_init';\n\n// parses given HTML and returns mq instance\nexport default function parseHTML(html) {\n    return new Init(html2nodeList(html));\n}\n","import Init from './_init';\nimport data from './_data';\n\n// adds unique nodes to mq collection\nexport default function add(selector) {\n    const idMap = {};\n\n    let result;\n\n    const nodes = new Init(selector);\n\n    if (this.length) {\n        result = new Init();\n        for (let i = 0; i < this.length; i++) {\n            const node = this[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            idMap[nodeID] = 1;\n            result.push(node);\n        }\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            if (!idMap[nodeID]) {\n                idMap[nodeID] = 1;\n                result.push(node);\n            }\n        }\n    } else {\n        result = nodes;\n    }\n\n    return result;\n}\n","import defs from './defs';\n\nlet objectId = 0;\n\n// this is a common function which associates an object with its defi definition\nexport default function initDefi(object) {\n    let def = defs.get(object);\n    if (!def) {\n        def = {\n            // a property name of \"events\" object is an event name\n            // and a value is an array of event handlers\n            events: {\n                /* example: {\n                    callback: function,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n            },\n            // \"props\" contains special information about properties (getters, setters etc)\n            props: {\n                /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                } */\n            },\n            id: objectId\n        };\n\n        objectId += 1;\n\n        defs.set(object, def);\n    }\n\n    return def;\n}\n","import defs from './defs';\nimport set from '../set';\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key) {\n    const def = defs.get(object);\n\n    // if no object definition do nothing\n    if (!def) {\n        return null;\n    }\n\n    if (!def.props[key]) {\n        const propDef = def.props[key] = {\n            value: object[key],\n            mediator: null,\n            bindings: null\n        };\n\n        Object.defineProperty(object, key, {\n            configurable: true,\n            enumerable: true,\n            get() {\n                return propDef.value;\n            },\n            set(v) {\n                return set(object, key, v, {\n                    fromSetter: true\n                });\n            }\n        });\n    }\n\n    return def.props[key];\n}\n","export default function assign(target, source) {\n    const keys = Object.keys(source);\n    let i = keys.length;\n    let key;\n\n    while (--i >= 0) {\n        key = keys[i];\n        target[key] = source[key];\n    }\n\n    return target;\n}\n","// the regexp allows to parse things like \"click::x(.y)\"\n// it's shared between few modules\nexport default /([^::]+)::([^()]+)?(?:\\((.*)\\))?/;\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport slice from '../_helpers/slice';\nimport forEach from '../_helpers/foreach';\n\n// the function removes internally used events such as _asterisk:add\nfunction detatchDelegatedLogic({\n    delegatedEventName,\n    pathStr,\n    allEvents\n}) {\n    const retain = [];\n    const events = allEvents[delegatedEventName];\n\n    forEach(events, (event) => {\n        // pathStr is assigned to info in delegateListener\n        if (event.info.pathStr !== pathStr) {\n            retain.push(event);\n        }\n    });\n\n    if (retain.length) {\n        allEvents[delegatedEventName] = retain;\n    } else {\n        delete allEvents[delegatedEventName];\n    }\n}\n\n// removes delegated event listener from an object by given path\nexport default function undelegateListener(object, givenPath, name, callback, info = {}) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return;\n    }\n\n    const { events: allEvents } = def;\n\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then remove listener\n        removeListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr;\n\n        if (path.length > 1) {\n            path = slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n\n        const delegatedChangeEvtName = `_change:delegated:${key}`;\n        if (allEvents[delegatedChangeEvtName]) {\n            detatchDelegatedLogic({\n                delegatedEventName: delegatedChangeEvtName,\n                pathStr,\n                allEvents\n            });\n        }\n\n        if (typeof object[key] === 'object') {\n            undelegateListener(object[key], path, name, callback, info);\n        }\n    }\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\n\n// the function is called when some part of a path is changed\n// it delegates event listener for new branch of an object and undelegates it for old one\n// used for non-asterisk events\nexport default function changeHandler({\n    previousValue,\n    value\n}, {\n    path,\n    name,\n    callback,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (value && typeof value === 'object') {\n        const { default: delegateListener } = require('./'); // fixing circular ref\n\n        delegateListener(value, path, name, callback, info);\n    }\n\n    if (previousValue && typeof previousValue === 'object') {\n        undelegateListener(previousValue, path, name, callback, info);\n    }\n}\n","import addListener from '../_addlistener';\nimport changeHandler from './changehandler';\nimport slice from '../../_helpers/slice';\n\n// adds delegated event listener to an object by given path\n// TODO Handler uses wrong context\nexport default function delegateListener(object, givenPath, name, callback, info = {}) {\n    // if typeof path is string and path is not empty string then split it\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then add simple listener\n        addListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr; // needed for undelegation\n\n        if (path.length > 1) {\n            path = slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n        const delegatedData = {\n            path,\n            name,\n            callback,\n            info,\n            object\n        };\n\n        // the event is triggered by \"set\";\n        // a new function is created as a handler to make possible\n        // to add the handler multiple times for one key\n        addListener(object, `_change:delegated:${key}`, evt => changeHandler(evt), {\n            delegatedData,\n            pathStr\n        });\n\n        // call handler manually\n        changeHandler({\n            value: object[key]\n        }, delegatedData);\n    }\n}\n","// determines whether two values are the same value\n/* istanbul ignore next */\nconst isPolyfill = (v1, v2) => v1 === 0 && v2 === 0 ? 1 / v1 === 1 / v2 : v1 !== v1 && v2 !== v2 || v1 === v2; // eslint-disable-line\n\nexport default Object.is || isPolyfill;\n","export default function (arrLike, start, end) {\n    const l = arrLike.length;\n    let i = start || 0;\n    const _end = end || l;\n    const arr = Array(_end - i);\n    let j = 0;\n\n    while (i < _end) {\n        arr[j++] = arrLike[i++];\n    }\n\n    return arr;\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport $ from '../_mq';\nimport forEach from '../_helpers/foreach';\n\n// removes dom listener from nodes bound to given key\nexport default function removeDomListener(\n    object,\n    key,\n    eventName,\n    selector,\n    callback,\n    info\n) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // collect bound nodes and remove DOM event listener\n        const nodes = Array(bindings.length);\n        const eventNamespace = def.id + key;\n\n        forEach(bindings, (binding, index) => {\n            nodes[index] = binding.node;\n        });\n\n        $(nodes).off(`${eventName}.${eventNamespace}`, selector, callback);\n    }\n\n    // remove bind and unbind listeners from given key\n    removeListener(object, `bind:${key}`, callback, info);\n    removeListener(object, `unbind:${key}`, callback, info);\n\n    return object;\n}\n","// allows to split by spaces not inclusing ones inside of brackers\nexport default /\\s+(?![^(]*\\))/g;\n","import splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport undelegateListener from './_undelegatelistener';\nimport $ from '../_mq';\n\n// removes event listener\nexport default function off(object, givenNames, callback) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'off');\n\n    const isNamesVarArray = givenNames instanceof Array;\n    const def = defs.get(object);\n\n    // allow to pass name-handler object\n    // TODO: Name-handler object passed to off method is non-documented feature\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        forOwn(givenNames, (namesObjCallback, namesObjName) => off(\n            object, namesObjName, namesObjCallback, callback,\n        ));\n        return object;\n    }\n\n\n    if (!givenNames && !callback) {\n        def.events = {};\n\n        forOwn(def.props, ({ bindings }, propName) => {\n            if (bindings) {\n                forEach(bindings, ({ node }) => {\n                    const eventNamespace = def.id + propName;\n                    $(node).off(`.${eventNamespace}`);\n                });\n            }\n        });\n\n        return object;\n    }\n\n    // TODO: Array of names passed to off method is non-documented feature\n    // split by spaces\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n        if (delegatedEventParts.length > 1) {\n            const [path, delegatedName] = delegatedEventParts;\n            undelegateListener(object, path, delegatedName, callback);\n        } else {\n            removeListener(object, name, callback);\n        }\n    });\n\n    return object;\n}\n","// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds.\n// (c) https://davidwalsh.name/javascript-debounce-function\n\nexport default function debounce(func, givenDelay, thisArg) {\n    let timeout;\n    let delay;\n    if (typeof givenDelay !== 'number') {\n        thisArg = givenDelay; // eslint-disable-line no-param-reassign\n        delay = 0;\n    } else {\n        delay = givenDelay || 0;\n    }\n\n    return function debounced() {\n        const args = arguments;\n        const callContext = thisArg || this;\n\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => func.apply(callContext, args), delay);\n    };\n}\n","import splitBySpaceReg from './_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport off from '../off';\nimport debounce from '../_helpers/debounce';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport addListener from './_addlistener';\nimport delegateListener from './_delegatelistener';\n\n// adds event listener\nexport default function on(object, givenNames, givenCallback, options) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'on');\n\n    const isNamesVarArray = givenNames instanceof Array;\n\n    // allow to pass name-handler object\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        forOwn(givenNames, (namesObjCallback, namesObjName) => on(\n            object, namesObjName, namesObjCallback, givenCallback, options,\n        ));\n        return object;\n    }\n\n    if (typeof givenNames !== 'string' && !isNamesVarArray) {\n        throw defiError('on:names_type', { names: givenNames });\n    }\n\n    // split by spaces\n    // TODO: Array of names passed to on method is a non-documented feature\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    const { triggerOnInit, once, debounce: debounceOption } = options || {};\n    let callback;\n    if (once) {\n        callback = function onceCallback() {\n            givenCallback.apply(this, arguments);\n            // remove event listener after its call\n            off(object, names, onceCallback);\n        };\n\n        // allow to remove event listener py passing original callback to \"off\"\n        callback._callback = givenCallback;\n    } else if (typeof debounceOption === 'number' || debounceOption === true) {\n        callback = debounce(givenCallback, debounceOption === true ? 0 : debounceOption, object);\n    } else {\n        callback = givenCallback;\n    }\n\n    forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n\n        if (delegatedEventParts.length > 1) {\n            // if @ exists in event name then this is delegated event\n            const [path, delegatedName] = delegatedEventParts;\n            delegateListener(object, path, delegatedName, callback);\n        } else {\n            // if not, this is simple event\n            addListener(object, name, callback);\n        }\n    });\n\n    // call callback immediatelly if triggerOnInit is true\n    if (triggerOnInit) {\n        callback.call(object, options);\n    }\n\n    return object;\n}\n","// triggers given DOM event on given node\nexport default function triggerOneDOMEvent({\n    node,\n    eventName,\n    triggerArgs\n}) {\n    const { Event } = window;\n    const event = new Event(eventName, {\n        bubbles: true,\n        cancelable: true\n    });\n\n    // defiTriggerArgs will be used in a handler created by addDOMListener\n    event.defiTriggerArgs = triggerArgs;\n\n    node.dispatchEvent(event);\n}\n","import domEventReg from '../on/_domeventregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport defs from '../_core/defs';\nimport triggerOne from './_triggerone';\nimport triggerDomEvent from './_triggerdomevent';\nimport forEach from '../_helpers/foreach';\n\n// triggers an event\nexport default function trigger(object, givenNames, ...triggerArgs) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'trigger');\n    let names;\n\n    // allow to use strings only as event name\n    if (typeof givenNames === 'string') {\n        names = givenNames.split(splitBySpaceReg);\n    } else {\n        throw defiError('trigger:names_type', { names: givenNames });\n    }\n\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return object;\n    }\n\n    const { events: allEvents } = def;\n\n    if (!allEvents) {\n        return object;\n    }\n\n    forEach(names, (name) => {\n        const domEvtExecResult = domEventReg.exec(name);\n\n        if (domEvtExecResult) {\n            // if EVT::KEY(SELECTOR) ia passed as event name then trigger DOM event\n            const [, eventName, key, selector] = domEvtExecResult;\n            triggerDomEvent(object, key, eventName, selector, triggerArgs);\n        } else {\n            // trigger ordinary event\n            triggerOne(object, name, triggerArgs);\n        }\n    });\n\n    return object;\n}\n","import triggerOneDOMEvent from './_triggeronedomevent';\nimport defs from '../_core/defs';\nimport forEach from '../_helpers/foreach';\n\n// triggers DOM event on bound nodes\nexport default function triggerDOMEvent(object, key, eventName, selector, triggerArgs) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return;\n    }\n\n    const { bindings } = propDef;\n\n    if (!bindings) {\n        return;\n    }\n\n    forEach(bindings, ({ node }) => {\n        if (selector) {\n            // if selector is given trigger an event on all node descendants\n            const descendants = node.querySelectorAll(selector);\n            forEach(descendants, (descendant) => {\n                triggerOneDOMEvent({\n                    node: descendant,\n                    eventName,\n                    triggerArgs\n                });\n            });\n        } else {\n            // trigger an event for single node\n            triggerOneDOMEvent({\n                node,\n                eventName,\n                triggerArgs\n            });\n        }\n    });\n}\n","import undelegateListener from './_undelegatelistener';\n\n// removes tree listener from all object tree of fiven path\nexport default function removeTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over keys of the path and undelegate given handler (can be undefined)\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice is slow\n        const listenedPath = deepPath.slice(0, i);\n\n        undelegateListener(\n            object,\n            listenedPath,\n            `_change:tree:${deepPath[i]}`,\n            handler\n        );\n    }\n}\n","import delegateListener from './_delegatelistener';\nimport removeTreeListener from '../off/_removetreelistener';\n\n// creates tree listener\nfunction createTreeListener({ handler, restPath }) {\n    const newHandler = function treeListener(changeEvent) {\n        const extendedChangeEvent = {\n            restPath,\n            ...changeEvent\n        };\n        const { previousValue, value } = changeEvent;\n\n        // removes listener for all branches of the path on old object\n        if (previousValue && typeof previousValue === 'object') {\n            removeTreeListener(previousValue, restPath, handler);\n        }\n\n        // adds listener for all branches of \"restPath\" path on newly assigned object\n        if (value && typeof value === 'object') {\n            addTreeListener(value, restPath, handler);\n        }\n\n        // call original handler\n        handler.call(this, extendedChangeEvent);\n    };\n\n    newHandler._callback = handler;\n\n    return newHandler;\n}\n\n// listens changes for all branches of given path\n// one of the most hard functions to understand\nexport default function addTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over all keys and delegate listener for all objects of given branch\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice method is slow\n        const listenPath = deepPath.slice(0, i);\n        const restPath = deepPath.slice(i + 1);\n\n        delegateListener(\n            object,\n            listenPath,\n            `_change:tree:${deepPath[i]}`,\n            createTreeListener({\n                handler,\n                restPath\n            })\n        );\n    }\n}\n","import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport defiError from '../_helpers/defierror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n    calcHandler,\n    allSources,\n    sourceKey,\n    sourceObject,\n    eventOptions\n}) {\n    let { exactKey = false } = eventOptions;\n    let isDelegated = false;\n\n    // source key must be a string\n    if (typeof sourceKey !== 'string') {\n        throw defiError('calc:source_key_type', { sourceKey });\n    }\n\n    // source object must be an object\n    if (!sourceObject || typeof sourceObject !== 'object') {\n        throw defiError('calc:source_object_type', { sourceObject });\n    }\n\n    if (!exactKey) {\n        const deepPath = sourceKey.split('.');\n\n        // if something like a.b.c is used as a key\n        if (deepPath.length > 1) {\n            isDelegated = true;\n            // TODO: Avoid collisions with bindings by using another event name\n            // ... instead of _change:tree:xxx\n            addTreeListener(sourceObject, deepPath, calcHandler);\n        } else {\n            exactKey = true;\n        }\n    }\n\n\n    if (exactKey) {\n        // normal handler\n        addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n    }\n\n    allSources.push({\n        sourceKey,\n        sourceObject,\n        isDelegated\n    });\n}\n","import initDefi from '../_core/init';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport debounce from '../_helpers/debounce';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport assign from '../_helpers/assign';\nimport addSource from './_addsource';\nimport createCalcHandler from './_createcalchandler';\nimport defineProp from '../_core/defineprop';\n\n// defines a property which is dependend on other properties\nexport default function calc(object, target, sources, givenHandler, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'calc');\n\n    if (target instanceof Object) {\n        /*\n         * accept an object\n         * this.calc({target: { source, handler, event } }, commonEventOptions);\n         */\n        forOwn(target, ({\n            source: itemSource,\n            handler: itemHandler,\n            options: itemEventOptions\n        }, itemTarget) => {\n            const commonEventOptions = sources;\n            const mergedEventOptions = {};\n\n            if (commonEventOptions) {\n                // extend event object by \"global\" event\n                assign(mergedEventOptions, commonEventOptions);\n            }\n\n            if (itemEventOptions) {\n                // extend event object by \"local\" event (\"event\" key of an object)\n                assign(mergedEventOptions, itemEventOptions);\n            }\n\n            calc(object, itemTarget, itemSource, itemHandler, mergedEventOptions);\n        });\n\n        return object;\n    }\n\n    if (typeof target !== 'string') {\n        throw defiError('calc:target_type', { target });\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = initDefi(object);\n    const {\n        setOnInit = true,\n        debounceCalcOnInit = false,\n        debounceCalc = true,\n        debounceCalcDelay = 0\n    } = eventOptions;\n    const defaultHandler = value => value;\n    const handler = givenHandler || defaultHandler;\n    const allSources = [];\n    const syncCalcHandler = createCalcHandler({\n        object,\n        eventOptions,\n        allSources,\n        target,\n        def,\n        handler\n    });\n\n    let debouncedCalcHandler;\n    let calcHandler;\n\n    if (debounceCalcOnInit || debounceCalc) {\n        debouncedCalcHandler = debounce(syncCalcHandler, debounceCalcDelay);\n    }\n\n    defineProp(object, target);\n\n    if (!(sources instanceof Array)) {\n        sources = [sources]; // eslint-disable-line no-param-reassign\n    }\n\n    if (debounceCalc) {\n        calcHandler = debouncedCalcHandler;\n    } else {\n        calcHandler = syncCalcHandler;\n    }\n\n    forEach(sources, (source) => {\n        if (typeof source === 'string') {\n            // source object is current object\n            addSource({\n                calcHandler,\n                allSources,\n                sourceKey: source,\n                sourceObject: object,\n                eventOptions\n            });\n        } else {\n            // source object is external object\n            if (!source || typeof source !== 'object') {\n                throw defiError('calc:source_type', { source });\n            }\n\n            const sourceKey = source.key;\n            const sourceObject = source.object;\n            if (sourceKey instanceof Array) {\n                // many keys are passed\n                forEach(sourceKey, (sourceKeyItem) => {\n                    addSource({\n                        calcHandler,\n                        allSources,\n                        sourceKey: sourceKeyItem,\n                        sourceObject,\n                        eventOptions\n                    });\n                });\n            } else {\n                // one key is passed\n                addSource({\n                    calcHandler,\n                    allSources,\n                    sourceKey,\n                    sourceObject,\n                    eventOptions\n                });\n            }\n        }\n    });\n\n    if (setOnInit) {\n        if (debounceCalcOnInit) {\n            debouncedCalcHandler();\n        } else {\n            syncCalcHandler();\n        }\n    }\n\n    return object;\n}\n","import set from '../set';\nimport deepFind from '../_helpers/deepfind';\nimport forEach from '../_helpers/foreach';\n\n// creates event handler for target object which will be fired when a source is changed\nexport default function createCalcHandler({\n    object,\n    eventOptions,\n    allSources,\n    target,\n    def,\n    handler\n}) {\n    return function calcHandler(changeEvent = {}) {\n        const values = [];\n        const { protector = {} } = changeEvent;\n        const protectKey = target + def.id;\n        const { promiseCalc } = eventOptions;\n        const setEventOptions = {\n            protector,\n            ...eventOptions,\n            ...changeEvent\n        };\n\n        if (protectKey in protector) {\n            return;\n        }\n\n        protector[protectKey] = true;\n\n        forEach(allSources, ({\n            sourceObject,\n            sourceKey,\n            isDelegated\n        }) => {\n            const value = isDelegated ? deepFind(sourceObject, sourceKey) : sourceObject[sourceKey];\n            values.push(value);\n        });\n\n        let targetValue = handler.apply(object, values);\n\n        if (promiseCalc) {\n            if (!(targetValue instanceof Promise)) {\n                targetValue = Promise.resolve(targetValue);\n            }\n\n            targetValue\n                .then(promiseResult => set(object, target, promiseResult, setEventOptions))\n                .catch((e) => {\n                    throw Error(e);\n                });\n        } else {\n            set(object, target, targetValue, setEventOptions);\n        }\n    };\n}\n","// gets value of a property in nested object\n// eg \"d\" from a.b.c.d\nexport default function deepFind(obj, givenPath) {\n    const paths = typeof givenPath === 'string' ? givenPath.split('.') : givenPath;\n    let current = obj;\n\n    for (let i = 0; i < paths.length; ++i) {\n        if (typeof current[paths[i]] === 'undefined') {\n            return undefined;\n        }\n\n        current = current[paths[i]];\n    }\n\n    return current;\n}\n","import defs from '../_core/defs';\nimport $ from '../_mq';\nimport forEach from '../_helpers/foreach';\n\nconst customSelectorReg = /\\s*:bound\\(([^(]*)\\)\\s*([\\S\\s]*)\\s*/;\nconst randomAttr = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// the function selects nodes based on a selector (including custom values, eg :bound)\n// TODO: selectNodes looks not good, it needs to be refactored and accelerated if possible\nexport default function selectNodes(object, givenSelector) {\n    const { props } = defs.get(object);\n    const selectors = givenSelector.split(',');\n    let result = $();\n\n    forEach(selectors, (selector) => {\n        const execResult = customSelectorReg.exec(selector);\n        if (execResult) {\n            const boundKey = execResult[1];\n            const subSelector = execResult[2];\n            const propDef = props[boundKey];\n\n            if (propDef) {\n                const { bindings } = propDef;\n                if (bindings) {\n                    const boundNodes = Array(bindings.length);\n                    forEach(bindings, (binding, i) => {\n                        boundNodes[i] = binding.node;\n                    });\n\n                    // if native selector passed after :bound(KEY) is not empty string\n                    // for example \":bound(KEY) .my-selector\"\n                    if (subSelector) {\n                        // if native selector contains children selector\n                        // for example \":bound(KEY) > .my-selector\"\n                        if (subSelector.indexOf('>') === 0) {\n                            // selecting children\n                            forEach(boundNodes, (node) => {\n                                node.setAttribute(randomAttr, randomAttr);\n                                const selected = node.querySelectorAll(`[${randomAttr}=\"${randomAttr}\"] ${subSelector}`);\n                                result = result.add(selected);\n                                node.removeAttribute(randomAttr);\n                            });\n                        } else {\n                            // if native selector doesn't contain children selector\n                            forEach(boundNodes, (node) => {\n                                const selected = node.querySelectorAll(subSelector);\n                                result = result.add(selected);\n                            });\n                        }\n                    } else {\n                        // if native selector is empty string just add bound nodes to result\n                        result = result.add(boundNodes);\n                    }\n                }\n            }\n        } else {\n            // if it's native selector (no custom things)\n            result = result.add(selector);\n        }\n    });\n\n    return result;\n}\n","import selectNodes from './_selectnodes';\nimport $ from '../_mq';\n\nconst htmlReg = /</;\nconst customSelectorReg = /:bound\\(([^(]*)\\)/;\n\n// the function works just like DOM library accepting any kind of arg\n// (HTML string, Node, NodeList etc) bu allows to pass custom selector\n// eg :bound(KEY)\nexport default function getNodes(object, selector) {\n    let nodes;\n\n    if (\n        typeof selector === 'string'\n        && !htmlReg.test(selector)\n        && customSelectorReg.test(selector)\n    ) {\n        nodes = selectNodes(object, selector);\n    } else {\n        nodes = $(selector);\n    }\n\n    return nodes;\n}\n","import removeListener from '../off/_removelistener';\nimport triggerOne from '../trigger/_triggerone';\nimport forEach from '../_helpers/foreach';\n\nconst spaceReg = /\\s+/;\n\n// the function removes single binding for single object\n// called by unbindNode\nexport default function removeBinding({\n    object,\n    key,\n    eventOptions,\n    binding\n}) {\n    const {\n        bindingOptions,\n        binder,\n        node,\n        nodeHandler,\n        objectHandler\n    } = binding;\n    const { destroy, on } = binder;\n    const { silent } = eventOptions;\n\n    // if \"on\" is a function then disable it\n    // we cannot \"turn off\" custom listener defined by a programmer\n    // programmer needs to remove custom listener maually inside binder.destroy\n    if (typeof on === 'function') {\n        nodeHandler.disabled = true;\n    } else if (typeof on === 'string') {\n        // remove DOM event listener\n        // removeEventListener is faster than \"on\" method from any DOM library\n        forEach(\n            on.split(spaceReg),\n            evtName => node.removeEventListener(evtName, nodeHandler)\n        );\n    }\n\n    // remove object event listener\n    removeListener(object, `_change:bindings:${key}`, objectHandler);\n\n    // if binder.destroy is given call it\n    if (destroy) {\n        destroy.call(node, bindingOptions);\n    }\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `unbind:${key}`, extendedEventOptions);\n        triggerOne(object, 'unbind', extendedEventOptions);\n    }\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport getNodes from '../bindnode/_getnodes';\nimport removeTreeListener from '../off/_removetreelistener';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport removeBinding from './_removebinding';\n\n// unbinds a node\nexport default function unbindNode(object, key, node, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'unbindNode');\n\n    if (key instanceof Array) {\n        /*\n         * accept array of keys\n         * this.unbindNode(['a', 'b', 'c'], node)\n         */\n        forEach(key, itemKey => unbindNode(object, itemKey, node, eventOptions));\n\n        return object;\n    }\n\n    if (key && typeof key === 'object') {\n        forOwn(key, (keyObjValue, keyObjKey) => {\n            if (keyObjValue.constructor === Object && 'node' in keyObjValue) {\n                // this.unbindNode({ key: { node: $(), binder } ) }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue.node, node);\n            } else if (\n                keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.unbindNode({ key: [{ node: $(), binder }] ) }, { silent: true });\n                forEach(keyObjValue, (keyObjValueItem) => {\n                    unbindNode(object, keyObjKey, keyObjValueItem.node, node);\n                });\n            } else {\n                // this.unbindNode({ key: $() }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue, node);\n            }\n        });\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const { deep } = eventOptions;\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n\n    // allow to pass null or undefined as key\n    // if passed then remove bindings of all keys for given object\n    if (key === null || typeof key === 'undefined') {\n        forOwn(props, (propsItem, propsKey) => {\n            unbindNode(object, propsKey, null, eventOptions);\n        });\n\n        return object;\n    }\n\n    // remove delegated binding\n    if (deep !== false) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            let target = object;\n\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                // TODO: Do we need to throw an error when a target is falsy?\n                target = target[deepPath[i]];\n            }\n\n            // TODO: Potential bug! This may undelegate listener for all bindings with the same path\n            // ...(cannot reproduce)\n            removeTreeListener(object, deepPath.slice(0, deepPathLength - 2));\n\n            unbindNode(target, deepPath[deepPathLength - 1], node, eventOptions);\n\n            return object;\n        }\n    }\n\n    const propDef = props[key];\n\n    // when no propdef do nothing\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    // if the property doesn't have any bindings do nothing\n    if (!bindings) {\n        return object;\n    }\n\n    // if no node is pased remove all bindings for given key\n    if (!node) {\n        forEach(bindings, (binding) => {\n            removeBinding({\n                object, key, eventOptions, binding\n            });\n        });\n\n        propDef.bindings = null;\n\n        return object;\n    }\n\n    const $nodes = getNodes(object, node);\n    const retainBindings = [];\n    const retainNodes = [];\n\n    // iterate over all bindngs and compare their node with given nodes\n    forEach($nodes, (nodesItem) => {\n        forEach(bindings, (binding) => {\n            if (binding.node === nodesItem) {\n                removeBinding({\n                    object, key, eventOptions, binding\n                });\n            } else {\n                retainBindings.push(binding);\n                retainNodes.push(nodesItem);\n            }\n        });\n    });\n\n    // update bindings object\n    if (retainBindings.length) {\n        propDef.bindings = retainBindings;\n    } else {\n        propDef.bindings = null;\n    }\n\n    return object;\n}\n","// returns a binder for input element based on its type\nexport default function input(type) {\n    let on;\n    switch (type) {\n        case 'checkbox':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.checked;\n                },\n                setValue(value) {\n                    this.checked = value;\n                }\n            };\n        case 'radio':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.value;\n                },\n                setValue(value) {\n                    this.checked = typeof value !== 'undefined' && this.value === value;\n                }\n            };\n        case 'submit':\n        case 'button':\n        case 'image':\n        case 'reset':\n            return {};\n        case 'hidden':\n            on = null;\n            break;\n        case 'file':\n            on = 'change';\n            break;\n\n            /*\n            case 'text':\n            case 'password':\n            case 'date':\n            case 'datetime':\n            case 'datetime-local':\n            case 'month':\n            case 'time':\n            case 'week':\n            case 'range':\n            case 'color':\n            case 'search':\n            case 'email':\n            case 'tel':\n            case 'url':\n            case 'file':\n            case 'number': */\n        default: // other future (HTML6+) inputs\n            on = 'input';\n    }\n\n    return {\n        on,\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n        }\n    };\n}\n","import input from './binders/input';\nimport textarea from './binders/textarea';\nimport select from './binders/select';\nimport progress from './binders/progress';\nimport output from './binders/output';\n\n// defaultBinders collection by default contains only one function-checker\nexport default [(node) => {\n    switch (node.tagName) {\n        case 'INPUT':\n            return input(node.type);\n        case 'TEXTAREA':\n            return textarea();\n        case 'SELECT':\n            return select(node.multiple);\n        case 'PROGRESS':\n            return progress();\n        case 'OUTPUT':\n            return output();\n        default:\n            return null;\n    }\n}];\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function textarea() {\n    // textarea behaves just like text input\n    return input('text');\n}\n","// returns a binder for select element\nexport default function select(multiple) {\n    if (multiple) {\n        return {\n            on: 'change',\n            getValue() {\n                const { options } = this;\n                const result = [];\n\n                for (let i = 0; options.length > i; i++) {\n                    if (options[i].selected) {\n                        result.push(options[i].value);\n                    }\n                }\n\n                return result;\n            },\n            setValue(givenValue) {\n                const { options } = this;\n                const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    options[i].selected = ~value.indexOf(options[i].value);\n                }\n            }\n        };\n    }\n\n    return {\n        on: 'change',\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n\n            if (!value) {\n                const { options } = this;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    if (!options[i].value) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function progress() {\n    return input();\n}\n","// returns a binder for output element\nexport default function output() {\n    return {\n        on: null,\n        getValue() {\n            return this.value || this.textContent;\n        },\n        setValue(value) {\n            const property = 'form' in this ? 'value' : 'textContent';\n            this[property] = value === null ? '' : `${value}`;\n        }\n    };\n}\n","import defaultBinders from './defaultbinders';\n\n// tries to find a binder for given node\nexport default function lookForBinder(node) {\n    for (let i = 0; i < defaultBinders.length; i++) {\n        const binder = defaultBinders[i].call(node, node);\n        if (binder) {\n            return binder;\n        }\n    }\n\n    return undefined;\n}\n","import is from '../_helpers/is';\nimport set from '../set';\n\n// returns a function which called when bound node state is changed (eg DOM event is fired)\nexport default function createNodeHandler({\n    object,\n    key,\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function nodeHandler(domEvent = {}) {\n        // nodeHandler.disabled = true is set in unbindNode\n        // we cannot \"turn off\" binder.on when its value is a function\n        // developer needs to clean memory (\"turn off\" callback) manualy in binder.destroy\n        if (nodeHandler.disabled) {\n            return;\n        }\n\n        const previousValue = propDef.value;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n        const { getValue } = binder;\n        const value = getValue.call(node, {\n            previousValue,\n            domEvent,\n            originalEvent: domEvent.originalEvent || domEvent, // jQuery thing\n            // will throw \"preventDefault is not a function\" when domEvent is empty object\n            preventDefault: () => domEvent.preventDefault(),\n            // will throw \"stopPropagation is not a function\" when domEvent is empty object\n            stopPropagation: () => domEvent.stopPropagation(),\n            which,\n            target,\n            ctrlKey,\n            altKey,\n            ...bindingOptions\n        });\n\n        if (!is(value, previousValue)) {\n            set(object, key, value, {\n                fromNode: true,\n                // the following properties are needed to avoid circular changes\n                // they are used at objectHandler\n                changedNode: node,\n                onChangeValue: value,\n                binder\n            });\n        }\n    };\n}\n","import lookForBinder from '../lookforbinder';\nimport createNodeHandler from './_createnodehandler';\nimport createObjectHandler from './_createobjecthandler';\nimport triggerOne from '../trigger/_triggerone';\nimport addListener from '../on/_addlistener';\nimport debounce from '../_helpers/debounce';\nimport assign from '../_helpers/assign';\nimport forEach from '../_helpers/foreach';\n\nconst spaceReg = /\\s+/;\n\n// handles binding for single property & node\n// the function is used at bindNode\nexport default function bindSingleNode(object, {\n    binder: givenBinder,\n    key,\n    $nodes,\n    node,\n    eventOptions,\n    propDef\n}) {\n    const {\n        silent,\n        getValueOnBind,\n        setValueOnBind,\n        // TODO: We probably need some general flag to cancel or force debouncing\n        // ... which overrides the following flags (something like debounceBinding)\n        debounceSetValue = true,\n        debounceGetValue = true,\n        debounceSetValueOnBind = false,\n        debounceGetValueOnBind = false,\n        debounceSetValueDelay = 0,\n        debounceGetValueDelay = 0,\n        useExactBinder = false\n    } = eventOptions;\n    // create bindings array in property definition object\n    const bindings = propDef.bindings = propDef.bindings || [];\n    const { value } = propDef;\n    const bindingOptions = {\n        self: object,\n        key,\n        value,\n        $nodes,\n        node\n    };\n    let isUndefined = typeof value === 'undefined';\n    let binder;\n    let objectHandler;\n    let nodeHandler;\n\n    // get actual binder\n    if (givenBinder !== null) {\n        // by default binder passed to bindNode is extended by default binder\n        // useExactBinder turns this behavior off\n        if (useExactBinder) {\n            binder = givenBinder;\n        } else {\n            // getting default binder\n            const foundBinder = lookForBinder(node);\n\n            // if default binder is found\n            if (foundBinder) {\n                // extend found binder by given binder\n                if (givenBinder) {\n                    assign(foundBinder, givenBinder);\n                }\n\n                binder = foundBinder;\n            } else {\n                // default binder is not found\n                binder = givenBinder || {};\n            }\n        }\n    }\n\n    const {\n        getValue, setValue, on, initialize\n    } = binder;\n\n    // call binder.initialize\n    if (initialize) {\n        initialize.call(node, bindingOptions);\n    }\n\n    // add needed event handlers to given node when getValue is given\n    if (getValue) {\n        const syncNodeHandler = createNodeHandler({\n            object,\n            key,\n            node,\n            propDef,\n            binder,\n            bindingOptions\n        });\n\n        let debouncedNodeHandler;\n\n        if (debounceGetValue || debounceGetValueOnBind) {\n            debouncedNodeHandler = debounce(syncNodeHandler, debounceGetValueDelay);\n        }\n\n        if (debounceGetValue) {\n            nodeHandler = debouncedNodeHandler;\n        } else {\n            nodeHandler = syncNodeHandler;\n        }\n\n        // TODO: Throw error when \"on\" and maybe other binder properties has wrong type\n        if (typeof on === 'function') {\n            on.call(node, nodeHandler, bindingOptions);\n        } else if (typeof on === 'string') {\n            // addEventListener is faster than \"on\" method from any DOM library\n            forEach(\n                on.split(spaceReg),\n                evtName => node.addEventListener(evtName, nodeHandler)\n            );\n        }\n\n        if ((isUndefined && getValueOnBind !== false) || getValueOnBind === true) {\n            if (debounceGetValueOnBind) {\n                debouncedNodeHandler();\n            } else {\n                syncNodeHandler();\n            }\n        }\n\n        isUndefined = typeof propDef.value === 'undefined';\n    }\n\n    // add needed event handlers to the object when setValue is given\n    if (setValue) {\n        const syncObjectHandler = createObjectHandler({\n            node,\n            propDef,\n            binder,\n            bindingOptions,\n            eventOptions\n        });\n\n        let debouncedObjectHandler;\n\n        if (debounceSetValue || debounceSetValueOnBind) {\n            debouncedObjectHandler = debounce(syncObjectHandler, debounceSetValueDelay);\n        }\n\n        if (debounceSetValue) {\n            objectHandler = debouncedObjectHandler;\n        } else {\n            objectHandler = syncObjectHandler;\n        }\n\n        // TODO: Is it possible to get previous value of a property?\n        addListener(object, `_change:bindings:${key}`, objectHandler, { skipChecks: true });\n\n        if ((!isUndefined && setValueOnBind !== false) || setValueOnBind === true) {\n            if (debounceSetValueOnBind) {\n                debouncedObjectHandler();\n            } else {\n                syncObjectHandler();\n            }\n        }\n    }\n\n    // add binding data to bindings array\n    bindings.push({\n        on,\n        node,\n        binder,\n        objectHandler,\n        nodeHandler,\n        bindingOptions\n    });\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `bind:${key}`, extendedEventOptions);\n        triggerOne(object, 'bind', extendedEventOptions);\n    }\n}\n","// returns a function which is called when property value is changed\nexport default function createObjectHandler({\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function objectHandler(eventOptions = {}) {\n        const { value } = propDef;\n        const { onChangeValue, changedNode, binder: evtBinder } = eventOptions;\n        const { setValue } = binder;\n        // a dirty hack for https://github.com/matreshkajs/matreshka/issues/19\n        const dirtyHackValue = onChangeValue === 'string' && typeof value === 'number'\n            ? `${value}` : value;\n\n        // don't call setValue if a property is changed via getValue of the same binder\n        if (changedNode === node && onChangeValue === dirtyHackValue && evtBinder === binder) {\n            return;\n        }\n\n        setValue.call(node, value, {\n            value,\n            ...bindingOptions\n        });\n    };\n}\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport getNodes from './_getnodes';\nimport createBindingSwitcher from './_createbindingswitcher';\nimport bindSingleNode from './_bindsinglenode';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport addTreeListener from '../on/_addtreelistener';\n\n// initializes binsing between a property of an object to HTML node\nexport default function bindNode(object, key, node, binder, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bindNode');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    binder = binder || {}; // eslint-disable-line no-param-reassign\n\n    initDefi(object);\n\n    // throw an error when key is falsy\n    if (!key) {\n        throw defiError('binding:falsy_key');\n    }\n\n    if (key instanceof Array) {\n        /*\n         * accept array of keys\n         * this.bindNode(['a', 'b', 'c'], node)\n         */\n        forEach(key, itemKey => bindNode(object, itemKey, node, binder, eventOptions));\n\n        return object;\n    }\n\n\n    if (typeof key === 'object') {\n        forOwn(key, (keyObjValue, keyObjKey) => {\n            // binder means eventOptions\n            eventOptions = binder; // eslint-disable-line no-param-reassign\n\n            if (\n                keyObjValue\n                && keyObjValue.constructor === Object\n                && 'node' in keyObjValue\n            ) {\n                // this.bindNode({ key: { node: $(), binder } ) }, { on: 'evt' }, { silent: true });\n                bindNode(\n                    object, keyObjKey, keyObjValue.node,\n                    keyObjValue.binder || node, eventOptions\n                );\n            } else if (\n                keyObjValue\n                && keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.bindNode({ key: [{\n                //   node: $(),\n                //   binder\n                // }] ) }, { on: 'evt' }, { silent: true });\n                forEach(keyObjValue, (keyObjValueItem) => {\n                    bindNode(\n                        object, keyObjKey, keyObjValueItem.node,\n                        keyObjValueItem.binder || node, eventOptions\n                    );\n                });\n            } else {\n                // this.bindNode({ key: $() }, { on: 'evt' }, { silent: true });\n                bindNode(object, keyObjKey, keyObjValue, node, eventOptions);\n            }\n        });\n\n        return object;\n    }\n\n    const {\n        optional = false,\n        exactKey = false\n    } = eventOptions;\n    const $nodes = getNodes(object, node);\n\n    // check node existence\n    if (!$nodes.length) {\n        if (optional) {\n            return object;\n        }\n\n        throw defiError('binding:node_missing', { key, node });\n    }\n\n    if (!exactKey) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            // handle binding when key arg includes dots (eg \"a.b.c.d\")\n            const bindingSwitcher = createBindingSwitcher({\n                object,\n                deepPath,\n                $nodes,\n                binder,\n                eventOptions,\n                bindNode\n            });\n\n            addTreeListener(object, deepPath.slice(0, deepPathLength - 1), bindingSwitcher);\n\n            bindingSwitcher();\n\n            return object;\n        }\n    }\n\n    const propDef = defineProp(object, key);\n\n    // handle binding for every node separately\n    forEach($nodes, oneNode => bindSingleNode(object, {\n        $nodes,\n        node: oneNode,\n        key,\n        eventOptions,\n        binder,\n        propDef\n    }));\n\n    return object;\n}\n","import unbindNode from '../unbindnode';\n\n// returns a function which re-adds binding when object branch is changed\n// the function is called by bindNode when something like\n// 'foo.bar.baz' is passed to it as key argument value\n// this is one of the hardest things in the framework to understand\nexport default function createBindingSwitcher({\n    object,\n    deepPath,\n    $nodes,\n    binder,\n    eventOptions,\n    bindNode\n}) {\n    return function bindingSwitcher(changeEvent = {}) {\n        const deepPathLength = deepPath.length;\n        const lastDeepPathItem = deepPath[deepPathLength - 1];\n        const {\n            value, // new value of a branch\n            previousValue, // previous value of a branch\n            restPath // path starting currently changed branch (passed by addTreeListener)\n        } = changeEvent;\n        let target; // an object to call bindNode\n        let previousTarget; // an object to call unbindNode\n\n\n        if (value && typeof value === 'object' && restPath) {\n            // if rest path is given and new value is an object\n            target = value;\n            for (let i = 0; i < restPath.length; i++) {\n                target = target[restPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        } else {\n            // if rest path is not given\n            target = object;\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                target = target[deepPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        }\n\n        // if rest path is given and previous value is an object\n        if (previousValue && typeof previousValue === 'object' && restPath) {\n            previousTarget = previousValue;\n            for (let i = 0; i < restPath.length; i++) {\n                previousTarget = previousTarget[restPath[i]];\n                if (!previousTarget) {\n                    break;\n                }\n            }\n        }\n\n        // add binding for new target\n        if (target && typeof target === 'object') {\n            bindNode(target, lastDeepPathItem, $nodes, binder, eventOptions);\n        }\n\n        // remove binding for previously used object\n        if (previousTarget && typeof previousTarget === 'object') {\n            unbindNode(previousTarget, lastDeepPathItem, $nodes);\n        }\n    };\n}\n","import defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\n\n// the function returns bound node(s)\nexport default function bound(object, key, { all } = { all: false }) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bound');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return all ? [] : null;\n    }\n\n    const def = defs.get(object);\n    const propDef = def.props[key];\n\n    let nodes;\n\n    if (propDef) {\n        const { bindings } = propDef;\n        nodes = (bindings && bindings.map(({ node }) => node)) || [];\n    } else {\n        nodes = [];\n    }\n\n    return all ? nodes : nodes[0] || null;\n}\n","import unbindNode from './unbindnode';\nimport triggerOne from './trigger/_triggerone';\nimport removeListener from './off/_removelistener';\nimport defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport defiError from './_helpers/defierror';\nimport forEach from './_helpers/foreach';\n\n// removes a property, its bindings and its events\n// TODO: remove function does not correctly removes delegated events, bindings, tree listeners etc\nexport default function remove(object, givenKey, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'remove');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n    const { silent } = eventOptions;\n    // allow to pass single key or an array of keys\n    const keys = givenKey instanceof Array ? givenKey : [givenKey];\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('remove:key_type', { key });\n        }\n\n        const props = def && def.props;\n        const propDef = props && props[key];\n\n        // if no object definition then simply delete the property\n        if (!propDef) {\n            delete object[key];\n            continue;\n        }\n\n        const { value } = propDef;\n\n        // remove all bindings\n        unbindNode(object, key);\n\n        // TODO: Manual listing of event prefixes may cause problems in future\n        const removeEventPrefies = [\n            '_change:deps',\n            '_change:bindings',\n            '_change:delegated',\n            '_change:tree',\n            'change',\n            'beforechange',\n            'bind',\n            'unbind'\n        ];\n\n        // remove all events\n        forEach(removeEventPrefies, prefix => removeListener(object, `${prefix}:${key}`));\n\n        // delete property definition\n        delete props[key];\n\n        // delete the property itself\n        delete object[key];\n\n        const extendedEventOptions = {\n            key,\n            value,\n            ...eventOptions\n        };\n\n        // trigger delegated events logic removal for asterisk events (*.*.*@foo)\n        triggerOne(object, '_delete:delegated', extendedEventOptions);\n\n        // fire events if \"silent\" is not true\n        if (!silent) {\n            triggerOne(object, 'delete', extendedEventOptions);\n            triggerOne(object, `delete:${key}`, extendedEventOptions);\n        }\n    }\n}\n","import initDefi from './_core/init';\nimport defineProp from './_core/defineprop';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport set from './set';\nimport defiError from './_helpers/defierror';\nimport forOwn from './_helpers/forown';\nimport forEach from './_helpers/foreach';\n\n// creates property mediator\nfunction createMediator({\n    object,\n    propDef,\n    key,\n    mediator\n}) {\n    return function propMediator(value) {\n        // args: value, previousValue, key, object itself\n        return mediator.call(object, value, propDef.value, key, object);\n    };\n}\n\n// transforms property value on its changing\nexport default function mediate(object, givenKeys, mediator) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'mediate');\n\n    const isKeysArray = givenKeys instanceof Array;\n\n    // allow to use key-mediator object as another method variation\n    if (typeof givenKeys === 'object' && !isKeysArray) {\n        forOwn(givenKeys, (objVal, objKey) => mediate(object, objKey, objVal));\n        return object;\n    }\n\n    initDefi(object);\n\n    // allow to use both single key and an array of keys\n    const keys = isKeysArray ? givenKeys : [givenKeys];\n\n    forEach(keys, (key) => {\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('mediate:key_type', { key });\n        }\n\n        const propDef = defineProp(object, key);\n\n        const propMediator = propDef.mediator = createMediator({\n            object,\n            propDef,\n            key,\n            mediator\n        });\n\n        // set new value\n        set(object, key, propMediator(propDef.value), {\n            fromMediator: true\n        });\n    });\n\n    return object;\n}\n","import checkObjectType from './_helpers/checkobjecttype';\nimport * as functions from './_lib';\nimport forEach from './_helpers/foreach';\n\n// create a prototype of ChainClass\n// store target object at \"object\" property\nconst prototype = {\n    constructor(object) {\n        this.object = object;\n    }\n};\n\nconst funcNames = Object.keys(functions);\n\n// iterate over all universal methods\nfor (let i = 0; i < funcNames.length; i++) {\n    const funcName = funcNames[i];\n    const method = functions[funcName];\n\n    // create every chained method\n    prototype[funcName] = function chainedMethod() {\n        const args = [this.object];\n\n        forEach(arguments, (argument) => {\n            args.push(argument);\n        });\n\n        method(...args);\n\n        // returning this is important for chained calls\n        return this;\n    };\n}\n\n\nconst ChainClass = function ChainClass(object) {\n    this.object = object;\n};\n\nChainClass.prototype = prototype;\n\n// the function allows to chain static function calls on any object\nexport default function chain(object) {\n    // check for type and throw an error if it is not an object and is not a function\n    checkObjectType(object, 'chain');\n\n    return new ChainClass(object);\n}\n","import * as functions from './_lib';\n\nimport lookForBinder from './lookforbinder';\nimport chain from './chain';\nimport defaultBinders from './defaultbinders';\n\nexport default Object.assign({}, functions, {\n    lookForBinder,\n    chain,\n    defaultBinders\n});\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport addListener from './_addlistener';\nimport $ from '../_mq';\nimport createDomEventHandler from './_createdomeventhandler';\nimport forEach from '../_helpers/foreach';\n\n// returns an object with event handlers used at addDomListener\nfunction createBindingHandlers({\n    fullEventName,\n    domEventHandler,\n    selector\n}) {\n    return {\n        bindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).on(fullEventName, selector, domEventHandler);\n            }\n        },\n        unbindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).off(fullEventName, selector, domEventHandler);\n            }\n        }\n    };\n}\n\n// adds DOM event listener for nodes bound to given property\nexport default function addDomListener(object, key, eventName, selector, callback, info) {\n    const def = initDefi(object);\n    const propDef = defineProp(object, key);\n\n    const domEventHandler = createDomEventHandler({\n        key,\n        object,\n        callback\n    });\n\n    // making possible to remove this event listener\n    domEventHandler._callback = callback;\n\n    const eventNamespace = def.id + key;\n    const fullEventName = `${eventName}.${eventNamespace}`;\n    const { bindHandler, unbindHandler } = createBindingHandlers({\n        fullEventName,\n        domEventHandler,\n        selector\n    });\n    const addBindListenerResult = addListener(object, `bind:${key}`, bindHandler, info);\n    const addUnbindListenerResult = addListener(object, `unbind:${key}`, unbindHandler, info);\n\n    // if events are added successfully then run bindHandler for every node immediately\n    // TODO: Describe why do we need addBindListenerResult and addUnbindListenerResult\n    if (addBindListenerResult && addUnbindListenerResult) {\n        const { bindings } = propDef;\n        if (bindings) {\n            forEach(bindings, ({ node }) => bindHandler({ node }));\n        }\n    }\n\n    return object;\n}\n","// returns DOM event handler\nexport default function createDomEventHandler({\n    key,\n    object,\n    callback\n}) {\n    return function domEventHandler(domEvent) {\n        const originalEvent = domEvent.originalEvent || domEvent;\n        // defiTriggerArgs are created when DOM event is triggered by trigger method\n        const triggerArgs = originalEvent.defiTriggerArgs;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n\n        if (triggerArgs) {\n            // if args are passed to trigger method then pass them to an event handler\n            callback.apply(object, triggerArgs);\n        } else {\n            // use the following object as an arg for event handler\n            callback.call(object, {\n                self: object,\n                node: this,\n                preventDefault: () => domEvent.preventDefault(),\n                stopPropagation: () => domEvent.stopPropagation(),\n                key,\n                domEvent,\n                originalEvent,\n                which,\n                target,\n                ctrlKey,\n                altKey\n            });\n        }\n    };\n}\n"],"sourceRoot":""}