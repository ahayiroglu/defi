{"version":3,"sources":["webpack://defi/webpack/universalModuleDefinition","webpack://defi/webpack/bootstrap","webpack://defi/./src/_helpers/foreach.js","webpack://defi/./node_modules/@babel/runtime/helpers/typeof.js","webpack://defi/./src/trigger/_triggerone.js","webpack://defi/./src/_core/defs.js","webpack://defi/./src/_helpers/checkobjecttype.js","webpack://defi/./src/_helpers/defierror.js","webpack://defi/./src/_helpers/forown.js","webpack://defi/./node_modules/@babel/runtime/helpers/objectSpread.js","webpack://defi/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://defi/./src/on/_addlistener.js","webpack://defi/./src/set.js","webpack://defi/./src/off/_removelistener.js","webpack://defi/./src/_mq/_html2nodelist.js","webpack://defi/./src/_mq/_init.js","webpack://defi/./src/_mq/_data.js","webpack://defi/./src/_mq/on.js","webpack://defi/./src/_mq/off.js","webpack://defi/./src/_mq/index.js","webpack://defi/./src/_mq/parsehtml.js","webpack://defi/./src/_mq/add.js","webpack://defi/./src/_core/init.js","webpack://defi/./src/_core/defineprop.js","webpack://defi/./src/_helpers/assign.js","webpack://defi/./src/on/_domeventregexp.js","webpack://defi/./src/off/_undelegatelistener.js","webpack://defi/./src/on/_delegatelistener/changehandler.js","webpack://defi/./src/on/_delegatelistener/index.js","webpack://defi/./src/_helpers/is.js","webpack://defi/./src/_helpers/slice.js","webpack://defi/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://defi/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://defi/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://defi/./src/off/_removedomlistener.js","webpack://defi/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://defi/./src/on/_splitbyspaceregexp.js","webpack://defi/./src/off/index.js","webpack://defi/./src/_helpers/debounce.js","webpack://defi/./src/on/index.js","webpack://defi/./src/trigger/_triggeronedomevent.js","webpack://defi/./src/trigger/index.js","webpack://defi/./src/trigger/_triggerdomevent.js","webpack://defi/./src/off/_removetreelistener.js","webpack://defi/./src/on/_addtreelistener.js","webpack://defi/./src/calc/_addsource.js","webpack://defi/./src/calc/index.js","webpack://defi/./src/calc/_createcalchandler.js","webpack://defi/./src/_helpers/deepfind.js","webpack://defi/./src/bindnode/_selectnodes.js","webpack://defi/./src/bindnode/_getnodes.js","webpack://defi/./src/unbindnode/_removebinding.js","webpack://defi/./src/unbindnode/index.js","webpack://defi/./src/binders/input.js","webpack://defi/./src/defaultbinders.js","webpack://defi/./src/binders/textarea.js","webpack://defi/./src/binders/select.js","webpack://defi/./src/binders/progress.js","webpack://defi/./src/binders/output.js","webpack://defi/./src/lookforbinder.js","webpack://defi/./src/bindnode/_bindsinglenode.js","webpack://defi/./src/bindnode/index.js","webpack://defi/./src/bindnode/_createbindingswitcher.js","webpack://defi/./src/bindnode/_createnodehandler.js","webpack://defi/./src/bindnode/_createobjecthandler.js","webpack://defi/./src/bound.js","webpack://defi/./src/remove.js","webpack://defi/./src/mediate.js","webpack://defi/./src/chain.js","webpack://defi/./src/index.js","webpack://defi/./src/on/_adddomlistener.js","webpack://defi/./src/on/_createdomeventhandler.js"],"names":["root","factory","exports","module","define","amd","defi","window","installedModules","__webpack_require__","m","forEach","arr","callback","i","l","length","d","__webpack_exports__","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","triggerOne","_core_defs__WEBPACK_IMPORTED_MODULE_0__","object","name","triggerArgs","def","defs","get","events","Array","latestEvent","apply","call","info","e","t","n","_helpers_assign__WEBPACK_IMPORTED_MODULE_0__","PseudoMap","assign","set","data","Object","defineProperty","value","enumerable","writable","configurable","has","a","WeakMap","checkObjectType","method","typeofObject","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default","defiError","getTypeError","variable","variableName","expectedType","concat","o","bindingErrorPrefix","calcErrorPrefix","errors","common:object_type","_ref","binding:node_missing","_ref2","key","node","selectorInfo","binding:falsy_key","calc:target_type","_ref3","target","calc:source_key_type","_ref4","sourceKey","calc:source_object_type","_ref5","sourceObject","calc:source_type","_ref6","source","trigger:names_type","_ref7","names","on:names_type","_ref8","remove:key_type","_ref9","mediate:key_type","_ref10","getError","Error","forOwn","keys","require","arguments","ownKeys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","arrayWithHoles","iterableToArrayLimit","nonIterableRest","propModEventReg","addListener","allEvents","initDefi","event","_info$skipChecks","skipChecks","domEventExecResult","domEventReg","exec","_domEventExecResult","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","eventName","selector","default","existingEvent","_callback","push","test","defineProp","replace","I","r","N","M","H","K","T","C","$","eventOptions","_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default","objVal","objKey","props","propDef","newValue","previousValue","mediator","_eventOptions","skipMediator","fromMediator","force","forceHTML","silent","silentHTML","skipCalc","is","isChanged","extendedEventOptions","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","self","triggerChange","beforechangeStr","beforechangeEventName","changeBindingsEventName","changeStr","changeEventName","changeDepsEventName","changeDelegatedKeyEventName","changeTreeEventName","changeCommonEventName","changeDelegatedEventName","removeListener","retain","noTrigger","allEventsItem","allEventsName","removeEventData","argCallback","eventCallback","c","html2nodeList","givenHTML","wrapMap","option","legend","thead","tr","td","col","area","_","html","document","createElement","optgroup","tbody","tfoot","colgroup","caption","th","ex","wrapper","innerHTML","children","childNodes","win","MQInit","context","result","nodeType","typeof_default","newContext","querySelectorAll","this","_data","nodeIndex","splitBySpaceReg","splitByDotReg","randomID","Math","random","toString","mq","Init","parseHTML","on","namesStr","handler","delegate","split","evt","scopeSelector","splittedSelector","matching","sel","setAttribute","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","removeAttribute","_names$i$split","_names$i$split2","slicedToArray_default","namespace","j","nodeID","b$","exist","k","addEventListener","off","removeEventListener","splice","add","idMap","nodes","_defs__WEBPACK_IMPORTED_MODULE_0__","objectId","id","_set__WEBPACK_IMPORTED_MODULE_1__","bindings","v","fromSetter","g","s","b","p","undelegateListener","givenPath","path","pathStr","slice","join","delegatedChangeEvtName","delegatedEventName","changeHandler","delegatedData","delegateListener","_delegatelistener_delegateListener","v1","v2","arrLike","start","end","_end","isArray","_arr","_n","_d","_e","_s","_i","next","done","err","return","TypeError","removeDomListener","_removelistener__WEBPACK_IMPORTED_MODULE_1__","_mq__WEBPACK_IMPORTED_MODULE_2__","_helpers_foreach__WEBPACK_IMPORTED_MODULE_3__","eventNamespace","binding","index","_splitbyspaceregexp","O","G","givenNames","isNamesVarArray","namesObjCallback","namesObjName","propName","delegatedEventParts","_delegatedEventParts","delegatedName","debounce","func","givenDelay","thisArg","timeout","delay","args","callContext","clearTimeout","setTimeout","givenCallback","options","triggerOnInit","once","debounceOption","onceCallback","triggerOneDOMEvent","Event","bubbles","cancelable","defiTriggerArgs","dispatchEvent","trigger","_len","_key","domEvtExecResult","_domEvtExecResult","descendants","descendant","removeTreeListener","deepPath","listenedPath","createTreeListener","newHandler","changeEvent","extendedChangeEvent","objectSpread_default","restPath","addTreeListener","listenPath","addSource","calcHandler","allSources","_eventOptions$exactKe","exactKey","isDelegated","calc","sources","givenHandler","itemTarget","itemSource","itemHandler","itemEventOptions","commonEventOptions","mergedEventOptions","debouncedCalcHandler","_eventOptions$setOnIn","setOnInit","_eventOptions$debounc","debounceCalcOnInit","_eventOptions$debounc2","debounceCalc","_eventOptions$debounc3","debounceCalcDelay","syncCalcHandler","values","_changeEvent$protecto","protector","protectKey","promiseCalc","setEventOptions","paths","current","targetValue","Promise","resolve","then","promiseResult","catch","sourceKeyItem","customSelectorReg","randomAttr","htmlReg","getNodes","givenSelector","selectors","execResult","boundKey","subSelector","boundNodes","indexOf","selected","spaceReg","removeBinding","bindingOptions","binder","nodeHandler","objectHandler","destroy","disabled","evtName","unbindNode","itemKey","keyObjValue","keyObjKey","keyObjValueItem","deep","propsItem","propsKey","deepPathLength","$nodes","retainBindings","retainNodes","nodesItem","input","type","getValue","checked","setValue","defaultbinders","tagName","multiple","givenValue","textContent","lookForBinder","defaultBinders","bindNode","_eventOptions$optiona","optional","bindingSwitcher","previousTarget","lastDeepPathItem","oneNode","givenBinder","getValueOnBind","setValueOnBind","debounceSetValue","debounceGetValue","debounceSetValueOnBind","_eventOptions$debounc4","debounceGetValueOnBind","_eventOptions$debounc5","debounceSetValueDelay","_eventOptions$debounc6","debounceGetValueDelay","_eventOptions$useExac","useExactBinder","isUndefined","foundBinder","_binder","initialize","debouncedNodeHandler","syncNodeHandler","domEvent","which","ctrlKey","altKey","originalEvent","preventDefault","stopPropagation","fromNode","changedNode","onChangeValue","debouncedObjectHandler","syncObjectHandler","evtBinder","dirtyHackValue","bindSingleNode","bound","all","map","remove","givenKey","_loop","prefix","mediate","givenKeys","isKeysArray","propMediator","funcNames","functions","funcName","argument","chain_loop","ChainClass","chain","addDomListener","domEventHandler","_createBindingHandler","fullEventName","bindHandler","unbindHandler","addBindListenerResult","addUnbindListenerResult","getter","toStringTag","mode","__esModule","ns","create","bind","property","hasOwnProperty","moduleId","modules"],"mappings":"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","file":"defi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"defi\"] = factory();\n\telse\n\t\troot[\"defi\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","export default function forEach(arr, callback) {\n    let i = 0;\n    const l = arr.length;\n\n    for (; i < l; i++) {\n        callback(arr[i], i);\n    }\n}\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","import defs from '../_core/defs';\n\n// triggers one event\nexport default function triggerOne(object, name, triggerArgs) {\n    const def = defs.get(object);\n    const events = def && def.events[name];\n\n    if (events) {\n        const l = events.length;\n        let i = 0;\n\n        // allow to pass both array of args and single arg as triggerArgs\n        if (triggerArgs instanceof Array) {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.apply(object, triggerArgs);\n                i += 1;\n            }\n        } else {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.call(object, triggerArgs);\n                i += 1;\n            }\n        }\n    }\n}\n\n// latestEvent is used as required hack in somemethods\ntriggerOne.latestEvent = {\n    info: {},\n    name: null\n};\n","import assign from '../_helpers/assign';\n\nfunction PseudoMap() {}\n\n// PseudoMap simulates WeakMap behavior with O(1) search complexity\n// it's needed to support @IE9 and @IE10\nassign(PseudoMap.prototype, {\n    get(obj) {\n        return obj.defi;\n    },\n    set(obj, data) {\n        Object.defineProperty(obj, 'defi', {\n            value: data,\n            enumerable: false,\n            writable: false,\n            configurable: false\n        });\n    },\n    has(obj) {\n        return 'defi' in obj;\n    }\n});\n\nexport default typeof WeakMap === 'undefined' ? new PseudoMap() : new WeakMap();\n","import defiError from './defierror';\n\n// checks type of a variable and throws an error if its type is not an object\nexport default function checkObjectType(object, method) {\n    const typeofObject = object === null ? 'null' : typeof object;\n\n    if (typeofObject !== 'object' && typeofObject !== 'function') {\n        throw defiError('common:object_type', {\n            object,\n            method\n        });\n    }\n}\n","/* eslint-disable prefer-template, max-len */\nconst bindingErrorPrefix = 'Binding error:';\nconst calcErrorPrefix = 'Calc error:';\nconst eventsErrorPrefix = 'Events error:';\n\nconst getType = (variable) => {\n    if (variable === null) {\n        return 'null';\n    }\n\n    return typeof variable;\n};\nconst getTypeError = (variable, variableName, expectedType) => `${variableName} must have type \"${expectedType}\" but got \"${getType(variable)}\" instead.`;\n\nconst errors = {\n    'common:object_type': ({ object, method }) => `Error in ${method}: `\n        + getTypeError(object, 'object', 'object'),\n\n    'binding:node_missing': ({ key, node }) => {\n        const selectorInfo = typeof node === 'string' ? ` (given selector is \"${node}\")` : '';\n        return `${bindingErrorPrefix} node is missing for key \"${key}\"${selectorInfo}.`;\n    },\n    'binding:falsy_key': () => `${bindingErrorPrefix} \"key\" arg cannot be falsy`,\n    'calc:target_type': ({ target }) => `${calcErrorPrefix} ${getTypeError(target, 'target key', 'string')}`,\n    'calc:source_key_type': ({ sourceKey }) => `${calcErrorPrefix} ${getTypeError(sourceKey, 'source key', 'string')}`,\n    'calc:source_object_type': ({ sourceObject }) => `${calcErrorPrefix} ${getTypeError(sourceObject, 'source object', 'object')}`,\n    'calc:source_type': ({ source }) => `${calcErrorPrefix} ${getTypeError(source, 'source', 'object')}`,\n\n    'trigger:names_type': ({ names }) => `${eventsErrorPrefix} ${getTypeError(names, 'event name', 'string')}`,\n\n    'on:names_type': ({ names }) => errors['trigger:names_type']({ names }),\n\n    'remove:key_type': ({ key }) => `Error in remove: ${getTypeError(key, 'key', 'string')}`,\n\n    'mediate:key_type': ({ key }) => `Error in mediate: ${getTypeError(key, 'key', 'string')}`\n};\n\nexport default function defiError(key, data) {\n    const getError = errors[key];\n    if (!getError) {\n        /* istanbul ignore next */\n        throw Error(`Unknown error \"${key}\". Please report about this on Github.`);\n    }\n\n    return new Error(getError(data));\n}\n","export default function forOwn(obj, callback) {\n    const keys = Object.keys(obj);\n    const l = keys.length;\n    let i = 0;\n    let key;\n\n    while (i < l) {\n        key = keys[i++];\n        callback(obj[key], key);\n    }\n}\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import initDefi from '../_core/init';\nimport triggerOne from '../trigger/_triggerone';\nimport defineProp from '../_core/defineprop';\nimport domEventReg from './_domeventregexp';\n\n// property modifier event regexp\n// eslint-disable-next-line max-len\nconst propModEventReg = /^_change:deps:|^_change:bindings:|^_change:delegated:|^_change:common:|^_change:tree:|^change:|^beforechange:/;\n\n// adds simple event listener\n// used as core of event engine\nexport default function addListener(object, name, callback, info = {}) {\n    const { events: allEvents } = initDefi(object);\n    const events = allEvents[name];\n    const event = {\n        callback, name, info\n    };\n\n    // skipChecks is used by internal methods for better performance\n    const { skipChecks = false } = info;\n\n    if (!skipChecks) {\n        const domEventExecResult = domEventReg.exec(name);\n\n        if (domEventExecResult) {\n            const [, eventName, key, selector] = domEventExecResult;\n            // fixing circular reference issue\n            const { default: addDomListener } = require('./_adddomlistener');\n\n            addDomListener(object, key, eventName, selector, callback, info);\n\n            return true;\n        }\n    }\n\n    // if there are events with the same name\n    if (events) {\n        if (!skipChecks) {\n            // if there are events with the same data, return false\n            for (let i = 0; i < events.length; i++) {\n                const existingEvent = events[i];\n                const argCallback = (callback && callback._callback) || callback;\n                const eventCallback = existingEvent.callback._callback || existingEvent.callback;\n                if (argCallback === eventCallback) {\n                    return false;\n                }\n            }\n        }\n\n        // if the event isn't found add it to the event list\n        events.push(event);\n    } else {\n        // if there are no events with the same name, create an array with only  one event\n        allEvents[name] = [event];\n    }\n\n    if (propModEventReg.test(name)) {\n        // define needed accessors for KEY\n        defineProp(object, name.replace(propModEventReg, ''));\n    }\n\n    // names prefixed by underscore mean \"private\" events\n    if (!skipChecks && name[0] !== '_') {\n        triggerOne(object, `addevent:${name}`, event);\n        triggerOne(object, 'addevent', event);\n    }\n\n    // if event is added successfully return true\n    return true;\n}\n","import defs from './_core/defs';\nimport triggerOne from './trigger/_triggerone';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport is from './_helpers/is';\nimport forOwn from './_helpers/forown';\n\n// the function sets new value for a property\n// since its performance is very critical we're checking events existence manually\nexport default function set(object, key, value, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'set');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return object;\n    }\n\n    // allow to use key-value object as another method variation\n    if (typeof key === 'object') {\n        forOwn(key, (objVal, objKey) => set(object, objKey, objVal, value));\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n\n    // if no object definition then make simple assignment\n    if (!def) {\n        object[key] = value;\n        return object;\n    }\n\n    const { props, events } = def;\n    const propDef = props[key];\n\n    // if no property definition then make simple assignment\n    if (!propDef) {\n        object[key] = value;\n        return object;\n    }\n\n    const { value: previousValue, mediator } = propDef;\n\n    // possible flags, all of them are falsy by default\n    const {\n        skipMediator,\n        fromMediator,\n        force,\n        forceHTML,\n        silent,\n        silentHTML,\n        skipCalc\n    } = eventOptions;\n\n    let newValue;\n\n    if (mediator && !is(value, previousValue) && !skipMediator && !fromMediator) {\n        newValue = mediator(value);\n    } else {\n        newValue = value;\n    }\n\n    const isChanged = !is(newValue, previousValue);\n\n    // add to eventOptions object some useful properties\n    // we override default eventOptions because some of the properties need to have actual values,\n    // not inherited ones (eg when calc is used)\n    const extendedEventOptions = {\n        ...eventOptions,\n        value: newValue,\n        self: object,\n        previousValue,\n        key,\n        isChanged\n    };\n\n    const triggerChange = (isChanged || force) && !silent;\n\n    // trigger beforechange:KEY and beforechange events\n    if (triggerChange) {\n        const beforechangeStr = 'beforechange';\n        const beforechangeEventName = `${beforechangeStr}:${key}`;\n\n        if (events[beforechangeEventName]) {\n            triggerOne(object, beforechangeEventName, extendedEventOptions);\n        }\n\n        if (events[beforechangeStr]) {\n            triggerOne(object, beforechangeStr, extendedEventOptions);\n        }\n    }\n\n    propDef.value = newValue;\n\n    // triger bindings\n    if (!silentHTML && (isChanged || forceHTML)) {\n        const changeBindingsEventName = `_change:bindings:${key}`;\n        if (events[changeBindingsEventName]) {\n            triggerOne(object, changeBindingsEventName, extendedEventOptions);\n        }\n    }\n\n    // trigger change:KEY and change events\n    if (triggerChange) {\n        const changeStr = 'change';\n        const changeEventName = `${changeStr}:${key}`;\n        if (events[changeEventName]) {\n            triggerOne(object, changeEventName, extendedEventOptions);\n        }\n\n        if (events[changeStr]) {\n            triggerOne(object, changeStr, extendedEventOptions);\n        }\n    }\n\n    // trigger dependencies made by calc method\n    if ((isChanged || force) && !skipCalc) {\n        const changeDepsEventName = `_change:deps:${key}`;\n        if (events[changeDepsEventName]) {\n            triggerOne(object, changeDepsEventName, extendedEventOptions);\n        }\n    }\n\n\n    if (isChanged) {\n        // trigger common delegated events logic\n        const changeDelegatedKeyEventName = `_change:delegated:${key}`;\n        if (events[changeDelegatedKeyEventName]) {\n            triggerOne(object, changeDelegatedKeyEventName, extendedEventOptions);\n        }\n\n        // trigger tree change events logic\n        const changeTreeEventName = `_change:tree:${key}`;\n        if (events[changeTreeEventName]) {\n            triggerOne(object, changeTreeEventName, extendedEventOptions);\n        }\n\n        // trigger other internal change events\n        const changeCommonEventName = `_change:common:${key}`;\n        if (events[changeCommonEventName]) {\n            triggerOne(object, changeCommonEventName, extendedEventOptions);\n        }\n\n        // trigger delegated logic for asterisk events (*.*.*@foo)\n        // TODO: Confusing events names (\"_change:delegated\", \"_change:common:KEY\" etc)\n        const changeDelegatedEventName = '_change:delegated';\n        if (events[changeDelegatedEventName]) {\n            triggerOne(object, changeDelegatedEventName, extendedEventOptions);\n        }\n    }\n\n    return object;\n}\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport domEventReg from '../on/_domeventregexp';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\n\n// removes simple event listener from an object\nexport default function removeListener(object, name, callback, info) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return false;\n    }\n\n    const { events: allEvents } = def;\n    const events = allEvents[name];\n    const retain = [];\n    const noTrigger = name ? name[0] === '_' : false;\n    const domEventExecResult = domEventReg.exec(name);\n\n    if (domEventExecResult) {\n        const [, eventName, key, selector] = domEventExecResult;\n        // fixing circular reference issue\n        const { default: removeDomListener } = require('./_removedomlistener');\n\n        removeDomListener(object, key, eventName, selector, callback, info);\n\n        return true;\n    }\n\n    // if all events need to be removed\n    if (typeof name === 'undefined') {\n        if (!noTrigger) {\n            forOwn(allEvents, (allEventsItem, allEventsName) => {\n                forEach(allEventsItem, (event) => {\n                    const removeEventData = {\n                        allEventsName,\n                        callback: event.callback\n                    };\n\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                });\n            });\n        }\n\n        // restore default value of \"events\"\n        def.events = {};\n    } else if (events) {\n        // if events with given name are found\n        forEach(events, (event) => {\n            const argCallback = (callback && callback._callback) || callback;\n            const eventCallback = event.callback._callback || event.callback;\n\n            if (argCallback && argCallback !== eventCallback) {\n                // keep event\n                retain.push(event);\n            } else {\n                const removeEventData = {\n                    name,\n                    callback: event.callback\n                };\n\n                if (!noTrigger) {\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                }\n            }\n        });\n\n        if (retain.length) {\n            allEvents[name] = retain;\n        } else {\n            delete def.events[name];\n        }\n    }\n\n    return false;\n}\n","// converts HTML string to NodeList instance\nexport default function html2nodeList(givenHTML) {\n    // wrapMap is taken from jQuery\n    const wrapMap = {\n        option: [1, '<select multiple=\"multiple\">', '</select>'],\n        legend: [1, '<fieldset>', '</fieldset>'],\n        thead: [1, '<table>', '</table>'],\n        tr: [2, '<table><tbody>', '</tbody></table>'],\n        td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n        area: [1, '<map>', '</map>'],\n        _: [0, '', '']\n    };\n\n    const html = givenHTML.replace(/^\\s+|\\s+$/g, '');\n    let node = window.document.createElement('div');\n    let i;\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    const ex = /<([\\w:]+)/.exec(html);\n    const wrapper = (ex && wrapMap[ex[1]]) || wrapMap._;\n\n    node.innerHTML = wrapper[1] + html + wrapper[2];\n\n    i = wrapper[0];\n\n    while (i) {\n        i -= 1;\n        node = node.children[0];\n    }\n\n    return node.childNodes;\n}\n","import html2nodeList from './_html2nodelist';\n\nconst win = window;\n\n// function-constructor of mq library\n// accepts many kinds of arguments (selector, html, function)\nfunction MQInit(selector, context) {\n    let result;\n\n    if (selector) {\n        if (selector.nodeType || (typeof win === 'object' && selector === win)) {\n            result = [selector];\n        } else if (typeof selector === 'string') {\n            if (/</.test(selector)) {\n                result = html2nodeList(selector);\n            } else if (context) {\n                const newContext = (new MQInit(context))[0];\n\n                if (newContext) {\n                    result = newContext.querySelectorAll(selector);\n                }\n            } else {\n                result = win.document.querySelectorAll(selector);\n            }\n        } else if ('length' in selector) {\n            // if it's something array-like (eg NodeList)\n            result = selector;\n        } else {\n            // this is somethong another (eg Attr)\n            result = [selector];\n        }\n    }\n\n    const length = result && result.length;\n\n    if (length) {\n        for (let i = 0; i < length; i++) {\n            this.push(result[i]);\n        }\n    }\n}\n\nMQInit.prototype = [];\n\nexport default MQInit;\n","// an object allows to share data between modules; it's needed because we use\n// simplified ES modules there and cannot import and share a number\nexport default {\n    nodeIndex: 0,\n    allEvents: {}\n};\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n    return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n    const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n    const splittedSelector = selector.split(',');\n\n    let matching = '';\n\n    for (let i = 0; i < splittedSelector.length; i++) {\n        const sel = splittedSelector[i];\n        matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n    }\n\n\n    this.setAttribute(randomID, randomID);\n\n    if (is(evt.target, matching)) {\n        handler.call(this, evt);\n    }\n\n    this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n    const names = namesStr.split(splitBySpaceReg);\n    let delegate;\n\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (selector) {\n        delegate = function uniqueDelegateHandler(evt) {\n            delegateHandler.call(this, evt, selector, handler);\n        };\n    }\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n            let exist = false;\n\n            for (let k = 0; k < events.length; k++) {\n                const event = events[k];\n\n                if (handler === event.handler && (!selector || selector === event.selector)) {\n                    exist = true;\n                    break;\n                }\n            }\n\n            if (!exist) {\n                events.push({\n                    delegate,\n                    handler,\n                    namespace,\n                    selector,\n                    nodeID,\n                    name\n                });\n\n                node.addEventListener(name, delegate || handler, false);\n            }\n        }\n    }\n\n    return this;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\n\n// removes event handler from a set of elements\nexport default function off(namesStr, selector, handler) {\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    const names = namesStr.split(splitBySpaceReg);\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n\n            if (!name && namespace) {\n                for (let k = 0, keys = Object.keys(data.allEvents); k < keys.length; k++) {\n                    const events = data.allEvents[keys[k]];\n\n                    for (let l = 0; l < events.length; l++) {\n                        const event = events[i];\n                        if (event.namespace === namespace && event.nodeID === node.b$) {\n                            node.removeEventListener(event.name, event.delegate || event.handler);\n                            events.splice(l, 1);\n                            l -= 1;\n                        }\n                    }\n                }\n\n                continue;\n            }\n\n            const events = data.allEvents[name + node.b$];\n            if (events) {\n                for (let k = 0; k < events.length; k++) {\n                    const event = events[k];\n                    if (\n                        (!handler || handler === event.handler || handler === event.delegate)\n                        && (!namespace || namespace === event.namespace)\n                        && (!selector || selector === event.selector)\n                    ) {\n                        node.removeEventListener(name, event.delegate || event.handler);\n                        events.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n            } else if (!namespace && !selector) {\n                node.removeEventListener(name, handler);\n            }\n        }\n    }\n\n    return this;\n}\n","import Init from './_init';\nimport parseHTML from './parsehtml';\nimport on from './on';\nimport off from './off';\nimport add from './add';\nimport assign from '../_helpers/assign';\n\n// a tiny jQuery-like library\nexport default function mq(selector, context) {\n    return new Init(selector, context);\n}\n\nmq.parseHTML = parseHTML;\n\nassign(Init.prototype, {\n    on,\n    off,\n    add\n});\n","import html2nodeList from './_html2nodelist';\nimport Init from './_init';\n\n// parses given HTML and returns mq instance\nexport default function parseHTML(html) {\n    return new Init(html2nodeList(html));\n}\n","import Init from './_init';\nimport data from './_data';\n\n// adds unique nodes to mq collection\nexport default function add(selector) {\n    const idMap = {};\n\n    let result;\n\n    const nodes = new Init(selector);\n\n    if (this.length) {\n        result = new Init();\n        for (let i = 0; i < this.length; i++) {\n            const node = this[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            idMap[nodeID] = 1;\n            result.push(node);\n        }\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            if (!idMap[nodeID]) {\n                idMap[nodeID] = 1;\n                result.push(node);\n            }\n        }\n    } else {\n        result = nodes;\n    }\n\n    return result;\n}\n","import defs from './defs';\n\nlet objectId = 0;\n\n// this is a common function which associates an object with its defi definition\nexport default function initDefi(object) {\n    let def = defs.get(object);\n    if (!def) {\n        def = {\n            // a property name of \"events\" object is an event name\n            // and a value is an array of event handlers\n            events: {\n                /* example: {\n                    callback: function,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n            },\n            // \"props\" contains special information about properties (getters, setters etc)\n            props: {\n                /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                } */\n            },\n            id: objectId\n        };\n\n        objectId += 1;\n\n        defs.set(object, def);\n    }\n\n    return def;\n}\n","import defs from './defs';\nimport set from '../set';\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key) {\n    const def = defs.get(object);\n\n    // if no object definition do nothing\n    if (!def) {\n        return null;\n    }\n\n    if (!def.props[key]) {\n        const propDef = def.props[key] = {\n            value: object[key],\n            mediator: null,\n            bindings: null\n        };\n\n        Object.defineProperty(object, key, {\n            configurable: true,\n            enumerable: true,\n            get() {\n                return propDef.value;\n            },\n            set(v) {\n                return set(object, key, v, {\n                    fromSetter: true\n                });\n            }\n        });\n    }\n\n    return def.props[key];\n}\n","export default function assign(target, source) {\n    const keys = Object.keys(source);\n    let i = keys.length;\n    let key;\n\n    while (--i >= 0) {\n        key = keys[i];\n        target[key] = source[key];\n    }\n\n    return target;\n}\n","// the regexp allows to parse things like \"click::x(.y)\"\n// it's shared between few modules\nexport default /([^::]+)::([^()]+)?(?:\\((.*)\\))?/;\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport slice from '../_helpers/slice';\nimport forEach from '../_helpers/foreach';\n\n// the function removes internally used events such as _asterisk:add\nfunction detatchDelegatedLogic({\n    delegatedEventName,\n    pathStr,\n    allEvents\n}) {\n    const retain = [];\n    const events = allEvents[delegatedEventName];\n\n    forEach(events, (event) => {\n        // pathStr is assigned to info in delegateListener\n        if (event.info.pathStr !== pathStr) {\n            retain.push(event);\n        }\n    });\n\n    if (retain.length) {\n        allEvents[delegatedEventName] = retain;\n    } else {\n        delete allEvents[delegatedEventName];\n    }\n}\n\n// removes delegated event listener from an object by given path\nexport default function undelegateListener(object, givenPath, name, callback, info = {}) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return;\n    }\n\n    const { events: allEvents } = def;\n\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then remove listener\n        removeListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr;\n\n        if (path.length > 1) {\n            path = slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n\n        const delegatedChangeEvtName = `_change:delegated:${key}`;\n        if (allEvents[delegatedChangeEvtName]) {\n            detatchDelegatedLogic({\n                delegatedEventName: delegatedChangeEvtName,\n                pathStr,\n                allEvents\n            });\n        }\n\n        if (typeof object[key] === 'object') {\n            undelegateListener(object[key], path, name, callback, info);\n        }\n    }\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\n\n// the function is called when some part of a path is changed\n// it delegates event listener for new branch of an object and undelegates it for old one\n// used for non-asterisk events\nexport default function changeHandler({\n    previousValue,\n    value\n}, {\n    path,\n    name,\n    callback,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (value && typeof value === 'object') {\n        const { default: delegateListener } = require('./'); // fixing circular ref\n\n        delegateListener(value, path, name, callback, info);\n    }\n\n    if (previousValue && typeof previousValue === 'object') {\n        undelegateListener(previousValue, path, name, callback, info);\n    }\n}\n","import addListener from '../_addlistener';\nimport changeHandler from './changehandler';\nimport slice from '../../_helpers/slice';\n\n// adds delegated event listener to an object by given path\n// TODO Handler uses wrong context\nexport default function delegateListener(object, givenPath, name, callback, info = {}) {\n    // if typeof path is string and path is not empty string then split it\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then add simple listener\n        addListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr; // needed for undelegation\n\n        if (path.length > 1) {\n            path = slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n        const delegatedData = {\n            path,\n            name,\n            callback,\n            info,\n            object\n        };\n\n        // the event is triggered by \"set\";\n        // a new function is created as a handler to make possible\n        // to add the handler multiple times for one key\n        addListener(object, `_change:delegated:${key}`, evt => changeHandler(evt), {\n            delegatedData,\n            pathStr\n        });\n\n        // call handler manually\n        changeHandler({\n            value: object[key]\n        }, delegatedData);\n    }\n}\n","// determines whether two values are the same value\n/* istanbul ignore next */\nconst isPolyfill = (v1, v2) => v1 === 0 && v2 === 0 ? 1 / v1 === 1 / v2 : v1 !== v1 && v2 !== v2 || v1 === v2; // eslint-disable-line\n\nexport default Object.is || isPolyfill;\n","export default function (arrLike, start, end) {\n    const l = arrLike.length;\n    let i = start || 0;\n    const _end = end || l;\n    const arr = Array(_end - i);\n    let j = 0;\n\n    while (i < _end) {\n        arr[j++] = arrLike[i++];\n    }\n\n    return arr;\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport $ from '../_mq';\nimport forEach from '../_helpers/foreach';\n\n// removes dom listener from nodes bound to given key\nexport default function removeDomListener(\n    object,\n    key,\n    eventName,\n    selector,\n    callback,\n    info\n) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // collect bound nodes and remove DOM event listener\n        const nodes = Array(bindings.length);\n        const eventNamespace = def.id + key;\n\n        forEach(bindings, (binding, index) => {\n            nodes[index] = binding.node;\n        });\n\n        $(nodes).off(`${eventName}.${eventNamespace}`, selector, callback);\n    }\n\n    // remove bind and unbind listeners from given key\n    removeListener(object, `bind:${key}`, callback, info);\n    removeListener(object, `unbind:${key}`, callback, info);\n\n    return object;\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","// allows to split by spaces not inclusing ones inside of brackers\nexport default /\\s+(?![^(]*\\))/g;\n","import splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport undelegateListener from './_undelegatelistener';\nimport $ from '../_mq';\n\n// removes event listener\nexport default function off(object, givenNames, callback) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'off');\n\n    const isNamesVarArray = givenNames instanceof Array;\n    const def = defs.get(object);\n\n    // allow to pass name-handler object\n    // TODO: Name-handler object passed to off method is non-documented feature\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        forOwn(givenNames, (namesObjCallback, namesObjName) => off(\n            object, namesObjName, namesObjCallback, callback,\n        ));\n        return object;\n    }\n\n\n    if (!givenNames && !callback) {\n        def.events = {};\n\n        forOwn(def.props, ({ bindings }, propName) => {\n            if (bindings) {\n                forEach(bindings, ({ node }) => {\n                    const eventNamespace = def.id + propName;\n                    $(node).off(`.${eventNamespace}`);\n                });\n            }\n        });\n\n        return object;\n    }\n\n    // TODO: Array of names passed to off method is non-documented feature\n    // split by spaces\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n        if (delegatedEventParts.length > 1) {\n            const [path, delegatedName] = delegatedEventParts;\n            undelegateListener(object, path, delegatedName, callback);\n        } else {\n            removeListener(object, name, callback);\n        }\n    });\n\n    return object;\n}\n","// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds.\n// (c) https://davidwalsh.name/javascript-debounce-function\n\nexport default function debounce(func, givenDelay, thisArg) {\n    let timeout;\n    let delay;\n    if (typeof givenDelay !== 'number') {\n        thisArg = givenDelay; // eslint-disable-line no-param-reassign\n        delay = 0;\n    } else {\n        delay = givenDelay || 0;\n    }\n\n    return function debounced() {\n        const args = arguments;\n        const callContext = thisArg || this;\n\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => func.apply(callContext, args), delay);\n    };\n}\n","import splitBySpaceReg from './_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport off from '../off';\nimport debounce from '../_helpers/debounce';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport addListener from './_addlistener';\nimport delegateListener from './_delegatelistener';\n\n// adds event listener\nexport default function on(object, givenNames, givenCallback, options) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'on');\n\n    const isNamesVarArray = givenNames instanceof Array;\n\n    // allow to pass name-handler object\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        forOwn(givenNames, (namesObjCallback, namesObjName) => on(\n            object, namesObjName, namesObjCallback, givenCallback, options,\n        ));\n        return object;\n    }\n\n    if (typeof givenNames !== 'string' && !isNamesVarArray) {\n        throw defiError('on:names_type', { names: givenNames });\n    }\n\n    // split by spaces\n    // TODO: Array of names passed to on method is a non-documented feature\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    const { triggerOnInit, once, debounce: debounceOption } = options || {};\n    let callback;\n    if (once) {\n        callback = function onceCallback() {\n            givenCallback.apply(this, arguments);\n            // remove event listener after its call\n            off(object, names, onceCallback);\n        };\n\n        // allow to remove event listener py passing original callback to \"off\"\n        callback._callback = givenCallback;\n    } else if (typeof debounceOption === 'number' || debounceOption === true) {\n        callback = debounce(givenCallback, debounceOption === true ? 0 : debounceOption, object);\n    } else {\n        callback = givenCallback;\n    }\n\n    forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n\n        if (delegatedEventParts.length > 1) {\n            // if @ exists in event name then this is delegated event\n            const [path, delegatedName] = delegatedEventParts;\n            delegateListener(object, path, delegatedName, callback);\n        } else {\n            // if not, this is simple event\n            addListener(object, name, callback);\n        }\n    });\n\n    // call callback immediatelly if triggerOnInit is true\n    if (triggerOnInit) {\n        callback.call(object, options);\n    }\n\n    return object;\n}\n","// triggers given DOM event on given node\nexport default function triggerOneDOMEvent({\n    node,\n    eventName,\n    triggerArgs\n}) {\n    const { Event } = window;\n    const event = new Event(eventName, {\n        bubbles: true,\n        cancelable: true\n    });\n\n    // defiTriggerArgs will be used in a handler created by addDOMListener\n    event.defiTriggerArgs = triggerArgs;\n\n    node.dispatchEvent(event);\n}\n","import domEventReg from '../on/_domeventregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport defs from '../_core/defs';\nimport triggerOne from './_triggerone';\nimport triggerDomEvent from './_triggerdomevent';\nimport forEach from '../_helpers/foreach';\n\n// triggers an event\nexport default function trigger(object, givenNames, ...triggerArgs) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'trigger');\n    let names;\n\n    // allow to use strings only as event name\n    if (typeof givenNames === 'string') {\n        names = givenNames.split(splitBySpaceReg);\n    } else {\n        throw defiError('trigger:names_type', { names: givenNames });\n    }\n\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return object;\n    }\n\n    const { events: allEvents } = def;\n\n    if (!allEvents) {\n        return object;\n    }\n\n    forEach(names, (name) => {\n        const domEvtExecResult = domEventReg.exec(name);\n\n        if (domEvtExecResult) {\n            // if EVT::KEY(SELECTOR) ia passed as event name then trigger DOM event\n            const [, eventName, key, selector] = domEvtExecResult;\n            triggerDomEvent(object, key, eventName, selector, triggerArgs);\n        } else {\n            // trigger ordinary event\n            triggerOne(object, name, triggerArgs);\n        }\n    });\n\n    return object;\n}\n","import triggerOneDOMEvent from './_triggeronedomevent';\nimport defs from '../_core/defs';\nimport forEach from '../_helpers/foreach';\n\n// triggers DOM event on bound nodes\nexport default function triggerDOMEvent(object, key, eventName, selector, triggerArgs) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return;\n    }\n\n    const { bindings } = propDef;\n\n    if (!bindings) {\n        return;\n    }\n\n    forEach(bindings, ({ node }) => {\n        if (selector) {\n            // if selector is given trigger an event on all node descendants\n            const descendants = node.querySelectorAll(selector);\n            forEach(descendants, (descendant) => {\n                triggerOneDOMEvent({\n                    node: descendant,\n                    eventName,\n                    triggerArgs\n                });\n            });\n        } else {\n            // trigger an event for single node\n            triggerOneDOMEvent({\n                node,\n                eventName,\n                triggerArgs\n            });\n        }\n    });\n}\n","import undelegateListener from './_undelegatelistener';\n\n// removes tree listener from all object tree of fiven path\nexport default function removeTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over keys of the path and undelegate given handler (can be undefined)\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice is slow\n        const listenedPath = deepPath.slice(0, i);\n\n        undelegateListener(\n            object,\n            listenedPath,\n            `_change:tree:${deepPath[i]}`,\n            handler\n        );\n    }\n}\n","import delegateListener from './_delegatelistener';\nimport removeTreeListener from '../off/_removetreelistener';\n\n// creates tree listener\nfunction createTreeListener({ handler, restPath }) {\n    const newHandler = function treeListener(changeEvent) {\n        const extendedChangeEvent = {\n            restPath,\n            ...changeEvent\n        };\n        const { previousValue, value } = changeEvent;\n\n        // removes listener for all branches of the path on old object\n        if (previousValue && typeof previousValue === 'object') {\n            removeTreeListener(previousValue, restPath, handler);\n        }\n\n        // adds listener for all branches of \"restPath\" path on newly assigned object\n        if (value && typeof value === 'object') {\n            addTreeListener(value, restPath, handler);\n        }\n\n        // call original handler\n        handler.call(this, extendedChangeEvent);\n    };\n\n    newHandler._callback = handler;\n\n    return newHandler;\n}\n\n// listens changes for all branches of given path\n// one of the most hard functions to understand\nexport default function addTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over all keys and delegate listener for all objects of given branch\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice method is slow\n        const listenPath = deepPath.slice(0, i);\n        const restPath = deepPath.slice(i + 1);\n\n        delegateListener(\n            object,\n            listenPath,\n            `_change:tree:${deepPath[i]}`,\n            createTreeListener({\n                handler,\n                restPath\n            })\n        );\n    }\n}\n","import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport defiError from '../_helpers/defierror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n    calcHandler,\n    allSources,\n    sourceKey,\n    sourceObject,\n    eventOptions\n}) {\n    let { exactKey = false } = eventOptions;\n    let isDelegated = false;\n\n    // source key must be a string\n    if (typeof sourceKey !== 'string') {\n        throw defiError('calc:source_key_type', { sourceKey });\n    }\n\n    // source object must be an object\n    if (!sourceObject || typeof sourceObject !== 'object') {\n        throw defiError('calc:source_object_type', { sourceObject });\n    }\n\n    if (!exactKey) {\n        const deepPath = sourceKey.split('.');\n\n        // if something like a.b.c is used as a key\n        if (deepPath.length > 1) {\n            isDelegated = true;\n            // TODO: Avoid collisions with bindings by using another event name\n            // ... instead of _change:tree:xxx\n            addTreeListener(sourceObject, deepPath, calcHandler);\n        } else {\n            exactKey = true;\n        }\n    }\n\n\n    if (exactKey) {\n        // normal handler\n        addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n    }\n\n    allSources.push({\n        sourceKey,\n        sourceObject,\n        isDelegated\n    });\n}\n","import initDefi from '../_core/init';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport debounce from '../_helpers/debounce';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport assign from '../_helpers/assign';\nimport addSource from './_addsource';\nimport createCalcHandler from './_createcalchandler';\nimport defineProp from '../_core/defineprop';\n\n// defines a property which is dependend on other properties\nexport default function calc(object, target, sources, givenHandler, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'calc');\n\n    if (target instanceof Object) {\n        /*\n         * accept an object\n         * this.calc({target: { source, handler, event } }, commonEventOptions);\n         */\n        forOwn(target, ({\n            source: itemSource,\n            handler: itemHandler,\n            options: itemEventOptions\n        }, itemTarget) => {\n            const commonEventOptions = sources;\n            const mergedEventOptions = {};\n\n            if (commonEventOptions) {\n                // extend event object by \"global\" event\n                assign(mergedEventOptions, commonEventOptions);\n            }\n\n            if (itemEventOptions) {\n                // extend event object by \"local\" event (\"event\" key of an object)\n                assign(mergedEventOptions, itemEventOptions);\n            }\n\n            calc(object, itemTarget, itemSource, itemHandler, mergedEventOptions);\n        });\n\n        return object;\n    }\n\n    if (typeof target !== 'string') {\n        throw defiError('calc:target_type', { target });\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = initDefi(object);\n    const {\n        setOnInit = true,\n        debounceCalcOnInit = false,\n        debounceCalc = true,\n        debounceCalcDelay = 0\n    } = eventOptions;\n    const defaultHandler = value => value;\n    const handler = givenHandler || defaultHandler;\n    const allSources = [];\n    const syncCalcHandler = createCalcHandler({\n        object,\n        eventOptions,\n        allSources,\n        target,\n        def,\n        handler\n    });\n\n    let debouncedCalcHandler;\n    let calcHandler;\n\n    if (debounceCalcOnInit || debounceCalc) {\n        debouncedCalcHandler = debounce(syncCalcHandler, debounceCalcDelay);\n    }\n\n    defineProp(object, target);\n\n    if (!(sources instanceof Array)) {\n        sources = [sources]; // eslint-disable-line no-param-reassign\n    }\n\n    if (debounceCalc) {\n        calcHandler = debouncedCalcHandler;\n    } else {\n        calcHandler = syncCalcHandler;\n    }\n\n    forEach(sources, (source) => {\n        if (typeof source === 'string') {\n            // source object is current object\n            addSource({\n                calcHandler,\n                allSources,\n                sourceKey: source,\n                sourceObject: object,\n                eventOptions\n            });\n        } else {\n            // source object is external object\n            if (!source || typeof source !== 'object') {\n                throw defiError('calc:source_type', { source });\n            }\n\n            const sourceKey = source.key;\n            const sourceObject = source.object;\n            if (sourceKey instanceof Array) {\n                // many keys are passed\n                forEach(sourceKey, (sourceKeyItem) => {\n                    addSource({\n                        calcHandler,\n                        allSources,\n                        sourceKey: sourceKeyItem,\n                        sourceObject,\n                        eventOptions\n                    });\n                });\n            } else {\n                // one key is passed\n                addSource({\n                    calcHandler,\n                    allSources,\n                    sourceKey,\n                    sourceObject,\n                    eventOptions\n                });\n            }\n        }\n    });\n\n    if (setOnInit) {\n        if (debounceCalcOnInit) {\n            debouncedCalcHandler();\n        } else {\n            syncCalcHandler();\n        }\n    }\n\n    return object;\n}\n","import set from '../set';\nimport deepFind from '../_helpers/deepfind';\nimport forEach from '../_helpers/foreach';\n\n// creates event handler for target object which will be fired when a source is changed\nexport default function createCalcHandler({\n    object,\n    eventOptions,\n    allSources,\n    target,\n    def,\n    handler\n}) {\n    return function calcHandler(changeEvent = {}) {\n        const values = [];\n        const { protector = {} } = changeEvent;\n        const protectKey = target + def.id;\n        const { promiseCalc } = eventOptions;\n        const setEventOptions = {\n            protector,\n            ...eventOptions,\n            ...changeEvent\n        };\n\n        if (protectKey in protector) {\n            return;\n        }\n\n        protector[protectKey] = true;\n\n        forEach(allSources, ({\n            sourceObject,\n            sourceKey,\n            isDelegated\n        }) => {\n            const value = isDelegated ? deepFind(sourceObject, sourceKey) : sourceObject[sourceKey];\n            values.push(value);\n        });\n\n        let targetValue = handler.apply(object, values);\n\n        if (promiseCalc) {\n            if (!(targetValue instanceof Promise)) {\n                targetValue = Promise.resolve(targetValue);\n            }\n\n            targetValue\n                .then(promiseResult => set(object, target, promiseResult, setEventOptions))\n                .catch((e) => {\n                    throw Error(e);\n                });\n        } else {\n            set(object, target, targetValue, setEventOptions);\n        }\n    };\n}\n","// gets value of a property in nested object\n// eg \"d\" from a.b.c.d\nexport default function deepFind(obj, givenPath) {\n    const paths = typeof givenPath === 'string' ? givenPath.split('.') : givenPath;\n    let current = obj;\n\n    for (let i = 0; i < paths.length; ++i) {\n        if (typeof current[paths[i]] === 'undefined') {\n            return undefined;\n        }\n\n        current = current[paths[i]];\n    }\n\n    return current;\n}\n","import defs from '../_core/defs';\nimport $ from '../_mq';\nimport forEach from '../_helpers/foreach';\n\nconst customSelectorReg = /\\s*:bound\\(([^(]*)\\)\\s*([\\S\\s]*)\\s*/;\nconst randomAttr = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// the function selects nodes based on a selector (including custom values, eg :bound)\n// TODO: selectNodes looks not good, it needs to be refactored and accelerated if possible\nexport default function selectNodes(object, givenSelector) {\n    const { props } = defs.get(object);\n    const selectors = givenSelector.split(',');\n    let result = $();\n\n    forEach(selectors, (selector) => {\n        const execResult = customSelectorReg.exec(selector);\n        if (execResult) {\n            const boundKey = execResult[1];\n            const subSelector = execResult[2];\n            const propDef = props[boundKey];\n\n            if (propDef) {\n                const { bindings } = propDef;\n                if (bindings) {\n                    const boundNodes = Array(bindings.length);\n                    forEach(bindings, (binding, i) => {\n                        boundNodes[i] = binding.node;\n                    });\n\n                    // if native selector passed after :bound(KEY) is not empty string\n                    // for example \":bound(KEY) .my-selector\"\n                    if (subSelector) {\n                        // if native selector contains children selector\n                        // for example \":bound(KEY) > .my-selector\"\n                        if (subSelector.indexOf('>') === 0) {\n                            // selecting children\n                            forEach(boundNodes, (node) => {\n                                node.setAttribute(randomAttr, randomAttr);\n                                const selected = node.querySelectorAll(`[${randomAttr}=\"${randomAttr}\"] ${subSelector}`);\n                                result = result.add(selected);\n                                node.removeAttribute(randomAttr);\n                            });\n                        } else {\n                            // if native selector doesn't contain children selector\n                            forEach(boundNodes, (node) => {\n                                const selected = node.querySelectorAll(subSelector);\n                                result = result.add(selected);\n                            });\n                        }\n                    } else {\n                        // if native selector is empty string just add bound nodes to result\n                        result = result.add(boundNodes);\n                    }\n                }\n            }\n        } else {\n            // if it's native selector (no custom things)\n            result = result.add(selector);\n        }\n    });\n\n    return result;\n}\n","import selectNodes from './_selectnodes';\nimport $ from '../_mq';\n\nconst htmlReg = /</;\nconst customSelectorReg = /:bound\\(([^(]*)\\)/;\n\n// the function works just like DOM library accepting any kind of arg\n// (HTML string, Node, NodeList etc) bu allows to pass custom selector\n// eg :bound(KEY)\nexport default function getNodes(object, selector) {\n    let nodes;\n\n    if (\n        typeof selector === 'string'\n        && !htmlReg.test(selector)\n        && customSelectorReg.test(selector)\n    ) {\n        nodes = selectNodes(object, selector);\n    } else {\n        nodes = $(selector);\n    }\n\n    return nodes;\n}\n","import removeListener from '../off/_removelistener';\nimport triggerOne from '../trigger/_triggerone';\nimport forEach from '../_helpers/foreach';\n\nconst spaceReg = /\\s+/;\n\n// the function removes single binding for single object\n// called by unbindNode\nexport default function removeBinding({\n    object,\n    key,\n    eventOptions,\n    binding\n}) {\n    const {\n        bindingOptions,\n        binder,\n        node,\n        nodeHandler,\n        objectHandler\n    } = binding;\n    const { destroy, on } = binder;\n    const { silent } = eventOptions;\n\n    // if \"on\" is a function then disable it\n    // we cannot \"turn off\" custom listener defined by a programmer\n    // programmer needs to remove custom listener maually inside binder.destroy\n    if (typeof on === 'function') {\n        nodeHandler.disabled = true;\n    } else if (typeof on === 'string') {\n        // remove DOM event listener\n        // removeEventListener is faster than \"on\" method from any DOM library\n        forEach(\n            on.split(spaceReg),\n            evtName => node.removeEventListener(evtName, nodeHandler)\n        );\n    }\n\n    // remove object event listener\n    removeListener(object, `_change:bindings:${key}`, objectHandler);\n\n    // if binder.destroy is given call it\n    if (destroy) {\n        destroy.call(node, bindingOptions);\n    }\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `unbind:${key}`, extendedEventOptions);\n        triggerOne(object, 'unbind', extendedEventOptions);\n    }\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport getNodes from '../bindnode/_getnodes';\nimport removeTreeListener from '../off/_removetreelistener';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport removeBinding from './_removebinding';\n\n// unbinds a node\nexport default function unbindNode(object, key, node, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'unbindNode');\n\n    if (key instanceof Array) {\n        /*\n         * accept array of keys\n         * this.unbindNode(['a', 'b', 'c'], node)\n         */\n        forEach(key, itemKey => unbindNode(object, itemKey, node, eventOptions));\n\n        return object;\n    }\n\n    if (key && typeof key === 'object') {\n        forOwn(key, (keyObjValue, keyObjKey) => {\n            if (keyObjValue.constructor === Object && 'node' in keyObjValue) {\n                // this.unbindNode({ key: { node: $(), binder } ) }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue.node, node);\n            } else if (\n                keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.unbindNode({ key: [{ node: $(), binder }] ) }, { silent: true });\n                forEach(keyObjValue, (keyObjValueItem) => {\n                    unbindNode(object, keyObjKey, keyObjValueItem.node, node);\n                });\n            } else {\n                // this.unbindNode({ key: $() }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue, node);\n            }\n        });\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const { deep } = eventOptions;\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n\n    // allow to pass null or undefined as key\n    // if passed then remove bindings of all keys for given object\n    if (key === null || typeof key === 'undefined') {\n        forOwn(props, (propsItem, propsKey) => {\n            unbindNode(object, propsKey, null, eventOptions);\n        });\n\n        return object;\n    }\n\n    // remove delegated binding\n    if (deep !== false) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            let target = object;\n\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                // TODO: Do we need to throw an error when a target is falsy?\n                target = target[deepPath[i]];\n            }\n\n            // TODO: Potential bug! This may undelegate listener for all bindings with the same path\n            // ...(cannot reproduce)\n            removeTreeListener(object, deepPath.slice(0, deepPathLength - 2));\n\n            unbindNode(target, deepPath[deepPathLength - 1], node, eventOptions);\n\n            return object;\n        }\n    }\n\n    const propDef = props[key];\n\n    // when no propdef do nothing\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    // if the property doesn't have any bindings do nothing\n    if (!bindings) {\n        return object;\n    }\n\n    // if no node is pased remove all bindings for given key\n    if (!node) {\n        forEach(bindings, (binding) => {\n            removeBinding({\n                object, key, eventOptions, binding\n            });\n        });\n\n        propDef.bindings = null;\n\n        return object;\n    }\n\n    const $nodes = getNodes(object, node);\n    const retainBindings = [];\n    const retainNodes = [];\n\n    // iterate over all bindngs and compare their node with given nodes\n    forEach($nodes, (nodesItem) => {\n        forEach(bindings, (binding) => {\n            if (binding.node === nodesItem) {\n                removeBinding({\n                    object, key, eventOptions, binding\n                });\n            } else {\n                retainBindings.push(binding);\n                retainNodes.push(nodesItem);\n            }\n        });\n    });\n\n    // update bindings object\n    if (retainBindings.length) {\n        propDef.bindings = retainBindings;\n    } else {\n        propDef.bindings = null;\n    }\n\n    return object;\n}\n","// returns a binder for input element based on its type\nexport default function input(type) {\n    let on;\n    switch (type) {\n        case 'checkbox':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.checked;\n                },\n                setValue(value) {\n                    this.checked = value;\n                }\n            };\n        case 'radio':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.value;\n                },\n                setValue(value) {\n                    this.checked = typeof value !== 'undefined' && this.value === value;\n                }\n            };\n        case 'submit':\n        case 'button':\n        case 'image':\n        case 'reset':\n            return {};\n        case 'hidden':\n            on = null;\n            break;\n        case 'file':\n            on = 'change';\n            break;\n\n            /*\n            case 'text':\n            case 'password':\n            case 'date':\n            case 'datetime':\n            case 'datetime-local':\n            case 'month':\n            case 'time':\n            case 'week':\n            case 'range':\n            case 'color':\n            case 'search':\n            case 'email':\n            case 'tel':\n            case 'url':\n            case 'file':\n            case 'number': */\n        default: // other future (HTML6+) inputs\n            on = 'input';\n    }\n\n    return {\n        on,\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n        }\n    };\n}\n","import input from './binders/input';\nimport textarea from './binders/textarea';\nimport select from './binders/select';\nimport progress from './binders/progress';\nimport output from './binders/output';\n\n// defaultBinders collection by default contains only one function-checker\nexport default [(node) => {\n    switch (node.tagName) {\n        case 'INPUT':\n            return input(node.type);\n        case 'TEXTAREA':\n            return textarea();\n        case 'SELECT':\n            return select(node.multiple);\n        case 'PROGRESS':\n            return progress();\n        case 'OUTPUT':\n            return output();\n        default:\n            return null;\n    }\n}];\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function textarea() {\n    // textarea behaves just like text input\n    return input('text');\n}\n","// returns a binder for select element\nexport default function select(multiple) {\n    if (multiple) {\n        return {\n            on: 'change',\n            getValue() {\n                const { options } = this;\n                const result = [];\n\n                for (let i = 0; options.length > i; i++) {\n                    if (options[i].selected) {\n                        result.push(options[i].value);\n                    }\n                }\n\n                return result;\n            },\n            setValue(givenValue) {\n                const { options } = this;\n                const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    options[i].selected = ~value.indexOf(options[i].value);\n                }\n            }\n        };\n    }\n\n    return {\n        on: 'change',\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n\n            if (!value) {\n                const { options } = this;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    if (!options[i].value) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function progress() {\n    return input();\n}\n","// returns a binder for output element\nexport default function output() {\n    return {\n        on: null,\n        getValue() {\n            return this.value || this.textContent;\n        },\n        setValue(value) {\n            const property = 'form' in this ? 'value' : 'textContent';\n            this[property] = value === null ? '' : `${value}`;\n        }\n    };\n}\n","import defaultBinders from './defaultbinders';\n\n// tries to find a binder for given node\nexport default function lookForBinder(node) {\n    for (let i = 0; i < defaultBinders.length; i++) {\n        const binder = defaultBinders[i].call(node, node);\n        if (binder) {\n            return binder;\n        }\n    }\n\n    return undefined;\n}\n","import lookForBinder from '../lookforbinder';\nimport createNodeHandler from './_createnodehandler';\nimport createObjectHandler from './_createobjecthandler';\nimport triggerOne from '../trigger/_triggerone';\nimport addListener from '../on/_addlistener';\nimport debounce from '../_helpers/debounce';\nimport assign from '../_helpers/assign';\nimport forEach from '../_helpers/foreach';\n\nconst spaceReg = /\\s+/;\n\n// handles binding for single property & node\n// the function is used at bindNode\nexport default function bindSingleNode(object, {\n    binder: givenBinder,\n    key,\n    $nodes,\n    node,\n    eventOptions,\n    propDef\n}) {\n    const {\n        silent,\n        getValueOnBind,\n        setValueOnBind,\n        // TODO: We probably need some general flag to cancel or force debouncing\n        // ... which overrides the following flags (something like debounceBinding)\n        debounceSetValue = true,\n        debounceGetValue = true,\n        debounceSetValueOnBind = false,\n        debounceGetValueOnBind = false,\n        debounceSetValueDelay = 0,\n        debounceGetValueDelay = 0,\n        useExactBinder = false\n    } = eventOptions;\n    // create bindings array in property definition object\n    const bindings = propDef.bindings = propDef.bindings || [];\n    const { value } = propDef;\n    const bindingOptions = {\n        self: object,\n        key,\n        value,\n        $nodes,\n        node\n    };\n    let isUndefined = typeof value === 'undefined';\n    let binder;\n    let objectHandler;\n    let nodeHandler;\n\n    // get actual binder\n    if (givenBinder !== null) {\n        // by default binder passed to bindNode is extended by default binder\n        // useExactBinder turns this behavior off\n        if (useExactBinder) {\n            binder = givenBinder;\n        } else {\n            // getting default binder\n            const foundBinder = lookForBinder(node);\n\n            // if default binder is found\n            if (foundBinder) {\n                // extend found binder by given binder\n                if (givenBinder) {\n                    assign(foundBinder, givenBinder);\n                }\n\n                binder = foundBinder;\n            } else {\n                // default binder is not found\n                binder = givenBinder || {};\n            }\n        }\n    }\n\n    const {\n        getValue, setValue, on, initialize\n    } = binder;\n\n    // call binder.initialize\n    if (initialize) {\n        initialize.call(node, bindingOptions);\n    }\n\n    // add needed event handlers to given node when getValue is given\n    if (getValue) {\n        const syncNodeHandler = createNodeHandler({\n            object,\n            key,\n            node,\n            propDef,\n            binder,\n            bindingOptions\n        });\n\n        let debouncedNodeHandler;\n\n        if (debounceGetValue || debounceGetValueOnBind) {\n            debouncedNodeHandler = debounce(syncNodeHandler, debounceGetValueDelay);\n        }\n\n        if (debounceGetValue) {\n            nodeHandler = debouncedNodeHandler;\n        } else {\n            nodeHandler = syncNodeHandler;\n        }\n\n        // TODO: Throw error when \"on\" and maybe other binder properties has wrong type\n        if (typeof on === 'function') {\n            on.call(node, nodeHandler, bindingOptions);\n        } else if (typeof on === 'string') {\n            // addEventListener is faster than \"on\" method from any DOM library\n            forEach(\n                on.split(spaceReg),\n                evtName => node.addEventListener(evtName, nodeHandler)\n            );\n        }\n\n        if ((isUndefined && getValueOnBind !== false) || getValueOnBind === true) {\n            if (debounceGetValueOnBind) {\n                debouncedNodeHandler();\n            } else {\n                syncNodeHandler();\n            }\n        }\n\n        isUndefined = typeof propDef.value === 'undefined';\n    }\n\n    // add needed event handlers to the object when setValue is given\n    if (setValue) {\n        const syncObjectHandler = createObjectHandler({\n            node,\n            propDef,\n            binder,\n            bindingOptions,\n            eventOptions\n        });\n\n        let debouncedObjectHandler;\n\n        if (debounceSetValue || debounceSetValueOnBind) {\n            debouncedObjectHandler = debounce(syncObjectHandler, debounceSetValueDelay);\n        }\n\n        if (debounceSetValue) {\n            objectHandler = debouncedObjectHandler;\n        } else {\n            objectHandler = syncObjectHandler;\n        }\n\n        // TODO: Is it possible to get previous value of a property?\n        addListener(object, `_change:bindings:${key}`, objectHandler, { skipChecks: true });\n\n        if ((!isUndefined && setValueOnBind !== false) || setValueOnBind === true) {\n            if (debounceSetValueOnBind) {\n                debouncedObjectHandler();\n            } else {\n                syncObjectHandler();\n            }\n        }\n    }\n\n    // add binding data to bindings array\n    bindings.push({\n        on,\n        node,\n        binder,\n        objectHandler,\n        nodeHandler,\n        bindingOptions\n    });\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `bind:${key}`, extendedEventOptions);\n        triggerOne(object, 'bind', extendedEventOptions);\n    }\n}\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport getNodes from './_getnodes';\nimport createBindingSwitcher from './_createbindingswitcher';\nimport bindSingleNode from './_bindsinglenode';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport addTreeListener from '../on/_addtreelistener';\n\n// initializes binsing between a property of an object to HTML node\nexport default function bindNode(object, key, node, binder, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bindNode');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    binder = binder || {}; // eslint-disable-line no-param-reassign\n\n    initDefi(object);\n\n    // throw an error when key is falsy\n    if (!key) {\n        throw defiError('binding:falsy_key');\n    }\n\n    if (key instanceof Array) {\n        /*\n         * accept array of keys\n         * this.bindNode(['a', 'b', 'c'], node)\n         */\n        forEach(key, itemKey => bindNode(object, itemKey, node, binder, eventOptions));\n\n        return object;\n    }\n\n\n    if (typeof key === 'object') {\n        forOwn(key, (keyObjValue, keyObjKey) => {\n            // binder means eventOptions\n            eventOptions = binder; // eslint-disable-line no-param-reassign\n\n            if (\n                keyObjValue\n                && keyObjValue.constructor === Object\n                && 'node' in keyObjValue\n            ) {\n                // this.bindNode({ key: { node: $(), binder } ) }, { on: 'evt' }, { silent: true });\n                bindNode(\n                    object, keyObjKey, keyObjValue.node,\n                    keyObjValue.binder || node, eventOptions\n                );\n            } else if (\n                keyObjValue\n                && keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.bindNode({ key: [{\n                //   node: $(),\n                //   binder\n                // }] ) }, { on: 'evt' }, { silent: true });\n                forEach(keyObjValue, (keyObjValueItem) => {\n                    bindNode(\n                        object, keyObjKey, keyObjValueItem.node,\n                        keyObjValueItem.binder || node, eventOptions\n                    );\n                });\n            } else {\n                // this.bindNode({ key: $() }, { on: 'evt' }, { silent: true });\n                bindNode(object, keyObjKey, keyObjValue, node, eventOptions);\n            }\n        });\n\n        return object;\n    }\n\n    const {\n        optional = false,\n        exactKey = false\n    } = eventOptions;\n    const $nodes = getNodes(object, node);\n\n    // check node existence\n    if (!$nodes.length) {\n        if (optional) {\n            return object;\n        }\n\n        throw defiError('binding:node_missing', { key, node });\n    }\n\n    if (!exactKey) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            // handle binding when key arg includes dots (eg \"a.b.c.d\")\n            const bindingSwitcher = createBindingSwitcher({\n                object,\n                deepPath,\n                $nodes,\n                binder,\n                eventOptions,\n                bindNode\n            });\n\n            addTreeListener(object, deepPath.slice(0, deepPathLength - 1), bindingSwitcher);\n\n            bindingSwitcher();\n\n            return object;\n        }\n    }\n\n    const propDef = defineProp(object, key);\n\n    // handle binding for every node separately\n    forEach($nodes, oneNode => bindSingleNode(object, {\n        $nodes,\n        node: oneNode,\n        key,\n        eventOptions,\n        binder,\n        propDef\n    }));\n\n    return object;\n}\n","import unbindNode from '../unbindnode';\n\n// returns a function which re-adds binding when object branch is changed\n// the function is called by bindNode when something like\n// 'foo.bar.baz' is passed to it as key argument value\n// this is one of the hardest things in the framework to understand\nexport default function createBindingSwitcher({\n    object,\n    deepPath,\n    $nodes,\n    binder,\n    eventOptions,\n    bindNode\n}) {\n    return function bindingSwitcher(changeEvent = {}) {\n        const deepPathLength = deepPath.length;\n        const lastDeepPathItem = deepPath[deepPathLength - 1];\n        const {\n            value, // new value of a branch\n            previousValue, // previous value of a branch\n            restPath // path starting currently changed branch (passed by addTreeListener)\n        } = changeEvent;\n        let target; // an object to call bindNode\n        let previousTarget; // an object to call unbindNode\n\n\n        if (value && typeof value === 'object' && restPath) {\n            // if rest path is given and new value is an object\n            target = value;\n            for (let i = 0; i < restPath.length; i++) {\n                target = target[restPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        } else {\n            // if rest path is not given\n            target = object;\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                target = target[deepPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        }\n\n        // if rest path is given and previous value is an object\n        if (previousValue && typeof previousValue === 'object' && restPath) {\n            previousTarget = previousValue;\n            for (let i = 0; i < restPath.length; i++) {\n                previousTarget = previousTarget[restPath[i]];\n                if (!previousTarget) {\n                    break;\n                }\n            }\n        }\n\n        // add binding for new target\n        if (target && typeof target === 'object') {\n            bindNode(target, lastDeepPathItem, $nodes, binder, eventOptions);\n        }\n\n        // remove binding for previously used object\n        if (previousTarget && typeof previousTarget === 'object') {\n            unbindNode(previousTarget, lastDeepPathItem, $nodes);\n        }\n    };\n}\n","import is from '../_helpers/is';\nimport set from '../set';\n\n// returns a function which called when bound node state is changed (eg DOM event is fired)\nexport default function createNodeHandler({\n    object,\n    key,\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function nodeHandler(domEvent = {}) {\n        // nodeHandler.disabled = true is set in unbindNode\n        // we cannot \"turn off\" binder.on when its value is a function\n        // developer needs to clean memory (\"turn off\" callback) manualy in binder.destroy\n        if (nodeHandler.disabled) {\n            return;\n        }\n\n        const previousValue = propDef.value;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n        const { getValue } = binder;\n        const value = getValue.call(node, {\n            previousValue,\n            domEvent,\n            originalEvent: domEvent.originalEvent || domEvent, // jQuery thing\n            // will throw \"preventDefault is not a function\" when domEvent is empty object\n            preventDefault: () => domEvent.preventDefault(),\n            // will throw \"stopPropagation is not a function\" when domEvent is empty object\n            stopPropagation: () => domEvent.stopPropagation(),\n            which,\n            target,\n            ctrlKey,\n            altKey,\n            ...bindingOptions\n        });\n\n        if (!is(value, previousValue)) {\n            set(object, key, value, {\n                fromNode: true,\n                // the following properties are needed to avoid circular changes\n                // they are used at objectHandler\n                changedNode: node,\n                onChangeValue: value,\n                binder\n            });\n        }\n    };\n}\n","// returns a function which is called when property value is changed\nexport default function createObjectHandler({\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function objectHandler(eventOptions = {}) {\n        const { value } = propDef;\n        const { onChangeValue, changedNode, binder: evtBinder } = eventOptions;\n        const { setValue } = binder;\n        // a dirty hack for https://github.com/matreshkajs/matreshka/issues/19\n        const dirtyHackValue = onChangeValue === 'string' && typeof value === 'number'\n            ? `${value}` : value;\n\n        // don't call setValue if a property is changed via getValue of the same binder\n        if (changedNode === node && onChangeValue === dirtyHackValue && evtBinder === binder) {\n            return;\n        }\n\n        setValue.call(node, value, {\n            value,\n            ...bindingOptions\n        });\n    };\n}\n","import defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\n\n// the function returns bound node(s)\nexport default function bound(object, key, { all } = { all: false }) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bound');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return all ? [] : null;\n    }\n\n    const def = defs.get(object);\n    const propDef = def.props[key];\n\n    let nodes;\n\n    if (propDef) {\n        const { bindings } = propDef;\n        nodes = (bindings && bindings.map(({ node }) => node)) || [];\n    } else {\n        nodes = [];\n    }\n\n    return all ? nodes : nodes[0] || null;\n}\n","import unbindNode from './unbindnode';\nimport triggerOne from './trigger/_triggerone';\nimport removeListener from './off/_removelistener';\nimport defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport defiError from './_helpers/defierror';\nimport forEach from './_helpers/foreach';\n\n// removes a property, its bindings and its events\n// TODO: remove function does not correctly removes delegated events, bindings, tree listeners etc\nexport default function remove(object, givenKey, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'remove');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n    const { silent } = eventOptions;\n    // allow to pass single key or an array of keys\n    const keys = givenKey instanceof Array ? givenKey : [givenKey];\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('remove:key_type', { key });\n        }\n\n        const props = def && def.props;\n        const propDef = props && props[key];\n\n        // if no object definition then simply delete the property\n        if (!propDef) {\n            delete object[key];\n            continue;\n        }\n\n        const { value } = propDef;\n\n        // remove all bindings\n        unbindNode(object, key);\n\n        // TODO: Manual listing of event prefixes may cause problems in future\n        const removeEventPrefies = [\n            '_change:deps',\n            '_change:bindings',\n            '_change:delegated',\n            '_change:tree',\n            'change',\n            'beforechange',\n            'bind',\n            'unbind'\n        ];\n\n        // remove all events\n        forEach(removeEventPrefies, prefix => removeListener(object, `${prefix}:${key}`));\n\n        // delete property definition\n        delete props[key];\n\n        // delete the property itself\n        delete object[key];\n\n        const extendedEventOptions = {\n            key,\n            value,\n            ...eventOptions\n        };\n\n        // trigger delegated events logic removal for asterisk events (*.*.*@foo)\n        triggerOne(object, '_delete:delegated', extendedEventOptions);\n\n        // fire events if \"silent\" is not true\n        if (!silent) {\n            triggerOne(object, 'delete', extendedEventOptions);\n            triggerOne(object, `delete:${key}`, extendedEventOptions);\n        }\n    }\n}\n","import initDefi from './_core/init';\nimport defineProp from './_core/defineprop';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport set from './set';\nimport defiError from './_helpers/defierror';\nimport forOwn from './_helpers/forown';\nimport forEach from './_helpers/foreach';\n\n// creates property mediator\nfunction createMediator({\n    object,\n    propDef,\n    key,\n    mediator\n}) {\n    return function propMediator(value) {\n        // args: value, previousValue, key, object itself\n        return mediator.call(object, value, propDef.value, key, object);\n    };\n}\n\n// transforms property value on its changing\nexport default function mediate(object, givenKeys, mediator) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'mediate');\n\n    const isKeysArray = givenKeys instanceof Array;\n\n    // allow to use key-mediator object as another method variation\n    if (typeof givenKeys === 'object' && !isKeysArray) {\n        forOwn(givenKeys, (objVal, objKey) => mediate(object, objKey, objVal));\n        return object;\n    }\n\n    initDefi(object);\n\n    // allow to use both single key and an array of keys\n    const keys = isKeysArray ? givenKeys : [givenKeys];\n\n    forEach(keys, (key) => {\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('mediate:key_type', { key });\n        }\n\n        const propDef = defineProp(object, key);\n\n        const propMediator = propDef.mediator = createMediator({\n            object,\n            propDef,\n            key,\n            mediator\n        });\n\n        // set new value\n        set(object, key, propMediator(propDef.value), {\n            fromMediator: true\n        });\n    });\n\n    return object;\n}\n","import checkObjectType from './_helpers/checkobjecttype';\nimport * as functions from './_lib';\nimport forEach from './_helpers/foreach';\n\n// create a prototype of ChainClass\n// store target object at \"object\" property\nconst prototype = {\n    constructor(object) {\n        this.object = object;\n    }\n};\n\nconst funcNames = Object.keys(functions);\n\n// iterate over all universal methods\nfor (let i = 0; i < funcNames.length; i++) {\n    const funcName = funcNames[i];\n    const method = functions[funcName];\n\n    // create every chained method\n    prototype[funcName] = function chainedMethod() {\n        const args = [this.object];\n\n        forEach(arguments, (argument) => {\n            args.push(argument);\n        });\n\n        method(...args);\n\n        // returning this is important for chained calls\n        return this;\n    };\n}\n\n\nconst ChainClass = function ChainClass(object) {\n    this.object = object;\n};\n\nChainClass.prototype = prototype;\n\n// the function allows to chain static function calls on any object\nexport default function chain(object) {\n    // check for type and throw an error if it is not an object and is not a function\n    checkObjectType(object, 'chain');\n\n    return new ChainClass(object);\n}\n","import * as functions from './_lib';\n\nimport lookForBinder from './lookforbinder';\nimport chain from './chain';\nimport defaultBinders from './defaultbinders';\n\nexport default Object.assign({}, functions, {\n    lookForBinder,\n    chain,\n    defaultBinders\n});\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport addListener from './_addlistener';\nimport $ from '../_mq';\nimport createDomEventHandler from './_createdomeventhandler';\nimport forEach from '../_helpers/foreach';\n\n// returns an object with event handlers used at addDomListener\nfunction createBindingHandlers({\n    fullEventName,\n    domEventHandler,\n    selector\n}) {\n    return {\n        bindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).on(fullEventName, selector, domEventHandler);\n            }\n        },\n        unbindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).off(fullEventName, selector, domEventHandler);\n            }\n        }\n    };\n}\n\n// adds DOM event listener for nodes bound to given property\nexport default function addDomListener(object, key, eventName, selector, callback, info) {\n    const def = initDefi(object);\n    const propDef = defineProp(object, key);\n\n    const domEventHandler = createDomEventHandler({\n        key,\n        object,\n        callback\n    });\n\n    // making possible to remove this event listener\n    domEventHandler._callback = callback;\n\n    const eventNamespace = def.id + key;\n    const fullEventName = `${eventName}.${eventNamespace}`;\n    const { bindHandler, unbindHandler } = createBindingHandlers({\n        fullEventName,\n        domEventHandler,\n        selector\n    });\n    const addBindListenerResult = addListener(object, `bind:${key}`, bindHandler, info);\n    const addUnbindListenerResult = addListener(object, `unbind:${key}`, unbindHandler, info);\n\n    // if events are added successfully then run bindHandler for every node immediately\n    // TODO: Describe why do we need addBindListenerResult and addUnbindListenerResult\n    if (addBindListenerResult && addUnbindListenerResult) {\n        const { bindings } = propDef;\n        if (bindings) {\n            forEach(bindings, ({ node }) => bindHandler({ node }));\n        }\n    }\n\n    return object;\n}\n","// returns DOM event handler\nexport default function createDomEventHandler({\n    key,\n    object,\n    callback\n}) {\n    return function domEventHandler(domEvent) {\n        const originalEvent = domEvent.originalEvent || domEvent;\n        // defiTriggerArgs are created when DOM event is triggered by trigger method\n        const triggerArgs = originalEvent.defiTriggerArgs;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n\n        if (triggerArgs) {\n            // if args are passed to trigger method then pass them to an event handler\n            callback.apply(object, triggerArgs);\n        } else {\n            // use the following object as an arg for event handler\n            callback.call(object, {\n                self: object,\n                node: this,\n                preventDefault: () => domEvent.preventDefault(),\n                stopPropagation: () => domEvent.stopPropagation(),\n                key,\n                domEvent,\n                originalEvent,\n                which,\n                target,\n                ctrlKey,\n                altKey\n            });\n        }\n    };\n}\n"],"sourceRoot":""}