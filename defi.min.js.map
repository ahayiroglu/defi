{"version":3,"sources":["webpack://defi/webpack/universalModuleDefinition","webpack://defi/webpack/bootstrap","webpack://defi/./src/_core/defs.js","webpack://defi/./src/_helpers/checkobjecttype.js","webpack://defi/./src/trigger/_triggerone.js","webpack://defi/./src/_helpers/defierror.js","webpack://defi/./src/set.js","webpack://defi/./src/_core/defineprop.js","webpack://defi/./src/_core/init.js","webpack://defi/./src/on/_addlistener.js","webpack://defi/./src/_mq/index.js","webpack://defi/./src/off/_removelistener.js","webpack://defi/./src/binders/input.js","webpack://defi/./src/unbindnode/index.js","webpack://defi/./src/on/_delegatelistener/index.js","webpack://defi/./src/_helpers/debounce.js","webpack://defi/./src/off/_undelegatelistener.js","webpack://defi/./src/_mq/_data.js","webpack://defi/./src/_mq/_init.js","webpack://defi/./src/on/_domeventregexp.js","webpack://defi/./src/on/_splitbyspaceregexp.js","webpack://defi/./src/bindnode/_getnodes.js","webpack://defi/./src/off/_removetreelistener.js","webpack://defi/./src/on/_addtreelistener.js","webpack://defi/./src/_helpers/is.js","webpack://defi/./src/_mq/_html2nodelist.js","webpack://defi/./src/off/index.js","webpack://defi/./src/mediate.js","webpack://defi/./src/remove.js","webpack://defi/./src/bound.js","webpack://defi/./src/bindnode/_createobjecthandler.js","webpack://defi/./src/bindnode/_createnodehandler.js","webpack://defi/./src/binders/output.js","webpack://defi/./src/binders/progress.js","webpack://defi/./src/binders/select.js","webpack://defi/./src/binders/textarea.js","webpack://defi/./src/defaultbinders.js","webpack://defi/./src/lookforbinder.js","webpack://defi/./src/bindnode/_bindsinglenode.js","webpack://defi/./src/unbindnode/_removebinding.js","webpack://defi/./src/bindnode/_createbindingswitcher.js","webpack://defi/./src/bindnode/_selectnodes.js","webpack://defi/./src/bindnode/index.js","webpack://defi/./src/_helpers/deepfind.js","webpack://defi/./src/calc/_createcalchandler.js","webpack://defi/./src/calc/_addsource.js","webpack://defi/./src/calc/index.js","webpack://defi/./src/trigger/_triggeronedomevent.js","webpack://defi/./src/trigger/_triggerdomevent.js","webpack://defi/./src/trigger/index.js","webpack://defi/./src/on/_delegatelistener/changehandler.js","webpack://defi/./src/on/_createdomeventhandler.js","webpack://defi/./src/on/_adddomlistener.js","webpack://defi/./src/_helpers/assign.js","webpack://defi/./src/_mq/add.js","webpack://defi/./src/_mq/off.js","webpack://defi/./src/_mq/on.js","webpack://defi/./src/_mq/parsehtml.js","webpack://defi/./src/off/_removedomlistener.js","webpack://defi/./src/on/index.js","webpack://defi/./src/_lib.js","webpack://defi/./src/index.js"],"names":["root","factory","exports","module","define","amd","defi","window","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","PseudoMap","obj","set","data","writable","has","WeakMap","method","typeofObject","defiError","triggerOne","triggerArgs","def","defs","events","length","Array","latestEvent","callback","apply","info","getTypeError","variable","variableName","expectedType","errors","common:object_type","_ref","binding:node_missing","_ref2","key","node","bindingErrorPrefix","binding:falsy_key","calc:target_type","_ref3","target","calcErrorPrefix","calc:source_key_type","_ref4","sourceKey","calc:source_object_type","_ref5","sourceObject","calc:source_type","_ref6","source","trigger:names_type","_ref7","names","eventsErrorPrefix","on:names_type","_ref8","removedatakeys:key_type","_ref9","adddatakeys:key_type","_ref10","remove:key_type","_ref11","mediate:key_type","_ref12","getError","Error","a","eventOptions","checkObjectType","objKey","objVal","_target","_keys","keys","_i","_l","props","propDef","newValue","previousValue","mediator","_eventOptions","skipMediator","fromMediator","force","forceHTML","silent","silentHTML","skipCalc","is","_keys2","_l2","_i2","_source","_key","isChanged","_result","self","extendedEventOptions","triggerChange","beforechangeEventName","beforechangeStr","beforechange","changeBindingsEventName","changeEventName","changeStr","change","changeDepsEventName","changeDelegatedKeyEventName","changeTreeEventName","changeCommonEventName","noAccessor","bindings","v","fromSetter","objectId","id","propModEventReg","arguments","allEvents","initDefi","event","_info$skipChecks","skipChecks","domEventExecResult","domEventReg","exec","eventName","selector","addDomListener","existingEvent","_callback","push","test","defineProp","replace","mq","context","Init","parseHTML","assign","on","off","add","retain","noTrigger","removeDomListener","allEventsName","allEventsItem","_target2","_index","removeEventData","_target3","_index2","_l3","argCallback","eventCallback","type","getValue","this","checked","setValue","unbindNode","itemKey","_l6","itemNode","itemEventOptions","mergedEventOptions","_key2","_source2","_key4","_result2","_source4","_keys4","_l5","_i4","keyObjKey","keyObjValue","_target4","_keys5","_i5","_l8","constructor","keyObjValueItem","_index3","_l7","deep","propsKey","_target5","_keys6","_i6","_l9","deepPath","split","deepPathLength","removeTreeListener","slice","_target6","_index4","_l10","binding","removeBinding","nodesItem","retainBindings","retainNodes","_target8","getNodes","_index6","_l12","_target7","_index5","_l11","givenPath","path","pathStr","_end","_j","join","delegatedData","addListener","changeHandler","func","givenDelay","thisArg","timeout","delay","args","callContext","clearTimeout","setTimeout","undelegateListener","delegatedChangeEvtName","delegatedEventName","removeListener","nodeIndex","win","MQInit","result","nodeType","html2nodeList","newContext","querySelectorAll","document","htmlReg","customSelectorReg","selectNodes","$","nodes","handler","listenedPath","createTreeListener","restPath","newHandler","changeEvent","extendedChangeEvent","addTreeListener","listenPath","delegateListener","v1","v2","givenHTML","wrapMap","option","legend","thead","tr","td","col","area","_","html","createElement","optgroup","tbody","tfoot","colgroup","caption","th","ex","wrapper","innerHTML","children","childNodes","givenNames","isNamesVarArray","namesObjName","namesObjCallback","propName","eventNamespace","splitBySpaceReg","_l4","delegatedEventParts","delegatedName","createMediator","mediate","givenKeys","isKeysArray","propMediator","givenKey","_loop","prefix","all","map","binder","bindingOptions","onChangeValue","changedNode","evtBinder","nodeHandler","domEvent","disabled","which","ctrlKey","altKey","originalEvent","preventDefault","stopPropagation","fromNode","textContent","input","multiple","options","selected","givenValue","indexOf","tagName","textarea","select","progress","output","defaultBinders","spaceReg","givenBinder","$nodes","getValueOnBind","setValueOnBind","_eventOptions$debounc","debounceSetValue","_eventOptions$debounc2","debounceGetValue","_eventOptions$debounc3","debounceSetValueOnBind","_eventOptions$debounc4","debounceGetValueOnBind","_eventOptions$debounc5","debounceSetValueDelay","_eventOptions$debounc6","debounceGetValueDelay","_eventOptions$useExac","useExactBinder","isUndefined","objectHandler","foundBinder","lookForBinder","_binder","initialize","syncNodeHandler","createNodeHandler","debouncedNodeHandler","debounce","evtName","addEventListener","syncObjectHandler","createObjectHandler","debouncedObjectHandler","_keys3","_i3","_source3","_key3","destroy","removeEventListener","bindNode","lastDeepPathItem","previousTarget","randomAttr","Math","random","toString","givenSelector","selectors","execResult","boundKey","subSelector","boundNodes","setAttribute","removeAttribute","u","itemBinder","_eventOptions$optiona","optional","_eventOptions$exactKe","exactKey","bindingSwitcher","createBindingSwitcher","oneNode","bindSingleNode","paths","current","allSources","values","_changeEvent$protecto","protector","protectKey","promiseCalc","setEventOptions","isDelegated","deepFind","targetValue","Promise","resolve","then","promiseResult","catch","calcHandler","calc","sources","givenHandler","itemTarget","itemSource","itemHandler","_eventOptions$setOnIn","setOnInit","debounceCalcOnInit","debounceCalc","debounceCalcDelay","_eventOptions$isTarge","isTargetPropertyHidden","syncCalcHandler","createCalcHandler","debouncedCalcHandler","addSource","sourceKeyItem","Event","bubbles","cancelable","defiTriggerArgs","dispatchEvent","descendant","triggerOneDOMEvent","_len","domEvtExecResult","triggerDomEvent","domEventHandler","createDomEventHandler","_createBindingHandler","fullEventName","bindHandler","unbindHandler","addBindListenerResult","addUnbindListenerResult","TypeError","index","nextKey","nextValue","idMap","b$","nodeID","splitByDotReg","namesStr","_names$i$split","namespace","j","k","delegate","splice","randomID","evt","scopeSelector","splittedSelector","matching","sel","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","exist","givenCallback","triggerOnInit","once","debounceOption","onceCallback","f","trigger","bound","remove","functions"],"mappings":"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","file":"defi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"defi\"] = factory();\n\telse\n\t\troot[\"defi\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 59);\n","function PseudoMap() {}\n\n// PseudoMap simulates WeakMap behavior with O(1) search complexity\n// it's needed to support @IE9 and @IE10\nnofn.assign(PseudoMap.prototype, {\n    get(obj) {\n        return obj.defi;\n    },\n    set(obj, data) {\n        Object.defineProperty(obj, 'defi', {\n            value: data,\n            enumerable: false,\n            writable: false,\n            configurable: false\n        });\n    },\n    has(obj) {\n        return 'defi' in obj;\n    }\n});\n\nexport default typeof WeakMap === 'undefined' ? new PseudoMap() : new WeakMap();\n","import defiError from './defierror';\n\n// checks type of a variable and throws an error if its type is not an object\nexport default function checkObjectType(object, method) {\n    const typeofObject = object === null ? 'null' : typeof object;\n\n    if (typeofObject !== 'object' && typeofObject !== 'function') {\n        throw defiError('common:object_type', {\n            object,\n            method\n        });\n    }\n}\n","import defs from '../_core/defs';\n\n// triggers one event\nexport default function triggerOne(object, name, triggerArgs) {\n    const def = defs.get(object);\n    const events = def && def.events[name];\n\n    if (events) {\n        const l = events.length;\n        let i = 0;\n\n        // allow to pass both array of args and single arg as triggerArgs\n        if (triggerArgs instanceof Array) {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.apply(object, triggerArgs);\n                i += 1;\n            }\n        } else {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.call(object, triggerArgs);\n                i += 1;\n            }\n        }\n    }\n}\n\n// latestEvent is used as required hack in somemethods\ntriggerOne.latestEvent = {\n    info: {},\n    name: null\n};\n","/* eslint-disable prefer-template, max-len */\nconst bindingErrorPrefix = 'Binding error:';\nconst calcErrorPrefix = 'Calc error:';\nconst eventsErrorPrefix = 'Events error:';\n\nconst getType = (variable) => {\n    if (variable === null) {\n        return 'null';\n    }\n\n    return typeof variable;\n};\nconst getTypeError = (variable, variableName, expectedType) =>\n    `${variableName} must have type \"${expectedType}\" but got \"${getType(variable)}\" instead.`;\n\nconst errors = {\n    'common:object_type': ({ object, method }) => `Error in ${method}: `\n        + getTypeError(object, 'object', 'object'),\n\n    'binding:node_missing': ({ key, node }) => {\n        const selectorInfo = typeof node === 'string' ? ` (given selector is \"${node}\")` : '';\n        return `${bindingErrorPrefix} node is missing for key \"${key}\"${selectorInfo}.`;\n    },\n    'binding:falsy_key': () => `${bindingErrorPrefix} \"key\" arg cannot be falsy`,\n    'calc:target_type': ({ target }) =>\n        `${calcErrorPrefix} ${getTypeError(target, 'target key', 'string')}`,\n    'calc:source_key_type': ({ sourceKey }) =>\n        `${calcErrorPrefix} ${getTypeError(sourceKey, 'source key', 'string')}`,\n    'calc:source_object_type': ({ sourceObject }) =>\n        `${calcErrorPrefix} ${getTypeError(sourceObject, 'source object', 'object')}`,\n    'calc:source_type': ({ source }) =>\n        `${calcErrorPrefix} ${getTypeError(source, 'source', 'object')}`,\n\n    'trigger:names_type': ({ names }) =>\n        `${eventsErrorPrefix} ${getTypeError(names, 'event name', 'string')}`,\n\n    'on:names_type': ({ names }) => errors['trigger:names_type']({ names }),\n\n    'removedatakeys:key_type': ({ key }) =>\n        `Error in removeDataKeys: ${getTypeError(key, 'key', 'string')}`,\n\n    'adddatakeys:key_type': ({ key }) =>\n        `Error in addDataKeys: ${getTypeError(key, 'key', 'string')}`,\n\n    'remove:key_type': ({ key }) =>\n        `Error in remove: ${getTypeError(key, 'key', 'string')}`,\n\n    'mediate:key_type': ({ key }) =>\n        `Error in mediate: ${getTypeError(key, 'key', 'string')}`\n};\n\nexport default function defiError(key, data) {\n    const getError = errors[key];\n    if (!getError) {\n        throw Error(`Unknown error \"${key}\". Please report about this on Github.`);\n    }\n\n    return new Error(getError(data));\n}\n","import defs from './_core/defs';\nimport triggerOne from './trigger/_triggerone';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport is from './_helpers/is';\n\n// the function sets new value for a property\n// since its performance is very critical we're checking events existence manually\nexport default function set(object, key, value, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'set');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return object;\n    }\n\n    // allow to use key-value object as another method variation\n    if (typeof key === 'object') {\n        nofn.forOwn(key, (objVal, objKey) => set(object, objKey, objVal, value));\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n\n    // if no object definition then make simple assignment\n    if (!def) {\n        object[key] = value;\n        return object;\n    }\n\n    const { props, events } = def;\n    const propDef = props[key];\n\n    // if no property definition then make simple assignment\n    if (!propDef) {\n        object[key] = value;\n        return object;\n    }\n\n    const { value: previousValue, mediator } = propDef;\n\n    // possible flags, all of them are falsy by default\n    const {\n        skipMediator,\n        fromMediator,\n        force,\n        forceHTML,\n        silent,\n        silentHTML,\n        skipCalc\n    } = eventOptions;\n\n    let newValue;\n\n    if (mediator && !is(value, previousValue) && !skipMediator && !fromMediator) {\n        newValue = mediator(value);\n    } else {\n        newValue = value;\n    }\n\n    const isChanged = !is(newValue, previousValue);\n\n    // add to eventOptions object some useful properties\n    // we override default eventOptions because some of the properties need to have actual values,\n    // not inherited ones (eg when calc is used)\n    const extendedEventOptions = {\n        ...eventOptions,\n        value: newValue,\n        self: object,\n        previousValue,\n        key,\n        isChanged\n    };\n\n    const triggerChange = (isChanged || force) && !silent;\n\n    // trigger beforechange:KEY and beforechange events\n    if (triggerChange) {\n        const beforechangeStr = 'beforechange';\n        const beforechangeEventName = `${beforechangeStr}:${key}`;\n\n        if (events[beforechangeEventName]) {\n            triggerOne(object, beforechangeEventName, extendedEventOptions);\n        }\n\n        if (events[beforechangeStr]) {\n            triggerOne(object, beforechangeStr, extendedEventOptions);\n        }\n    }\n\n    propDef.value = newValue;\n\n    // triger bindings\n    if (!silentHTML && (isChanged || forceHTML)) {\n        const changeBindingsEventName = `_change:bindings:${key}`;\n        if (events[changeBindingsEventName]) {\n            triggerOne(object, changeBindingsEventName, extendedEventOptions);\n        }\n    }\n\n    // trigger change:KEY and change events\n    if (triggerChange) {\n        const changeStr = 'change';\n        const changeEventName = `${changeStr}:${key}`;\n        if (events[changeEventName]) {\n            triggerOne(object, changeEventName, extendedEventOptions);\n        }\n\n        if (events[changeStr]) {\n            triggerOne(object, changeStr, extendedEventOptions);\n        }\n    }\n\n    // trigger dependencies made by calc method\n    if ((isChanged || force) && !skipCalc) {\n        const changeDepsEventName = `_change:deps:${key}`;\n        if (events[changeDepsEventName]) {\n            triggerOne(object, changeDepsEventName, extendedEventOptions);\n        }\n    }\n\n\n    if (isChanged) {\n        // trigger common delegated events logic\n        const changeDelegatedKeyEventName = `_change:delegated:${key}`;\n        if (events[changeDelegatedKeyEventName]) {\n            triggerOne(object, changeDelegatedKeyEventName, extendedEventOptions);\n        }\n\n        // trigger tree change events logic\n        const changeTreeEventName = `_change:tree:${key}`;\n        if (events[changeTreeEventName]) {\n            triggerOne(object, changeTreeEventName, extendedEventOptions);\n        }\n\n        // trigger other internal change events\n        const changeCommonEventName = `_change:common:${key}`;\n        if (events[changeCommonEventName]) {\n            triggerOne(object, changeCommonEventName, extendedEventOptions);\n        }\n\n        // trigger delegated logic for asterisk events (*.*.*@foo)\n        // TODO: Confusing events names (\"_change:delegated\", \"_change:common:KEY\" etc)\n        const changeDelegatedEventName = '_change:delegated';\n        if (events[changeDelegatedEventName]) {\n            triggerOne(object, changeDelegatedEventName, extendedEventOptions);\n        }\n    }\n\n    return object;\n}\n","import defs from './defs';\nimport set from '../set';\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key, noAccessor) {\n    const def = defs.get(object);\n\n    // if no object definition do nothing\n    if (!def) {\n        return null;\n    }\n\n    if (!def.props[key]) {\n        const propDef = def.props[key] = {\n            value: object[key],\n            mediator: null,\n            bindings: null\n        };\n\n        if (!noAccessor) {\n            Object.defineProperty(object, key, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return propDef.value;\n                },\n                set(v) {\n                    return set(object, key, v, {\n                        fromSetter: true\n                    });\n                }\n            });\n        }\n    }\n\n    return def.props[key];\n}\n","import defs from './defs';\n\nlet objectId = 0;\n\n// this is a common function which associates an object with its defi definition\nexport default function initDefi(object) {\n    let def = defs.get(object);\n    if (!def) {\n        def = {\n            // a property name of \"events\" object is an event name\n            // and a value is an array of event handlers\n            events: {\n                /* example: {\n                    callback: function,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n            },\n            // \"props\" contains special information about properties (getters, setters etc)\n            props: {\n                /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                } */\n            },\n            id: objectId\n        };\n\n        objectId += 1;\n\n        defs.set(object, def);\n    }\n\n    return def;\n}\n","import initDefi from '../_core/init';\nimport triggerOne from '../trigger/_triggerone';\nimport defineProp from '../_core/defineprop';\nimport domEventReg from './_domeventregexp';\n\n// property modifier event regexp\nconst propModEventReg // eslint-disable-next-line max-len\n    = /^_change:deps:|^_change:bindings:|^_change:delegated:|^_change:common:|^_change:tree:|^change:|^beforechange:/;\n\n// adds simple event listener\n// used as core of event engine\nexport default function addListener(object, name, callback, info = {}) {\n    const { events: allEvents } = initDefi(object);\n    const events = allEvents[name];\n    const event = {\n        callback, name, info\n    };\n\n    // skipChecks is used by internal methods for better performance\n    const { skipChecks = false } = info;\n\n    if (!skipChecks) {\n        const domEventExecResult = domEventReg.exec(name);\n\n        if (domEventExecResult) {\n            const [, eventName, key, selector] = domEventExecResult;\n            // fixing circular reference issue\n            const addDomListener = require('./_adddomlistener');\n\n            addDomListener(object, key, eventName, selector, callback, info);\n\n            return true;\n        }\n    }\n\n    // if there are events with the same name\n    if (events) {\n        if (!skipChecks) {\n            // if there are events with the same data, return false\n            for (let i = 0; i < events.length; i++) {\n                const existingEvent = events[i];\n                const argCallback = (callback && callback._callback) || callback;\n                const eventCallback = existingEvent.callback._callback || existingEvent.callback;\n                if (argCallback === eventCallback) {\n                    return false;\n                }\n            }\n        }\n\n        // if the event isn't found add it to the event list\n        events.push(event);\n    } else {\n        // if there are no events with the same name, create an array with only  one event\n        allEvents[name] = [event];\n    }\n\n    if (propModEventReg.test(name)) {\n        // define needed accessors for KEY\n        defineProp(object, name.replace(propModEventReg, ''));\n    }\n\n    // names prefixed by underscore mean \"private\" events\n    if (!skipChecks && name[0] !== '_') {\n        triggerOne(object, `addevent:${name}`, event);\n        triggerOne(object, 'addevent', event);\n    }\n\n    // if event is added successfully return true\n    return true;\n}\n","import Init from './_init';\nimport parseHTML from './parsehtml';\nimport on from './on';\nimport off from './off';\nimport add from './add';\nimport assign from '../_helpers/assign';\n\n// a tiny jQuery-like library\nexport default function mq(selector, context) {\n    return new Init(selector, context);\n}\n\nmq.parseHTML = parseHTML;\n\nassign(Init.prototype, {\n    on,\n    off,\n    add\n});\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport domEventReg from '../on/_domeventregexp';\n\n// removes simple event listener from an object\nexport default function removeListener(object, name, callback, info) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return false;\n    }\n\n    const { events: allEvents } = def;\n    const events = allEvents[name];\n    const retain = [];\n    const noTrigger = name ? name[0] === '_' : false;\n    const domEventExecResult = domEventReg.exec(name);\n\n    if (domEventExecResult) {\n        const [, eventName, key, selector] = domEventExecResult;\n        // fixing circular reference issue\n        const removeDomListener = require('./_removedomlistener');\n\n        removeDomListener(object, key, eventName, selector, callback, info);\n\n        return true;\n    }\n\n    // if all events need to be removed\n    if (typeof name === 'undefined') {\n        if (!noTrigger) {\n            nofn.forOwn(allEvents, (allEventsItem, allEventsName) => {\n                nofn.forEach(allEventsItem, (event) => {\n                    const removeEventData = {\n                        allEventsName,\n                        callback: event.callback\n                    };\n\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                });\n            });\n        }\n\n        // restore default value of \"events\"\n        def.events = {};\n    } else if (events) {\n        // if events with given name are found\n        nofn.forEach(events, (event) => {\n            const argCallback = (callback && callback._callback) || callback;\n            const eventCallback = event.callback._callback || event.callback;\n\n            if (argCallback && argCallback !== eventCallback) {\n                // keep event\n                retain.push(event);\n            } else {\n                const removeEventData = {\n                    name,\n                    callback: event.callback\n                };\n\n                if (!noTrigger) {\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                }\n            }\n        });\n\n        if (retain.length) {\n            allEvents[name] = retain;\n        } else {\n            delete def.events[name];\n        }\n    }\n\n    return false;\n}\n","// returns a binder for input element based on its type\nexport default function input(type) {\n    let on;\n    switch (type) {\n        case 'checkbox':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.checked;\n                },\n                setValue(value) {\n                    this.checked = value;\n                }\n            };\n        case 'radio':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.value;\n                },\n                setValue(value) {\n                    this.checked = typeof value !== 'undefined' && this.value === value;\n                }\n            };\n        case 'submit':\n        case 'button':\n        case 'image':\n        case 'reset':\n            return {};\n        case 'hidden':\n            on = null;\n            break;\n        case 'file':\n            on = 'change';\n            break;\n\n            /*\n            case 'text':\n            case 'password':\n            case 'date':\n            case 'datetime':\n            case 'datetime-local':\n            case 'month':\n            case 'time':\n            case 'week':\n            case 'range':\n            case 'color':\n            case 'search':\n            case 'email':\n            case 'tel':\n            case 'url':\n            case 'file':\n            case 'number': */\n        default: // other future (HTML6+) inputs\n            on = 'input';\n    }\n\n    return {\n        on,\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n        }\n    };\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport getNodes from '../bindnode/_getnodes';\nimport removeTreeListener from '../off/_removetreelistener';\nimport removeBinding from './_removebinding';\n\n// unbinds a node\nexport default function unbindNode(object, key, node, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'unbindNode');\n\n    if (key instanceof Array) {\n        if (typeof key[0] === 'string') {\n            /*\n             * accept array of keys\n             * this.unbindNode(['a', 'b', 'c'], node)\n             */\n\n            nofn.forEach(key, itemKey => unbindNode(object, itemKey, node, eventOptions));\n        } else {\n            /*\n             * acept array of objects\n             * this.unbindNode([{ key, node, binder, event }], { silent: true });\n             */\n            nofn.forEach(key, ({\n                key: itemKey,\n                node: itemNode,\n                event: itemEventOptions\n            }) => {\n                const commonEventOptions = node;\n                const mergedEventOptions = {};\n\n                if (commonEventOptions) {\n                    // extend event object by \"global\" event\n                    nofn.assign(mergedEventOptions, commonEventOptions);\n                }\n\n                if (itemEventOptions) {\n                    // extend event object by \"local\" event (\"event\" key of an object)\n                    nofn.assign(mergedEventOptions, itemEventOptions);\n                }\n\n                unbindNode(object, itemKey, itemNode, mergedEventOptions);\n            });\n        }\n\n        return object;\n    }\n\n    if (key && typeof key === 'object') {\n        nofn.forOwn(key, (keyObjValue, keyObjKey) => {\n            if (keyObjValue.constructor === Object && 'node' in keyObjValue) {\n                // this.unbindNode({ key: { node: $(), binder } ) }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue.node, node);\n            } else if (\n                keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.unbindNode({ key: [{ node: $(), binder }] ) }, { silent: true });\n                nofn.forEach(keyObjValue, (keyObjValueItem) => {\n                    unbindNode(object, keyObjKey, keyObjValueItem.node, node);\n                });\n            } else {\n                // this.unbindNode({ key: $() }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue, node);\n            }\n        });\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const { deep } = eventOptions;\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n\n    // allow to pass null or undefined as key\n    // if passed then remove bindings of all keys for given object\n    if (key === null || typeof key === 'undefined') {\n        nofn.forOwn(props, (propsItem, propsKey) => {\n            unbindNode(object, propsKey, null, eventOptions);\n        });\n\n        return object;\n    }\n\n    // remove delegated binding\n    if (deep !== false) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            let target = object;\n\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                // TODO: Do we need to throw an error when a target is falsy?\n                target = target[deepPath[i]];\n            }\n\n            // TODO: Potential bug! This may undelegate listener for all bindings with the same path\n            // ...(cannot reproduce)\n            removeTreeListener(object, deepPath.slice(0, deepPathLength - 2));\n\n            unbindNode(target, deepPath[deepPathLength - 1], node, eventOptions);\n\n            return object;\n        }\n    }\n\n    const propDef = props[key];\n\n    // when no propdef do nothing\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    // if the property doesn't have any bindings do nothing\n    if (!bindings) {\n        return object;\n    }\n\n    // if no node is pased remove all bindings for given key\n    if (!node) {\n        nofn.forEach(bindings, (binding) => {\n            removeBinding({\n                object, key, eventOptions, binding\n            });\n        });\n\n        propDef.bindings = null;\n\n        return object;\n    }\n\n    const $nodes = getNodes(object, node);\n    const retainBindings = [];\n    const retainNodes = [];\n\n    // iterate over all bindngs and compare their node with given nodes\n    nofn.forEach($nodes, (nodesItem) => {\n        nofn.forEach(bindings, (binding) => {\n            if (binding.node === nodesItem) {\n                removeBinding({\n                    object, key, eventOptions, binding\n                });\n            } else {\n                retainBindings.push(binding);\n                retainNodes.push(nodesItem);\n            }\n        });\n    });\n\n    // update bindings object\n    if (retainBindings.length) {\n        propDef.bindings = retainBindings;\n    } else {\n        propDef.bindings = null;\n    }\n\n    return object;\n}\n","import addListener from '../_addlistener';\nimport changeHandler from './changehandler';\n\n// adds delegated event listener to an object by given path\n// TODO Handler uses wrong context\nexport default function delegateListener(object, givenPath, name, callback, info = {}) {\n    // if typeof path is string and path is not empty string then split it\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then add simple listener\n        addListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr; // needed for undelegation\n\n        if (path.length > 1) {\n            path = nofn.slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n        const delegatedData = {\n            path,\n            name,\n            callback,\n            info,\n            object\n        };\n\n        // the event is triggered by \"set\"\n        addListener(object, `_change:delegated:${key}`, changeHandler, {\n            delegatedData,\n            pathStr\n        });\n\n        // call handler manually\n        changeHandler({\n            value: object[key]\n        }, delegatedData);\n    }\n}\n","// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds.\n// (c) https://davidwalsh.name/javascript-debounce-function\n\nexport default function debounce(func, givenDelay, thisArg) {\n    let timeout;\n    let delay;\n    if (typeof givenDelay !== 'number') {\n        thisArg = givenDelay; // eslint-disable-line no-param-reassign\n        delay = 0;\n    } else {\n        delay = givenDelay || 0;\n    }\n\n    return function debounced() {\n        const args = arguments;\n        const callContext = thisArg || this;\n\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => func.apply(callContext, args), delay);\n    };\n}\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\n\n// the function removes internally used events such as _asterisk:add\nfunction detatchDelegatedLogic({\n    delegatedEventName,\n    pathStr,\n    allEvents\n}) {\n    const retain = [];\n    const events = allEvents[delegatedEventName];\n\n    nofn.forEach(events, (event) => {\n        // pathStr is assigned to info in delegateListener\n        if (event.info.pathStr !== pathStr) {\n            retain.push(event);\n        }\n    });\n\n    if (retain.length) {\n        allEvents[delegatedEventName] = retain;\n    } else {\n        delete allEvents[delegatedEventName];\n    }\n}\n\n// removes delegated event listener from an object by given path\nexport default function undelegateListener(object, givenPath, name, callback, info = {}) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return;\n    }\n\n    const { events: allEvents } = def;\n\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then remove listener\n        removeListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr;\n\n        if (path.length > 1) {\n            path = nofn.slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n\n        const delegatedChangeEvtName = `_change:delegated:${key}`;\n        if (allEvents[delegatedChangeEvtName]) {\n            detatchDelegatedLogic({\n                delegatedEventName: delegatedChangeEvtName,\n                pathStr,\n                allEvents\n            });\n        }\n\n        if (typeof object[key] === 'object') {\n            undelegateListener(object[key], path, name, callback, info);\n        }\n    }\n}\n","// an object allows to share data between modules; it's needed because we use\n// simplified ES modules there and cannot import and share a number\nexport default {\n    nodeIndex: 0,\n    allEvents: {}\n};\n","import html2nodeList from './_html2nodelist';\n\nconst win = window;\n\n// function-constructor of mq library\n// accepts many kinds of arguments (selector, html, function)\nfunction MQInit(selector, context) {\n    let result;\n\n    if (selector) {\n        if (selector.nodeType || (typeof win === 'object' && selector === win)) {\n            result = [selector];\n        } else if (typeof selector === 'string') {\n            if (/</.test(selector)) {\n                result = html2nodeList(selector);\n            } else if (context) {\n                const newContext = (new MQInit(context))[0];\n\n                if (newContext) {\n                    result = newContext.querySelectorAll(selector);\n                }\n            } else {\n                result = win.document.querySelectorAll(selector);\n            }\n        } else if ('length' in selector) {\n            // if it's something array-like (eg NodeList)\n            result = selector;\n        } else {\n            // this is somethong another (eg Attr)\n            result = [selector];\n        }\n    }\n\n    const length = result && result.length;\n\n    if (length) {\n        for (let i = 0; i < length; i++) {\n            this.push(result[i]);\n        }\n    }\n}\n\nMQInit.prototype = [];\n\nexport default MQInit;\n","// the regexp allows to parse things like \"click::x(.y)\"\n// it's shared between few modules\nexport default /([^::]+)::([^()]+)?(?:\\((.*)\\))?/;\n","// allows to split by spaces not inclusing ones inside of brackers\nexport default /\\s+(?![^(]*\\))/g;\n","import selectNodes from './_selectnodes';\nimport $ from '../_mq';\n\nconst htmlReg = /</;\nconst customSelectorReg = /:bound\\(([^(]*)\\)/;\n\n// the function works just like DOM library accepting any kind of arg\n// (HTML string, Node, NodeList etc) bu allows to pass custom selector\n// eg :bound(KEY)\nexport default function getNodes(object, selector) {\n    let nodes;\n\n    if (\n        typeof selector === 'string'\n        && !htmlReg.test(selector)\n        && customSelectorReg.test(selector)\n    ) {\n        nodes = selectNodes(object, selector);\n    } else {\n        nodes = $(selector);\n    }\n\n    return nodes;\n}\n","import undelegateListener from './_undelegatelistener';\n\n// removes tree listener from all object tree of fiven path\nexport default function removeTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over keys of the path and undelegate given handler (can be undefined)\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice is slow\n        const listenedPath = deepPath.slice(0, i);\n\n        undelegateListener(\n            object,\n            listenedPath,\n            `_change:tree:${deepPath[i]}`,\n            handler\n        );\n    }\n}\n","import delegateListener from './_delegatelistener';\nimport removeTreeListener from '../off/_removetreelistener';\n\n// creates tree listener\nfunction createTreeListener({ handler, restPath }) {\n    const newHandler = function treeListener(changeEvent) {\n        const extendedChangeEvent = {\n            restPath,\n            ...changeEvent\n        };\n        const { previousValue, value } = changeEvent;\n\n        // removes listener for all branches of the path on old object\n        if (previousValue && typeof previousValue === 'object') {\n            removeTreeListener(previousValue, restPath, handler);\n        }\n\n        // adds listener for all branches of \"restPath\" path on newly assigned object\n        if (value && typeof value === 'object') {\n            addTreeListener(value, restPath, handler);\n        }\n\n        // call original handler\n        handler.call(this, extendedChangeEvent);\n    };\n\n    newHandler._callback = handler;\n\n    return newHandler;\n}\n\n// listens changes for all branches of given path\n// one of the most hard functions to understand\nexport default function addTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over all keys and delegate listener for all objects of given branch\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice method is slow\n        const listenPath = deepPath.slice(0, i);\n        const restPath = deepPath.slice(i + 1);\n\n        delegateListener(\n            object,\n            listenPath,\n            `_change:tree:${deepPath[i]}`,\n            createTreeListener({\n                handler,\n                restPath\n            })\n        );\n    }\n}\n","// determines whether two values are the same value\n/* istanbul ignore next */\n// eslint-disable-next-line\nconst isPolyfill = (v1, v2) => v1 === 0 && v2 === 0 ? 1 / v1 === 1 / v2 : v1 !== v1 && v2 !== v2 || v1 === v2;\n\nexport default Object.is || isPolyfill;\n","// converts HTML string to NodeList instance\nexport default function html2nodeList(givenHTML) {\n    // wrapMap is taken from jQuery\n    const wrapMap = {\n        option: [1, '<select multiple=\"multiple\">', '</select>'],\n        legend: [1, '<fieldset>', '</fieldset>'],\n        thead: [1, '<table>', '</table>'],\n        tr: [2, '<table><tbody>', '</tbody></table>'],\n        td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n        area: [1, '<map>', '</map>'],\n        _: [0, '', '']\n    };\n\n    const html = givenHTML.replace(/^\\s+|\\s+$/g, '');\n    let node = window.document.createElement('div');\n    let i;\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    const ex = /<([\\w:]+)/.exec(html);\n    const wrapper = (ex && wrapMap[ex[1]]) || wrapMap._;\n\n    node.innerHTML = wrapper[1] + html + wrapper[2];\n\n    i = wrapper[0];\n\n    while (i) {\n        i -= 1;\n        node = node.children[0];\n    }\n\n    return node.childNodes;\n}\n","import splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport undelegateListener from './_undelegatelistener';\nimport $ from '../_mq';\n\n// removes event listener\nexport default function off(object, givenNames, callback) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'off');\n\n    const isNamesVarArray = givenNames instanceof Array;\n    const def = defs.get(object);\n\n    // allow to pass name-handler object\n    // TODO: Name-handler object passed to off method is non-documented feature\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        nofn.forOwn(givenNames, (namesObjCallback, namesObjName) =>\n            off(object, namesObjName, namesObjCallback, callback));\n        return object;\n    }\n\n\n    if (!givenNames && !callback) {\n        def.events = {};\n\n        nofn.forOwn(def.props, ({ bindings }, propName) => {\n            if (bindings) {\n                nofn.forEach(bindings, ({ node }) => {\n                    const eventNamespace = def.id + propName;\n                    $(node).off(`.${eventNamespace}`);\n                });\n            }\n        });\n\n        return object;\n    }\n\n    // TODO: Array of names passed to off method is non-documented feature\n    // split by spaces\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    nofn.forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n        if (delegatedEventParts.length > 1) {\n            const [path, delegatedName] = delegatedEventParts;\n            undelegateListener(object, path, delegatedName, callback);\n        } else {\n            removeListener(object, name, callback);\n        }\n    });\n\n    return object;\n}\n","import initDefi from './_core/init';\nimport defineProp from './_core/defineprop';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport set from './set';\nimport defiError from './_helpers/defierror';\n\n// creates property mediator\nfunction createMediator({\n    object,\n    propDef,\n    key,\n    mediator\n}) {\n    return function propMediator(value) {\n        // args: value, previousValue, key, object itself\n        return mediator.call(object, value, propDef.value, key, object);\n    };\n}\n\n// transforms property value on its changing\nexport default function mediate(object, givenKeys, mediator) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'mediate');\n\n    const isKeysArray = givenKeys instanceof Array;\n\n    // allow to use key-mediator object as another method variation\n    if (typeof givenKeys === 'object' && !isKeysArray) {\n        nofn.forOwn(givenKeys, (objVal, objKey) => mediate(object, objKey, objVal));\n        return object;\n    }\n\n    initDefi(object);\n\n    // allow to use both single key and an array of keys\n    const keys = isKeysArray ? givenKeys : [givenKeys];\n\n    nofn.forEach(keys, (key) => {\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('mediate:key_type', { key });\n        }\n\n        const propDef = defineProp(object, key);\n\n        const propMediator = propDef.mediator = createMediator({\n            object,\n            propDef,\n            key,\n            mediator\n        });\n\n        // set new value\n        set(object, key, propMediator(propDef.value), {\n            fromMediator: true\n        });\n    });\n\n    return object;\n}\n","import unbindNode from './unbindnode';\nimport triggerOne from './trigger/_triggerone';\nimport removeListener from './off/_removelistener';\nimport defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport defiError from './_helpers/defierror';\n\n// removes a property, its bindings and its events\n// TODO: remove function does not correctly removes delegated events, bindings, tree listeners etc\nexport default function remove(object, givenKey, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'remove');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n    const { silent } = eventOptions;\n    // allow to pass single key or an array of keys\n    const keys = givenKey instanceof Array ? givenKey : [givenKey];\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('remove:key_type', { key });\n        }\n\n        const props = def && def.props;\n        const propDef = props && props[key];\n\n        // if no object definition then simply delete the property\n        if (!propDef) {\n            delete object[key];\n            continue;\n        }\n\n        const { value } = propDef;\n\n        // remove all bindings\n        unbindNode(object, key);\n\n        // TODO: Manual listing of event prefixes may cause problems in future\n        const removeEventPrefies = [\n            '_change:deps',\n            '_change:bindings',\n            '_change:delegated',\n            '_change:tree',\n            'change',\n            'beforechange',\n            'bind',\n            'unbind'\n        ];\n\n        // remove all events\n        nofn.forEach(removeEventPrefies, prefix => removeListener(object, `${prefix}:${key}`));\n\n        // delete property definition\n        delete props[key];\n\n        // delete the property itself\n        delete object[key];\n\n        const extendedEventOptions = {\n            key,\n            value,\n            ...eventOptions\n        };\n\n        // trigger delegated events logic removal for asterisk events (*.*.*@foo)\n        triggerOne(object, '_delete:delegated', extendedEventOptions);\n\n        // fire events if \"silent\" is not true\n        if (!silent) {\n            triggerOne(object, 'delete', extendedEventOptions);\n            triggerOne(object, `delete:${key}`, extendedEventOptions);\n        }\n    }\n}\n","import defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\n\n// the function returns bound node(s)\nexport default function bound(object, key, { all } = { all: false }) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bound');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return all ? [] : null;\n    }\n\n    const def = defs.get(object);\n    const propDef = def.props[key];\n\n    let nodes;\n\n    if (propDef) {\n        const { bindings } = propDef;\n        nodes = (bindings && bindings.map(({ node }) => node)) || [];\n    } else {\n        nodes = [];\n    }\n\n    return all ? nodes : nodes[0] || null;\n}\n","// returns a function which is called when property value is changed\nexport default function createObjectHandler({\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function objectHandler(eventOptions = {}) {\n        const { value } = propDef;\n        const { onChangeValue, changedNode, binder: evtBinder } = eventOptions;\n        const { setValue } = binder;\n        // a dirty hack for https://github.com/matreshkajs/matreshka/issues/19\n        const dirtyHackValue = onChangeValue === 'string' && typeof value === 'number'\n            ? `${value}` : value;\n\n        // don't call setValue if a property is changed via getValue of the same binder\n        if (changedNode === node && onChangeValue === dirtyHackValue && evtBinder === binder) {\n            return;\n        }\n\n        setValue.call(node, value, {\n            value,\n            ...bindingOptions\n        });\n    };\n}\n","import is from '../_helpers/is';\nimport set from '../set';\n\n// returns a function which called when bound node state is changed (eg DOM event is fired)\nexport default function createNodeHandler({\n    object,\n    key,\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function nodeHandler(domEvent = {}) {\n        // nodeHandler.disabled = true is set in unbindNode\n        // we cannot \"turn off\" binder.on when its value is a function\n        // developer needs to clean memory (\"turn off\" callback) manualy in binder.destroy\n        if (nodeHandler.disabled) {\n            return;\n        }\n\n        const previousValue = propDef.value;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n        const { getValue } = binder;\n        const value = getValue.call(node, {\n            previousValue,\n            domEvent,\n            originalEvent: domEvent.originalEvent || domEvent, // jQuery thing\n            // will throw \"preventDefault is not a function\" when domEvent is empty object\n            preventDefault: () => domEvent.preventDefault(),\n            // will throw \"stopPropagation is not a function\" when domEvent is empty object\n            stopPropagation: () => domEvent.stopPropagation(),\n            which,\n            target,\n            ctrlKey,\n            altKey,\n            ...bindingOptions\n        });\n\n        if (!is(value, previousValue)) {\n            set(object, key, value, {\n                fromNode: true,\n                // the following properties are needed to avoid circular changes\n                // they are used at objectHandler\n                changedNode: node,\n                onChangeValue: value,\n                binder\n            });\n        }\n    };\n}\n","// returns a binder for output element\nexport default function output() {\n    return {\n        on: null,\n        getValue() {\n            return this.value || this.textContent;\n        },\n        setValue(value) {\n            const property = 'form' in this ? 'value' : 'textContent';\n            this[property] = value === null ? '' : `${value}`;\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function progress() {\n    return input();\n}\n","// returns a binder for select element\nexport default function select(multiple) {\n    if (multiple) {\n        return {\n            on: 'change',\n            getValue() {\n                const { options } = this;\n                const result = [];\n\n                for (let i = 0; options.length > i; i++) {\n                    if (options[i].selected) {\n                        result.push(options[i].value);\n                    }\n                }\n\n                return result;\n            },\n            setValue(givenValue) {\n                const { options } = this;\n                const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    options[i].selected = ~value.indexOf(options[i].value);\n                }\n            }\n        };\n    }\n\n    return {\n        on: 'change',\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n\n            if (!value) {\n                const { options } = this;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    if (!options[i].value) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function textarea() {\n    // textarea behaves just like text input\n    return input('text');\n}\n","import input from './binders/input';\nimport textarea from './binders/textarea';\nimport select from './binders/select';\nimport progress from './binders/progress';\nimport output from './binders/output';\n\n// defaultBinders collection by default contains only one function-checker\nexport default [(node) => {\n    switch (node.tagName) {\n        case 'INPUT':\n            return input(node.type);\n        case 'TEXTAREA':\n            return textarea();\n        case 'SELECT':\n            return select(node.multiple);\n        case 'PROGRESS':\n            return progress();\n        case 'OUTPUT':\n            return output();\n        default:\n            return null;\n    }\n}];\n","import defaultBinders from './defaultbinders';\n\n// tries to find a binder for given node\nexport default function lookForBinder(node) {\n    for (let i = 0; i < defaultBinders.length; i++) {\n        const binder = defaultBinders[i].call(node, node);\n        if (binder) {\n            return binder;\n        }\n    }\n\n    return undefined;\n}\n","import lookForBinder from '../lookforbinder';\nimport createNodeHandler from './_createnodehandler';\nimport createObjectHandler from './_createobjecthandler';\nimport triggerOne from '../trigger/_triggerone';\nimport addListener from '../on/_addlistener';\nimport debounce from '../_helpers/debounce';\n\nconst spaceReg = /\\s+/;\n\n// handles binding for single property & node\n// the function is used at bindNode\nexport default function bindSingleNode(object, {\n    binder: givenBinder,\n    key,\n    $nodes,\n    node,\n    eventOptions,\n    propDef\n}) {\n    const {\n        silent,\n        getValueOnBind,\n        setValueOnBind,\n        // TODO: We probably need some general flag to cancel or force debouncing\n        // ... which overrides the following flags (something like debounceBinding)\n        debounceSetValue = true,\n        debounceGetValue = true,\n        debounceSetValueOnBind = false,\n        debounceGetValueOnBind = false,\n        debounceSetValueDelay = 0,\n        debounceGetValueDelay = 0,\n        useExactBinder = false\n    } = eventOptions;\n    // create bindings array in property definition object\n    const bindings = propDef.bindings = propDef.bindings || [];\n    const { value } = propDef;\n    const bindingOptions = {\n        self: object,\n        key,\n        value,\n        $nodes,\n        node\n    };\n    let isUndefined = typeof value === 'undefined';\n    let binder;\n    let objectHandler;\n    let nodeHandler;\n\n    // get actual binder\n    if (givenBinder !== null) {\n        // by default binder passed to bindNode is extended by default binder\n        // useExactBinder turns this behavior off\n        if (useExactBinder) {\n            binder = givenBinder;\n        } else {\n            // getting default binder\n            const foundBinder = lookForBinder(node);\n\n            // if default binder is found\n            if (foundBinder) {\n                // extend found binder by given binder\n                if (givenBinder) {\n                    nofn.assign(foundBinder, givenBinder);\n                }\n\n                binder = foundBinder;\n            } else {\n                // default binder is not found\n                binder = givenBinder || {};\n            }\n        }\n    }\n\n    const {\n        getValue, setValue, on, initialize\n    } = binder;\n\n    // call binder.initialize\n    if (initialize) {\n        initialize.call(node, bindingOptions);\n    }\n\n    // add needed event handlers to given node when getValue is given\n    if (getValue) {\n        const syncNodeHandler = createNodeHandler({\n            object,\n            key,\n            node,\n            propDef,\n            binder,\n            bindingOptions\n        });\n\n        let debouncedNodeHandler;\n\n        if (debounceGetValue || debounceGetValueOnBind) {\n            debouncedNodeHandler = debounce(syncNodeHandler, debounceGetValueDelay);\n        }\n\n        if (debounceGetValue) {\n            nodeHandler = debouncedNodeHandler;\n        } else {\n            nodeHandler = syncNodeHandler;\n        }\n\n        // TODO: Throw error when \"on\" and maybe other binder properties has wrong type\n        if (typeof on === 'function') {\n            on.call(node, nodeHandler, bindingOptions);\n        } else if (typeof on === 'string') {\n            // addEventListener is faster than \"on\" method from any DOM library\n            nofn.forEach(\n                on.split(spaceReg),\n                evtName => node.addEventListener(evtName, nodeHandler)\n            );\n        }\n\n        if ((isUndefined && getValueOnBind !== false) || getValueOnBind === true) {\n            if (debounceGetValueOnBind) {\n                debouncedNodeHandler();\n            } else {\n                syncNodeHandler();\n            }\n        }\n\n        isUndefined = typeof propDef.value === 'undefined';\n    }\n\n    // add needed event handlers to the object when setValue is given\n    if (setValue) {\n        const syncObjectHandler = createObjectHandler({\n            node,\n            propDef,\n            binder,\n            bindingOptions,\n            eventOptions\n        });\n\n        let debouncedObjectHandler;\n\n        if (debounceSetValue || debounceSetValueOnBind) {\n            debouncedObjectHandler = debounce(syncObjectHandler, debounceSetValueDelay);\n        }\n\n        if (debounceSetValue) {\n            objectHandler = debouncedObjectHandler;\n        } else {\n            objectHandler = syncObjectHandler;\n        }\n\n        // TODO: Is it possible to get previous value of a property?\n        addListener(object, `_change:bindings:${key}`, objectHandler, { skipChecks: true });\n\n        if ((!isUndefined && setValueOnBind !== false) || setValueOnBind === true) {\n            if (debounceSetValueOnBind) {\n                debouncedObjectHandler();\n            } else {\n                syncObjectHandler();\n            }\n        }\n    }\n\n    // add binding data to bindings array\n    bindings.push({\n        on,\n        node,\n        binder,\n        objectHandler,\n        nodeHandler,\n        bindingOptions\n    });\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `bind:${key}`, extendedEventOptions);\n        triggerOne(object, 'bind', extendedEventOptions);\n    }\n}\n","import removeListener from '../off/_removelistener';\nimport triggerOne from '../trigger/_triggerone';\n\nconst spaceReg = /\\s+/;\n\n// the function removes single binding for single object\n// called by unbindNode\nexport default function removeBinding({\n    object,\n    key,\n    eventOptions,\n    binding\n}) {\n    const {\n        bindingOptions,\n        binder,\n        node,\n        nodeHandler,\n        objectHandler\n    } = binding;\n    const { destroy, on } = binder;\n    const { silent } = eventOptions;\n\n    // if \"on\" is a function then disable it\n    // we cannot \"turn off\" custom listener defined by a programmer\n    // programmer needs to remove custom listener maually inside binder.destroy\n    if (typeof on === 'function') {\n        nodeHandler.disabled = true;\n    } else if (typeof on === 'string') {\n        // remove DOM event listener\n        // removeEventListener is faster than \"on\" method from any DOM library\n        nofn.forEach(\n            on.split(spaceReg),\n            evtName => node.removeEventListener(evtName, nodeHandler)\n        );\n    }\n\n    // remove object event listener\n    removeListener(object, `_change:bindings:${key}`, objectHandler);\n\n    // if binder.destroy is given call it\n    if (destroy) {\n        destroy.call(node, bindingOptions);\n    }\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `unbind:${key}`, extendedEventOptions);\n        triggerOne(object, 'unbind', extendedEventOptions);\n    }\n}\n","import unbindNode from '../unbindnode';\n\n// returns a function which re-adds binding when object branch is changed\n// the function is called by bindNode when something like\n// 'foo.bar.baz' is passed to it as key argument value\n// this is one of the hardest things in the framework to understand\nexport default function createBindingSwitcher({\n    object,\n    deepPath,\n    $nodes,\n    binder,\n    eventOptions,\n    bindNode\n}) {\n    return function bindingSwitcher(changeEvent = {}) {\n        const deepPathLength = deepPath.length;\n        const lastDeepPathItem = deepPath[deepPathLength - 1];\n        const {\n            value, // new value of a branch\n            previousValue, // previous value of a branch\n            restPath // path starting currently changed branch (passed by addTreeListener)\n        } = changeEvent;\n        let target; // an object to call bindNode\n        let previousTarget; // an object to call unbindNode\n\n\n        if (value && typeof value === 'object' && restPath) {\n            // if rest path is given and new value is an object\n            target = value;\n            for (let i = 0; i < restPath.length; i++) {\n                target = target[restPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        } else {\n            // if rest path is not given\n            target = object;\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                target = target[deepPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        }\n\n        // if rest path is given and previous value is an object\n        if (previousValue && typeof previousValue === 'object' && restPath) {\n            previousTarget = previousValue;\n            for (let i = 0; i < restPath.length; i++) {\n                previousTarget = previousTarget[restPath[i]];\n                if (!previousTarget) {\n                    break;\n                }\n            }\n        }\n\n        // add binding for new target\n        if (target && typeof target === 'object') {\n            bindNode(target, lastDeepPathItem, $nodes, binder, eventOptions);\n        }\n\n        // remove binding for previously used object\n        if (previousTarget && typeof previousTarget === 'object') {\n            unbindNode(previousTarget, lastDeepPathItem, $nodes);\n        }\n    };\n}\n","import defs from '../_core/defs';\nimport $ from '../_mq';\n\nconst customSelectorReg = /\\s*:bound\\(([^(]*)\\)\\s*([\\S\\s]*)\\s*/;\nconst randomAttr = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// the function selects nodes based on a selector (including custom values, eg :bound)\n// TODO: selectNodes looks not good, it needs to be refactored and accelerated if possible\nexport default function selectNodes(object, givenSelector) {\n    const { props } = defs.get(object);\n    const selectors = givenSelector.split(',');\n    let result = $();\n\n    nofn.forEach(selectors, (selector) => {\n        const execResult = customSelectorReg.exec(selector);\n        if (execResult) {\n            const boundKey = execResult[1];\n            const subSelector = execResult[2];\n            const propDef = props[boundKey];\n\n            if (propDef) {\n                const { bindings } = propDef;\n                if (bindings) {\n                    const boundNodes = Array(bindings.length);\n                    nofn.forEach(bindings, (binding, i) => {\n                        boundNodes[i] = binding.node;\n                    });\n\n                    // if native selector passed after :bound(KEY) is not empty string\n                    // for example \":bound(KEY) .my-selector\"\n                    if (subSelector) {\n                        // if native selector contains children selector\n                        // for example \":bound(KEY) > .my-selector\"\n                        if (subSelector.indexOf('>') === 0) {\n                            // selecting children\n                            nofn.forEach(boundNodes, (node) => {\n                                node.setAttribute(randomAttr, randomAttr);\n                                const selected = node.querySelectorAll(`[${randomAttr}=\"${randomAttr}\"] ${subSelector}`);\n                                result = result.add(selected);\n                                node.removeAttribute(randomAttr);\n                            });\n                        } else {\n                            // if native selector doesn't contain children selector\n                            nofn.forEach(boundNodes, (node) => {\n                                const selected = node.querySelectorAll(subSelector);\n                                result = result.add(selected);\n                            });\n                        }\n                    } else {\n                        // if native selector is empty string just add bound nodes to result\n                        result = result.add(boundNodes);\n                    }\n                }\n            }\n        } else {\n            // if it's native selector (no custom things)\n            result = result.add(selector);\n        }\n    });\n\n    return result;\n}\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport getNodes from './_getnodes';\nimport createBindingSwitcher from './_createbindingswitcher';\nimport bindSingleNode from './_bindsinglenode';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport addTreeListener from '../on/_addtreelistener';\n\n// initializes binsing between a property of an object to HTML node\nexport default function bindNode(object, key, node, binder, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bindNode');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    binder = binder || {}; // eslint-disable-line no-param-reassign\n\n    initDefi(object);\n\n    // throw an error when key is falsy\n    if (!key) {\n        throw defiError('binding:falsy_key');\n    }\n\n    if (key instanceof Array) {\n        if (typeof key[0] === 'string') {\n            /*\n             * accept array of keys\n             * this.bindNode(['a', 'b', 'c'], node)\n             */\n            nofn.forEach(key, itemKey => bindNode(object, itemKey, node, binder, eventOptions));\n        } else {\n            /*\n             * accept array of objects\n             * this.bindNode([{key, node, binder, event}], { silent: true });\n             */\n            nofn.forEach(key, ({\n                key: itemKey,\n                node: itemNode,\n                binder: itemBinder,\n                event: itemEventOptions\n            }) => {\n                const commonEventOptions = node;\n                const mergedEventOptions = {};\n\n                if (commonEventOptions) {\n                    // extend event object by \"global\" event\n                    nofn.assign(mergedEventOptions, commonEventOptions);\n                }\n\n                if (itemEventOptions) {\n                    // extend event object by \"local\" event (\"event\" key of an object)\n                    nofn.assign(mergedEventOptions, itemEventOptions);\n                }\n\n                bindNode(object, itemKey, itemNode, itemBinder, mergedEventOptions);\n            });\n        }\n\n        return object;\n    }\n\n\n    if (typeof key === 'object') {\n        nofn.forOwn(key, (keyObjValue, keyObjKey) => {\n            // binder means eventOptions\n            eventOptions = binder; // eslint-disable-line no-param-reassign\n\n            if (\n                keyObjValue\n                && keyObjValue.constructor === Object\n                && 'node' in keyObjValue\n            ) {\n                // this.bindNode({ key: { node: $(), binder } ) }, { on: 'evt' }, { silent: true });\n                bindNode(\n                    object, keyObjKey, keyObjValue.node,\n                    keyObjValue.binder || node, eventOptions\n                );\n            } else if (\n                keyObjValue\n                && keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.bindNode({ key: [{\n                //   node: $(),\n                //   binder\n                // }] ) }, { on: 'evt' }, { silent: true });\n                nofn.forEach(keyObjValue, (keyObjValueItem) => {\n                    bindNode(\n                        object, keyObjKey, keyObjValueItem.node,\n                        keyObjValueItem.binder || node, eventOptions\n                    );\n                });\n            } else {\n                // this.bindNode({ key: $() }, { on: 'evt' }, { silent: true });\n                bindNode(object, keyObjKey, keyObjValue, node, eventOptions);\n            }\n        });\n\n        return object;\n    }\n\n    const {\n        optional = false,\n        exactKey = false\n    } = eventOptions;\n    const $nodes = getNodes(object, node);\n\n    // check node existence\n    if (!$nodes.length) {\n        if (optional) {\n            return object;\n        }\n\n        throw defiError('binding:node_missing', { key, node });\n    }\n\n    if (!exactKey) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            // handle binding when key arg includes dots (eg \"a.b.c.d\")\n            const bindingSwitcher = createBindingSwitcher({\n                object,\n                deepPath,\n                $nodes,\n                binder,\n                eventOptions,\n                bindNode\n            });\n\n            addTreeListener(object, deepPath.slice(0, deepPathLength - 1), bindingSwitcher);\n\n            bindingSwitcher();\n\n            return object;\n        }\n    }\n\n    const propDef = defineProp(object, key);\n\n    // handle binding for every node separately\n    nofn.forEach($nodes, oneNode => bindSingleNode(object, {\n        $nodes,\n        node: oneNode,\n        key,\n        eventOptions,\n        binder,\n        propDef\n    }));\n\n    return object;\n}\n","// gets value of a property in nested object\n// eg \"d\" from a.b.c.d\nexport default function deepFind(obj, givenPath) {\n    const paths = typeof givenPath === 'string' ? givenPath.split('.') : givenPath;\n    let current = obj;\n\n    for (let i = 0; i < paths.length; ++i) {\n        if (typeof current[paths[i]] === 'undefined') {\n            return undefined;\n        }\n\n        current = current[paths[i]];\n    }\n\n    return current;\n}\n","import set from '../set';\nimport deepFind from '../_helpers/deepfind';\n\n// creates event handler for target object which will be fired when a source is changed\nexport default function createCalcHandler({\n    object,\n    eventOptions,\n    allSources,\n    target,\n    def,\n    handler\n}) {\n    return function calcHandler(changeEvent = {}) {\n        const values = [];\n        const { protector = {} } = changeEvent;\n        const protectKey = target + def.id;\n        const { promiseCalc } = eventOptions;\n        const setEventOptions = {\n            protector,\n            ...eventOptions,\n            ...changeEvent\n        };\n\n        if (protectKey in protector) {\n            return;\n        }\n\n        protector[protectKey] = true;\n\n        nofn.forEach(allSources, ({\n            sourceObject,\n            sourceKey,\n            isDelegated\n        }) => {\n            const value = isDelegated ? deepFind(sourceObject, sourceKey) : sourceObject[sourceKey];\n            values.push(value);\n        });\n\n        let targetValue = handler.apply(object, values);\n\n        if (promiseCalc) {\n            if (!(targetValue instanceof Promise)) {\n                targetValue = Promise.resolve(targetValue);\n            }\n\n            targetValue\n                .then(promiseResult => set(object, target, promiseResult, setEventOptions))\n                .catch((e) => {\n                    throw Error(e);\n                });\n        } else {\n            set(object, target, targetValue, setEventOptions);\n        }\n    };\n}\n","import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport defiError from '../_helpers/defierror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n    calcHandler,\n    allSources,\n    sourceKey,\n    sourceObject,\n    eventOptions\n}) {\n    let { exactKey = false } = eventOptions;\n    let isDelegated = false;\n\n    // source key must be a string\n    if (typeof sourceKey !== 'string') {\n        throw defiError('calc:source_key_type', { sourceKey });\n    }\n\n    // source object must be an object\n    if (!sourceObject || typeof sourceObject !== 'object') {\n        throw defiError('calc:source_object_type', { sourceObject });\n    }\n\n    if (!exactKey) {\n        const deepPath = sourceKey.split('.');\n\n        // if something like a.b.c is used as a key\n        if (deepPath.length > 1) {\n            isDelegated = true;\n            // TODO: Avoid collisions with bindings by using another event name\n            // ... instead of _change:tree:xxx\n            addTreeListener(sourceObject, deepPath, calcHandler);\n        } else {\n            exactKey = true;\n        }\n    }\n\n\n    if (exactKey) {\n        // normal handler\n        addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n    }\n\n    allSources.push({\n        sourceKey,\n        sourceObject,\n        isDelegated\n    });\n}\n","import initDefi from '../_core/init';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport debounce from '../_helpers/debounce';\nimport addSource from './_addsource';\nimport createCalcHandler from './_createcalchandler';\nimport defineProp from '../_core/defineprop';\n\n// defines a property which is dependend on other properties\nexport default function calc(object, target, sources, givenHandler, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'calc');\n\n    if (target instanceof Object) {\n        /*\n         * accept an object\n         * this.calc({target: { source, handler, event } }, commonEventOptions);\n         */\n        nofn.forOwn(target, ({\n            source: itemSource,\n            handler: itemHandler,\n            event: itemEventOptions\n        }, itemTarget) => {\n            const commonEventOptions = sources;\n            const mergedEventOptions = {};\n\n            if (commonEventOptions) {\n                // extend event object by \"global\" event\n                nofn.assign(mergedEventOptions, commonEventOptions);\n            }\n\n            if (itemEventOptions) {\n                // extend event object by \"local\" event (\"event\" key of an object)\n                nofn.assign(mergedEventOptions, itemEventOptions);\n            }\n\n            calc(object, itemTarget, itemSource, itemHandler, mergedEventOptions);\n        });\n\n        return object;\n    }\n\n    if (typeof target !== 'string') {\n        throw defiError('calc:target_type', { target });\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = initDefi(object);\n    const {\n        setOnInit = true,\n        debounceCalcOnInit = false,\n        debounceCalc = true,\n        debounceCalcDelay = 0,\n        // the next option is used to hide a property for internal use (eg in bindings parser)\n        // hidden property means no accessors\n        isTargetPropertyHidden = false\n    } = eventOptions;\n    const defaultHandler = value => value;\n    const handler = givenHandler || defaultHandler;\n    const allSources = [];\n    const syncCalcHandler = createCalcHandler({\n        object,\n        eventOptions,\n        allSources,\n        target,\n        def,\n        handler\n    });\n\n    let debouncedCalcHandler;\n    let calcHandler;\n\n    if (debounceCalcOnInit || debounceCalc) {\n        debouncedCalcHandler = debounce(syncCalcHandler, debounceCalcDelay);\n    }\n\n    defineProp(object, target, isTargetPropertyHidden);\n\n    if (!(sources instanceof Array)) {\n        sources = [sources]; // eslint-disable-line no-param-reassign\n    }\n\n    if (debounceCalc) {\n        calcHandler = debouncedCalcHandler;\n    } else {\n        calcHandler = syncCalcHandler;\n    }\n\n    nofn.forEach(sources, (source) => {\n        if (typeof source === 'string') {\n            // source object is current object\n            addSource({\n                calcHandler,\n                allSources,\n                sourceKey: source,\n                sourceObject: object,\n                eventOptions\n            });\n        } else {\n            // source object is external object\n            if (!source || typeof source !== 'object') {\n                throw defiError('calc:source_type', { source });\n            }\n\n            const sourceKey = source.key;\n            const sourceObject = source.object;\n            if (sourceKey instanceof Array) {\n                // many keys are passed\n                nofn.forEach(sourceKey, (sourceKeyItem) => {\n                    addSource({\n                        calcHandler,\n                        allSources,\n                        sourceKey: sourceKeyItem,\n                        sourceObject,\n                        eventOptions\n                    });\n                });\n            } else {\n                // one key is passed\n                addSource({\n                    calcHandler,\n                    allSources,\n                    sourceKey,\n                    sourceObject,\n                    eventOptions\n                });\n            }\n        }\n    });\n\n    if (setOnInit) {\n        if (debounceCalcOnInit) {\n            debouncedCalcHandler();\n        } else {\n            syncCalcHandler();\n        }\n    }\n\n    return object;\n}\n","// triggers given DOM event on given node\nexport default function triggerOneDOMEvent({\n    node,\n    eventName,\n    triggerArgs\n}) {\n    const { Event } = window;\n    const event = new Event(eventName, {\n        bubbles: true,\n        cancelable: true\n    });\n\n    // defiTriggerArgs will be used in a handler created by addDOMListener\n    event.defiTriggerArgs = triggerArgs;\n\n    node.dispatchEvent(event);\n}\n","import triggerOneDOMEvent from './_triggeronedomevent';\nimport defs from '../_core/defs';\n\n// triggers DOM event on bound nodes\nexport default function triggerDOMEvent(object, key, eventName, selector, triggerArgs) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return;\n    }\n\n    const { bindings } = propDef;\n\n    if (!bindings) {\n        return;\n    }\n\n    nofn.forEach(bindings, ({ node }) => {\n        if (selector) {\n            // if selector is given trigger an event on all node descendants\n            const descendants = node.querySelectorAll(selector);\n            nofn.forEach(descendants, (descendant) => {\n                triggerOneDOMEvent({\n                    node: descendant,\n                    eventName,\n                    triggerArgs\n                });\n            });\n        } else {\n            // trigger an event for single node\n            triggerOneDOMEvent({\n                node,\n                eventName,\n                triggerArgs\n            });\n        }\n    });\n}\n","import domEventReg from '../on/_domeventregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport defs from '../_core/defs';\nimport triggerOne from './_triggerone';\nimport triggerDomEvent from './_triggerdomevent';\n\n// triggers an event\nexport default function trigger(object, givenNames, ...triggerArgs) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'trigger');\n    let names;\n\n    // allow to use strings only as event name\n    if (typeof givenNames === 'string') {\n        names = givenNames.split(splitBySpaceReg);\n    } else {\n        throw defiError('trigger:names_type', { names: givenNames });\n    }\n\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return object;\n    }\n\n    const { events: allEvents } = def;\n\n    if (!allEvents) {\n        return object;\n    }\n\n    nofn.forEach(names, (name) => {\n        const domEvtExecResult = domEventReg.exec(name);\n\n        if (domEvtExecResult) {\n            // if EVT::KEY(SELECTOR) ia passed as event name then trigger DOM event\n            const [, eventName, key, selector] = domEvtExecResult;\n            triggerDomEvent(object, key, eventName, selector, triggerArgs);\n        } else {\n            // trigger ordinary event\n            triggerOne(object, name, triggerArgs);\n        }\n    });\n\n    return object;\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\n\n// the function is called when some part of a path is changed\n// it delegates event listener for new branch of an object and undelegates it for old one\n// used for non-asterisk events\nexport default function changeHandler({\n    previousValue,\n    value\n}, {\n    path,\n    name,\n    callback,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (value && typeof value === 'object') {\n        const delegateListener = require('./'); // fixing circular ref\n\n        delegateListener(value, path, name, callback, info);\n    }\n\n    if (previousValue && typeof previousValue === 'object') {\n        undelegateListener(previousValue, path, name, callback, info);\n    }\n}\n","// returns DOM event handler\nexport default function createDomEventHandler({\n    key,\n    object,\n    callback\n}) {\n    return function domEventHandler(domEvent) {\n        const originalEvent = domEvent.originalEvent || domEvent;\n        // defiTriggerArgs are created when DOM event is triggered by trigger method\n        const triggerArgs = originalEvent.defiTriggerArgs;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n\n        if (triggerArgs) {\n            // if args are passed to trigger method then pass them to an event handler\n            callback.apply(object, triggerArgs);\n        } else {\n            // use the following object as an arg for event handler\n            callback.call(object, {\n                self: object,\n                node: this,\n                preventDefault: () => domEvent.preventDefault(),\n                stopPropagation: () => domEvent.stopPropagation(),\n                key,\n                domEvent,\n                originalEvent,\n                which,\n                target,\n                ctrlKey,\n                altKey\n            });\n        }\n    };\n}\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport addListener from './_addlistener';\nimport $ from '../_mq';\nimport createDomEventHandler from './_createdomeventhandler';\n\n// returns an object with event handlers used at addDomListener\nfunction createBindingHandlers({\n    fullEventName,\n    domEventHandler,\n    selector\n}) {\n    return {\n        bindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).on(fullEventName, selector, domEventHandler);\n            }\n        },\n        unbindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).off(fullEventName, selector, domEventHandler);\n            }\n        }\n    };\n}\n\n// adds DOM event listener for nodes bound to given property\nexport default function addDomListener(object, key, eventName, selector, callback, info) {\n    const def = initDefi(object);\n    const propDef = defineProp(object, key);\n\n    const domEventHandler = createDomEventHandler({\n        key,\n        object,\n        callback\n    });\n\n    // making possible to remove this event listener\n    domEventHandler._callback = callback;\n\n    const eventNamespace = def.id + key;\n    const fullEventName = `${eventName}.${eventNamespace}`;\n    const { bindHandler, unbindHandler } = createBindingHandlers({\n        fullEventName,\n        domEventHandler,\n        selector\n    });\n    const addBindListenerResult\n        = addListener(object, `bind:${key}`, bindHandler, info);\n    const addUnbindListenerResult\n        = addListener(object, `unbind:${key}`, unbindHandler, info);\n\n    // if events are added successfully then run bindHandler for every node immediately\n    // TODO: Describe why do we need addBindListenerResult and addUnbindListenerResult\n    if (addBindListenerResult && addUnbindListenerResult) {\n        const { bindings } = propDef;\n        if (bindings) {\n            nofn.forEach(bindings, ({ node }) => bindHandler({ node }));\n        }\n    }\n\n    return object;\n}\n","// Object.assign polyfyll\n/* istanbul ignore next */\nconst assign = Object.assign || function assign(target) {\n    /* istanbul ignore next */\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert variable to object');\n    }\n\n    const output = Object(target);\n\n    for (let index = 1; index < arguments.length; index++) {\n        const source = arguments[index];\n        if (source !== undefined && source !== null) {\n            nofn.forOwn(source, (nextValue, nextKey) => {\n                output[nextKey] = nextValue;\n            });\n        }\n    }\n\n    return output;\n};\n\nexport default assign;\n","import Init from './_init';\nimport data from './_data';\n\n// adds unique nodes to mq collection\nexport default function add(selector) {\n    const idMap = {};\n\n    let result;\n\n    const nodes = new Init(selector);\n\n    if (this.length) {\n        result = new Init();\n        for (let i = 0; i < this.length; i++) {\n            const node = this[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            idMap[nodeID] = 1;\n            result.push(node);\n        }\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            if (!idMap[nodeID]) {\n                idMap[nodeID] = 1;\n                result.push(node);\n            }\n        }\n    } else {\n        result = nodes;\n    }\n\n    return result;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\n\n// removes event handler from a set of elements\nexport default function off(namesStr, selector, handler) {\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    const names = namesStr.split(splitBySpaceReg);\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n\n            if (!name && namespace) {\n                for (let k = 0, keys = Object.keys(data.allEvents); k < keys.length; k++) {\n                    const events = data.allEvents[keys[k]];\n\n                    for (let l = 0; l < events.length; l++) {\n                        const event = events[i];\n                        if (event.namespace === namespace && event.nodeID === node.b$) {\n                            node.removeEventListener(event.name, event.delegate || event.handler);\n                            events.splice(l, 1);\n                            l -= 1;\n                        }\n                    }\n                }\n\n                continue;\n            }\n\n            const events = data.allEvents[name + node.b$];\n            if (events) {\n                for (let k = 0; k < events.length; k++) {\n                    const event = events[k];\n                    if (\n                        (!handler || handler === event.handler || handler === event.delegate)\n                        && (!namespace || namespace === event.namespace)\n                        && (!selector || selector === event.selector)\n                    ) {\n                        node.removeEventListener(name, event.delegate || event.handler);\n                        events.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n            } else if (!namespace && !selector) {\n                node.removeEventListener(name, handler);\n            }\n        }\n    }\n\n    return this;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n    return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n    const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n    const splittedSelector = selector.split(',');\n\n    let matching = '';\n\n    for (let i = 0; i < splittedSelector.length; i++) {\n        const sel = splittedSelector[i];\n        matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n    }\n\n\n    this.setAttribute(randomID, randomID);\n\n    if (is(evt.target, matching)) {\n        handler.call(this, evt);\n    }\n\n    this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n    const names = namesStr.split(splitBySpaceReg);\n    let delegate;\n\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (selector) {\n        delegate = function uniqueDelegateHandler(evt) {\n            delegateHandler.call(this, evt, selector, handler);\n        };\n    }\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n            let exist = false;\n\n            for (let k = 0; k < events.length; k++) {\n                const event = events[k];\n\n                if (handler === event.handler && (!selector || selector === event.selector)) {\n                    exist = true;\n                    break;\n                }\n            }\n\n            if (!exist) {\n                events.push({\n                    delegate,\n                    handler,\n                    namespace,\n                    selector,\n                    nodeID,\n                    name\n                });\n\n                node.addEventListener(name, delegate || handler, false);\n            }\n        }\n    }\n\n    return this;\n}\n","import html2nodeList from './_html2nodelist';\nimport Init from './_init';\n\n// parses given HTML and returns mq instance\nexport default function parseHTML(html) {\n    return new Init(html2nodeList(html));\n}\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport $ from '../_mq';\n\n// removes dom listener from nodes bound to given key\nexport default function removeDomListener(\n    object,\n    key,\n    eventName,\n    selector,\n    callback,\n    info\n) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // collect bound nodes and remove DOM event listener\n        const nodes = Array(bindings.length);\n        const eventNamespace = def.id + key;\n\n        nofn.forEach(bindings, (binding, index) => {\n            nodes[index] = binding.node;\n        });\n\n        $(nodes).off(`${eventName}.${eventNamespace}`, selector, callback);\n    }\n\n    // remove bind and unbind listeners from given key\n    removeListener(object, `bind:${key}`, callback, info);\n    removeListener(object, `unbind:${key}`, callback, info);\n\n    return object;\n}\n","import splitBySpaceReg from './_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport off from '../off';\nimport debounce from '../_helpers/debounce';\nimport addListener from './_addlistener';\nimport delegateListener from './_delegatelistener';\n\n// adds event listener\nexport default function on(object, givenNames, givenCallback, options) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'on');\n\n    const isNamesVarArray = givenNames instanceof Array;\n\n    // allow to pass name-handler object\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        nofn.forOwn(givenNames, (namesObjCallback, namesObjName) =>\n            on(object, namesObjName, namesObjCallback, givenCallback, options));\n        return object;\n    }\n\n    if (typeof givenNames !== 'string' && !isNamesVarArray) {\n        throw defiError('on:names_type', { names: givenNames });\n    }\n\n    // split by spaces\n    // TODO: Array of names passed to on method is a non-documented feature\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    const { triggerOnInit, once, debounce: debounceOption } = options || {};\n    let callback;\n    if (once) {\n        callback = function onceCallback() {\n            givenCallback.apply(this, arguments);\n            // remove event listener after its call\n            off(object, names, onceCallback);\n        };\n\n        // allow to remove event listener py passing original callback to \"off\"\n        callback._callback = givenCallback;\n    } else if (typeof debounceOption === 'number' || debounceOption === true) {\n        callback = debounce(givenCallback, debounceOption === true ? 0 : debounceOption, object);\n    } else {\n        callback = givenCallback;\n    }\n\n    nofn.forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n\n        if (delegatedEventParts.length > 1) {\n            // if @ exists in event name then this is delegated event\n            const [path, delegatedName] = delegatedEventParts;\n            delegateListener(object, path, delegatedName, callback);\n        } else {\n            // if not, this is simple event\n            addListener(object, name, callback);\n        }\n    });\n\n    // call callback immediatelly if triggerOnInit is true\n    if (triggerOnInit) {\n        callback.call(object, options);\n    }\n\n    return object;\n}\n","import on from './on';\nimport off from './off';\nimport trigger from './trigger';\nimport calc from './calc';\nimport bindNode from './bindnode';\nimport bound from './bound';\nimport unbindNode from './unbindnode';\nimport set from './set';\nimport remove from './remove';\nimport mediate from './mediate';\n\n// the following methods can be used as static methods and as instance methods\nexport {\n    on,\n    off,\n    trigger,\n    calc,\n    bindNode,\n    bound,\n    unbindNode,\n    set,\n    remove,\n    mediate\n};\n","import * as functions from './_lib';\n\nmodule.exports = functions;\n"],"sourceRoot":""}