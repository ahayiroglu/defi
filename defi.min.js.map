{"version":3,"sources":["webpack://defi/webpack/universalModuleDefinition","webpack://defi/webpack/bootstrap","webpack://defi/./src/_core/defs.js","webpack://defi/./src/_helpers/checkobjecttype.js","webpack://defi/./src/_helpers/defierror.js","webpack://defi/./src/trigger/_triggerone.js","webpack://defi/./src/off/_removelistener.js","webpack://defi/./src/_mq/index.js","webpack://defi/./src/on/_addlistener.js","webpack://defi/./src/_core/init.js","webpack://defi/./src/_core/defineprop.js","webpack://defi/./src/set.js","webpack://defi/./src/on/_splitbyspaceregexp.js","webpack://defi/./src/on/_domeventregexp.js","webpack://defi/./src/_mq/_init.js","webpack://defi/./src/_mq/_data.js","webpack://defi/./src/off/_undelegatelistener.js","webpack://defi/./src/_helpers/debounce.js","webpack://defi/./src/on/_delegatelistener/index.js","webpack://defi/./src/unbindnode/index.js","webpack://defi/./src/binders/input.js","webpack://defi/./src/off/index.js","webpack://defi/./src/_mq/_html2nodelist.js","webpack://defi/./src/_helpers/is.js","webpack://defi/./src/on/_addtreelistener.js","webpack://defi/./src/off/_removetreelistener.js","webpack://defi/./src/bindnode/_getnodes.js","webpack://defi/./src/index.js","webpack://defi/./src/_lib.js","webpack://defi/./src/on/index.js","webpack://defi/./src/off/_removedomlistener.js","webpack://defi/./src/_mq/parsehtml.js","webpack://defi/./src/_mq/on.js","webpack://defi/./src/_mq/off.js","webpack://defi/./src/_mq/add.js","webpack://defi/./src/_helpers/assign.js","webpack://defi/./src/on/_adddomlistener.js","webpack://defi/./src/on/_createdomeventhandler.js","webpack://defi/./src/on/_delegatelistener/changehandler.js","webpack://defi/./src/trigger/index.js","webpack://defi/./src/trigger/_triggerdomevent.js","webpack://defi/./src/trigger/_triggeronedomevent.js","webpack://defi/./src/calc/index.js","webpack://defi/./src/calc/_addsource.js","webpack://defi/./src/calc/_createcalchandler.js","webpack://defi/./src/_helpers/deepfind.js","webpack://defi/./src/bindnode/index.js","webpack://defi/./src/bindnode/_selectnodes.js","webpack://defi/./src/bindnode/_createbindingswitcher.js","webpack://defi/./src/unbindnode/_removebinding.js","webpack://defi/./src/bindnode/_bindsinglenode.js","webpack://defi/./src/lookforbinder.js","webpack://defi/./src/defaultbinders.js","webpack://defi/./src/binders/textarea.js","webpack://defi/./src/binders/select.js","webpack://defi/./src/binders/progress.js","webpack://defi/./src/binders/output.js","webpack://defi/./src/bindnode/_createnodehandler.js","webpack://defi/./src/bindnode/_createobjecthandler.js","webpack://defi/./src/bound.js","webpack://defi/./src/remove.js","webpack://defi/./src/mediate.js"],"names":["root","factory","exports","module","define","amd","defi","window","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","PseudoMap","obj","set","data","writable","configurable","has","WeakMap","method","typeofObject","defiError","getTypeError","variable","variableName","expectedType","errors","common:object_type","_ref","binding:node_missing","_ref2","node","bindingErrorPrefix","binding:falsy_key","calc:target_type","_ref3","target","calcErrorPrefix","calc:source_key_type","_ref4","sourceKey","calc:source_object_type","_ref5","sourceObject","calc:source_type","_ref6","source","trigger:names_type","_ref7","names","eventsErrorPrefix","on:names_type","_ref8","remove:key_type","_ref9","mediate:key_type","_ref10","getError","Error","triggerOne","triggerArgs","def","defs","events","length","Array","latestEvent","callback","apply","info","allEvents","retain","noTrigger","domEventExecResult","domEventReg","exec","eventName","selector","require","removeDomListener","allEventsName","allEventsItem","_target2","_keys","keys","_i","_l2","_target","_index","_l","event","removeEventData","_target3","_index2","_l3","argCallback","_callback","eventCallback","push","a","mq","context","Init","parseHTML","assign","on","off","add","propModEventReg","arguments","initDefi","_info$skipChecks","skipChecks","addDomListener","existingEvent","test","defineProp","replace","objectId","props","id","propDef","mediator","bindings","v","fromSetter","eventOptions","checkObjectType","objKey","objVal","newValue","previousValue","_eventOptions","skipMediator","fromMediator","force","forceHTML","silent","silentHTML","skipCalc","is","_keys2","_i2","_source","_key","isChanged","_result","self","extendedEventOptions","triggerChange","beforechangeEventName","beforechangeStr","beforechange","changeBindingsEventName","changeEventName","changeStr","change","changeDepsEventName","changeDelegatedKeyEventName","changeTreeEventName","changeCommonEventName","win","MQInit","result","nodeType","html2nodeList","newContext","querySelectorAll","document","this","nodeIndex","undelegateListener","givenPath","path","split","pathStr","_end","_j","join","delegatedChangeEvtName","delegatedEventName","detatchDelegatedLogic","removeListener","func","givenDelay","thisArg","timeout","delay","args","callContext","clearTimeout","setTimeout","delegatedData","addListener","changeHandler","unbindNode","itemKey","keyObjKey","keyObjValue","constructor","keyObjValueItem","deep","propsKey","_target4","_l4","deepPath","deepPathLength","removeTreeListener","slice","_target5","_index3","_l5","binding","removeBinding","nodesItem","retainBindings","retainNodes","_target7","getNodes","_index5","_l7","_target6","_index4","_l6","type","getValue","checked","setValue","givenNames","isNamesVarArray","namesObjName","namesObjCallback","propName","eventNamespace","$","splitBySpaceReg","delegatedEventParts","delegatedName","givenHTML","wrapMap","option","legend","thead","tr","td","col","area","_","html","createElement","optgroup","tbody","tfoot","colgroup","caption","th","ex","wrapper","innerHTML","children","childNodes","v1","v2","createTreeListener","handler","restPath","newHandler","changeEvent","extendedChangeEvent","addTreeListener","listenPath","delegateListener","listenedPath","htmlReg","customSelectorReg","selectNodes","nodes","functions","u","f","trigger","calc","bindNode","bound","remove","mediate","givenCallback","options","triggerOnInit","once","debounceOption","debounce","onceCallback","index","splitByDotReg","randomID","Math","random","toString","namesStr","delegate","evt","scopeSelector","splittedSelector","matching","sel","setAttribute","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","removeAttribute","_names$i$split","namespace","j","nodeID","b$","exist","k","addEventListener","removeEventListener","splice","idMap","TypeError","output","nextKey","nextValue","domEventHandler","createDomEventHandler","_createBindingHandler","fullEventName","bindHandler","unbindHandler","createBindingHandlers","addBindListenerResult","addUnbindListenerResult","domEvent","originalEvent","defiTriggerArgs","which","ctrlKey","altKey","preventDefault","stopPropagation","_len","domEvtExecResult","triggerDomEvent","descendant","triggerOneDOMEvent","Event","bubbles","cancelable","dispatchEvent","sources","givenHandler","itemTarget","_keys5","_i5","itemSource","itemHandler","itemEventOptions","mergedEventOptions","_key2","_source2","_key4","_result2","_source4","_keys4","_i4","calcHandler","_eventOptions$setOnIn","setOnInit","_eventOptions$debounc","debounceCalcOnInit","_eventOptions$debounc2","debounceCalc","_eventOptions$debounc3","debounceCalcDelay","allSources","syncCalcHandler","createCalcHandler","debouncedCalcHandler","addSource","sourceKeyItem","_eventOptions$exactKe","exactKey","isDelegated","values","_changeEvent$protecto","protector","protectKey","promiseCalc","setEventOptions","deepFind","targetValue","Promise","resolve","then","promiseResult","catch","paths","current","binder","_eventOptions$optiona","optional","$nodes","bindingSwitcher","createBindingSwitcher","oneNode","bindSingleNode","randomAttr","givenSelector","selectors","execResult","boundKey","subSelector","boundNodes","indexOf","selected","lastDeepPathItem","previousTarget","spaceReg","bindingOptions","nodeHandler","objectHandler","destroy","disabled","evtName","givenBinder","getValueOnBind","setValueOnBind","debounceSetValue","debounceGetValue","debounceSetValueOnBind","_eventOptions$debounc4","debounceGetValueOnBind","_eventOptions$debounc5","debounceSetValueDelay","_eventOptions$debounc6","debounceGetValueDelay","_eventOptions$useExac","useExactBinder","isUndefined","foundBinder","lookForBinder","_binder","initialize","syncNodeHandler","createNodeHandler","debouncedNodeHandler","syncObjectHandler","createObjectHandler","debouncedObjectHandler","_keys3","_i3","_source3","_key3","defaultBinders","tagName","input","textarea","select","multiple","progress","givenValue","textContent","fromNode","changedNode","onChangeValue","evtBinder","all","map","givenKey","_loop","prefix","createMediator","givenKeys","isKeysArray","propMediator"],"mappings":"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","file":"defi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"defi\"] = factory();\n\telse\n\t\troot[\"defi\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","function PseudoMap() {}\n\n// PseudoMap simulates WeakMap behavior with O(1) search complexity\n// it's needed to support @IE9 and @IE10\nnofn.assign(PseudoMap.prototype, {\n    get(obj) {\n        return obj.defi;\n    },\n    set(obj, data) {\n        Object.defineProperty(obj, 'defi', {\n            value: data,\n            enumerable: false,\n            writable: false,\n            configurable: false\n        });\n    },\n    has(obj) {\n        return 'defi' in obj;\n    }\n});\n\nexport default typeof WeakMap === 'undefined' ? new PseudoMap() : new WeakMap();\n","import defiError from './defierror';\n\n// checks type of a variable and throws an error if its type is not an object\nexport default function checkObjectType(object, method) {\n    const typeofObject = object === null ? 'null' : typeof object;\n\n    if (typeofObject !== 'object' && typeofObject !== 'function') {\n        throw defiError('common:object_type', {\n            object,\n            method\n        });\n    }\n}\n","/* eslint-disable prefer-template, max-len */\nconst bindingErrorPrefix = 'Binding error:';\nconst calcErrorPrefix = 'Calc error:';\nconst eventsErrorPrefix = 'Events error:';\n\nconst getType = (variable) => {\n    if (variable === null) {\n        return 'null';\n    }\n\n    return typeof variable;\n};\nconst getTypeError = (variable, variableName, expectedType) =>\n    `${variableName} must have type \"${expectedType}\" but got \"${getType(variable)}\" instead.`;\n\nconst errors = {\n    'common:object_type': ({ object, method }) => `Error in ${method}: `\n        + getTypeError(object, 'object', 'object'),\n\n    'binding:node_missing': ({ key, node }) => {\n        const selectorInfo = typeof node === 'string' ? ` (given selector is \"${node}\")` : '';\n        return `${bindingErrorPrefix} node is missing for key \"${key}\"${selectorInfo}.`;\n    },\n    'binding:falsy_key': () => `${bindingErrorPrefix} \"key\" arg cannot be falsy`,\n    'calc:target_type': ({ target }) =>\n        `${calcErrorPrefix} ${getTypeError(target, 'target key', 'string')}`,\n    'calc:source_key_type': ({ sourceKey }) =>\n        `${calcErrorPrefix} ${getTypeError(sourceKey, 'source key', 'string')}`,\n    'calc:source_object_type': ({ sourceObject }) =>\n        `${calcErrorPrefix} ${getTypeError(sourceObject, 'source object', 'object')}`,\n    'calc:source_type': ({ source }) =>\n        `${calcErrorPrefix} ${getTypeError(source, 'source', 'object')}`,\n\n    'trigger:names_type': ({ names }) =>\n        `${eventsErrorPrefix} ${getTypeError(names, 'event name', 'string')}`,\n\n    'on:names_type': ({ names }) => errors['trigger:names_type']({ names }),\n\n    'remove:key_type': ({ key }) =>\n        `Error in remove: ${getTypeError(key, 'key', 'string')}`,\n\n    'mediate:key_type': ({ key }) =>\n        `Error in mediate: ${getTypeError(key, 'key', 'string')}`\n};\n\nexport default function defiError(key, data) {\n    const getError = errors[key];\n    if (!getError) {\n        /* istanbul ignore next */\n        throw Error(`Unknown error \"${key}\". Please report about this on Github.`);\n    }\n\n    return new Error(getError(data));\n}\n","import defs from '../_core/defs';\n\n// triggers one event\nexport default function triggerOne(object, name, triggerArgs) {\n    const def = defs.get(object);\n    const events = def && def.events[name];\n\n    if (events) {\n        const l = events.length;\n        let i = 0;\n\n        // allow to pass both array of args and single arg as triggerArgs\n        if (triggerArgs instanceof Array) {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.apply(object, triggerArgs);\n                i += 1;\n            }\n        } else {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.call(object, triggerArgs);\n                i += 1;\n            }\n        }\n    }\n}\n\n// latestEvent is used as required hack in somemethods\ntriggerOne.latestEvent = {\n    info: {},\n    name: null\n};\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport domEventReg from '../on/_domeventregexp';\n\n// removes simple event listener from an object\nexport default function removeListener(object, name, callback, info) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return false;\n    }\n\n    const { events: allEvents } = def;\n    const events = allEvents[name];\n    const retain = [];\n    const noTrigger = name ? name[0] === '_' : false;\n    const domEventExecResult = domEventReg.exec(name);\n\n    if (domEventExecResult) {\n        const [, eventName, key, selector] = domEventExecResult;\n        // fixing circular reference issue\n        const removeDomListener = require('./_removedomlistener');\n\n        removeDomListener(object, key, eventName, selector, callback, info);\n\n        return true;\n    }\n\n    // if all events need to be removed\n    if (typeof name === 'undefined') {\n        if (!noTrigger) {\n            nofn.forOwn(allEvents, (allEventsItem, allEventsName) => {\n                nofn.forEach(allEventsItem, (event) => {\n                    const removeEventData = {\n                        allEventsName,\n                        callback: event.callback\n                    };\n\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                });\n            });\n        }\n\n        // restore default value of \"events\"\n        def.events = {};\n    } else if (events) {\n        // if events with given name are found\n        nofn.forEach(events, (event) => {\n            const argCallback = (callback && callback._callback) || callback;\n            const eventCallback = event.callback._callback || event.callback;\n\n            if (argCallback && argCallback !== eventCallback) {\n                // keep event\n                retain.push(event);\n            } else {\n                const removeEventData = {\n                    name,\n                    callback: event.callback\n                };\n\n                if (!noTrigger) {\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                }\n            }\n        });\n\n        if (retain.length) {\n            allEvents[name] = retain;\n        } else {\n            delete def.events[name];\n        }\n    }\n\n    return false;\n}\n","import Init from './_init';\nimport parseHTML from './parsehtml';\nimport on from './on';\nimport off from './off';\nimport add from './add';\nimport assign from '../_helpers/assign';\n\n// a tiny jQuery-like library\nexport default function mq(selector, context) {\n    return new Init(selector, context);\n}\n\nmq.parseHTML = parseHTML;\n\nassign(Init.prototype, {\n    on,\n    off,\n    add\n});\n","import initDefi from '../_core/init';\nimport triggerOne from '../trigger/_triggerone';\nimport defineProp from '../_core/defineprop';\nimport domEventReg from './_domeventregexp';\n\n// property modifier event regexp\nconst propModEventReg // eslint-disable-next-line max-len\n    = /^_change:deps:|^_change:bindings:|^_change:delegated:|^_change:common:|^_change:tree:|^change:|^beforechange:/;\n\n// adds simple event listener\n// used as core of event engine\nexport default function addListener(object, name, callback, info = {}) {\n    const { events: allEvents } = initDefi(object);\n    const events = allEvents[name];\n    const event = {\n        callback, name, info\n    };\n\n    // skipChecks is used by internal methods for better performance\n    const { skipChecks = false } = info;\n\n    if (!skipChecks) {\n        const domEventExecResult = domEventReg.exec(name);\n\n        if (domEventExecResult) {\n            const [, eventName, key, selector] = domEventExecResult;\n            // fixing circular reference issue\n            const addDomListener = require('./_adddomlistener');\n\n            addDomListener(object, key, eventName, selector, callback, info);\n\n            return true;\n        }\n    }\n\n    // if there are events with the same name\n    if (events) {\n        if (!skipChecks) {\n            // if there are events with the same data, return false\n            for (let i = 0; i < events.length; i++) {\n                const existingEvent = events[i];\n                const argCallback = (callback && callback._callback) || callback;\n                const eventCallback = existingEvent.callback._callback || existingEvent.callback;\n                if (argCallback === eventCallback) {\n                    return false;\n                }\n            }\n        }\n\n        // if the event isn't found add it to the event list\n        events.push(event);\n    } else {\n        // if there are no events with the same name, create an array with only  one event\n        allEvents[name] = [event];\n    }\n\n    if (propModEventReg.test(name)) {\n        // define needed accessors for KEY\n        defineProp(object, name.replace(propModEventReg, ''));\n    }\n\n    // names prefixed by underscore mean \"private\" events\n    if (!skipChecks && name[0] !== '_') {\n        triggerOne(object, `addevent:${name}`, event);\n        triggerOne(object, 'addevent', event);\n    }\n\n    // if event is added successfully return true\n    return true;\n}\n","import defs from './defs';\n\nlet objectId = 0;\n\n// this is a common function which associates an object with its defi definition\nexport default function initDefi(object) {\n    let def = defs.get(object);\n    if (!def) {\n        def = {\n            // a property name of \"events\" object is an event name\n            // and a value is an array of event handlers\n            events: {\n                /* example: {\n                    callback: function,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n            },\n            // \"props\" contains special information about properties (getters, setters etc)\n            props: {\n                /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                } */\n            },\n            id: objectId\n        };\n\n        objectId += 1;\n\n        defs.set(object, def);\n    }\n\n    return def;\n}\n","import defs from './defs';\nimport set from '../set';\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key) {\n    const def = defs.get(object);\n\n    // if no object definition do nothing\n    if (!def) {\n        return null;\n    }\n\n    if (!def.props[key]) {\n        const propDef = def.props[key] = {\n            value: object[key],\n            mediator: null,\n            bindings: null\n        };\n\n        Object.defineProperty(object, key, {\n            configurable: true,\n            enumerable: true,\n            get() {\n                return propDef.value;\n            },\n            set(v) {\n                return set(object, key, v, {\n                    fromSetter: true\n                });\n            }\n        });\n    }\n\n    return def.props[key];\n}\n","import defs from './_core/defs';\nimport triggerOne from './trigger/_triggerone';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport is from './_helpers/is';\n\n// the function sets new value for a property\n// since its performance is very critical we're checking events existence manually\nexport default function set(object, key, value, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'set');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return object;\n    }\n\n    // allow to use key-value object as another method variation\n    if (typeof key === 'object') {\n        nofn.forOwn(key, (objVal, objKey) => set(object, objKey, objVal, value));\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n\n    // if no object definition then make simple assignment\n    if (!def) {\n        object[key] = value;\n        return object;\n    }\n\n    const { props, events } = def;\n    const propDef = props[key];\n\n    // if no property definition then make simple assignment\n    if (!propDef) {\n        object[key] = value;\n        return object;\n    }\n\n    const { value: previousValue, mediator } = propDef;\n\n    // possible flags, all of them are falsy by default\n    const {\n        skipMediator,\n        fromMediator,\n        force,\n        forceHTML,\n        silent,\n        silentHTML,\n        skipCalc\n    } = eventOptions;\n\n    let newValue;\n\n    if (mediator && !is(value, previousValue) && !skipMediator && !fromMediator) {\n        newValue = mediator(value);\n    } else {\n        newValue = value;\n    }\n\n    const isChanged = !is(newValue, previousValue);\n\n    // add to eventOptions object some useful properties\n    // we override default eventOptions because some of the properties need to have actual values,\n    // not inherited ones (eg when calc is used)\n    const extendedEventOptions = {\n        ...eventOptions,\n        value: newValue,\n        self: object,\n        previousValue,\n        key,\n        isChanged\n    };\n\n    const triggerChange = (isChanged || force) && !silent;\n\n    // trigger beforechange:KEY and beforechange events\n    if (triggerChange) {\n        const beforechangeStr = 'beforechange';\n        const beforechangeEventName = `${beforechangeStr}:${key}`;\n\n        if (events[beforechangeEventName]) {\n            triggerOne(object, beforechangeEventName, extendedEventOptions);\n        }\n\n        if (events[beforechangeStr]) {\n            triggerOne(object, beforechangeStr, extendedEventOptions);\n        }\n    }\n\n    propDef.value = newValue;\n\n    // triger bindings\n    if (!silentHTML && (isChanged || forceHTML)) {\n        const changeBindingsEventName = `_change:bindings:${key}`;\n        if (events[changeBindingsEventName]) {\n            triggerOne(object, changeBindingsEventName, extendedEventOptions);\n        }\n    }\n\n    // trigger change:KEY and change events\n    if (triggerChange) {\n        const changeStr = 'change';\n        const changeEventName = `${changeStr}:${key}`;\n        if (events[changeEventName]) {\n            triggerOne(object, changeEventName, extendedEventOptions);\n        }\n\n        if (events[changeStr]) {\n            triggerOne(object, changeStr, extendedEventOptions);\n        }\n    }\n\n    // trigger dependencies made by calc method\n    if ((isChanged || force) && !skipCalc) {\n        const changeDepsEventName = `_change:deps:${key}`;\n        if (events[changeDepsEventName]) {\n            triggerOne(object, changeDepsEventName, extendedEventOptions);\n        }\n    }\n\n\n    if (isChanged) {\n        // trigger common delegated events logic\n        const changeDelegatedKeyEventName = `_change:delegated:${key}`;\n        if (events[changeDelegatedKeyEventName]) {\n            triggerOne(object, changeDelegatedKeyEventName, extendedEventOptions);\n        }\n\n        // trigger tree change events logic\n        const changeTreeEventName = `_change:tree:${key}`;\n        if (events[changeTreeEventName]) {\n            triggerOne(object, changeTreeEventName, extendedEventOptions);\n        }\n\n        // trigger other internal change events\n        const changeCommonEventName = `_change:common:${key}`;\n        if (events[changeCommonEventName]) {\n            triggerOne(object, changeCommonEventName, extendedEventOptions);\n        }\n\n        // trigger delegated logic for asterisk events (*.*.*@foo)\n        // TODO: Confusing events names (\"_change:delegated\", \"_change:common:KEY\" etc)\n        const changeDelegatedEventName = '_change:delegated';\n        if (events[changeDelegatedEventName]) {\n            triggerOne(object, changeDelegatedEventName, extendedEventOptions);\n        }\n    }\n\n    return object;\n}\n","// allows to split by spaces not inclusing ones inside of brackers\nexport default /\\s+(?![^(]*\\))/g;\n","// the regexp allows to parse things like \"click::x(.y)\"\n// it's shared between few modules\nexport default /([^::]+)::([^()]+)?(?:\\((.*)\\))?/;\n","import html2nodeList from './_html2nodelist';\n\nconst win = window;\n\n// function-constructor of mq library\n// accepts many kinds of arguments (selector, html, function)\nfunction MQInit(selector, context) {\n    let result;\n\n    if (selector) {\n        if (selector.nodeType || (typeof win === 'object' && selector === win)) {\n            result = [selector];\n        } else if (typeof selector === 'string') {\n            if (/</.test(selector)) {\n                result = html2nodeList(selector);\n            } else if (context) {\n                const newContext = (new MQInit(context))[0];\n\n                if (newContext) {\n                    result = newContext.querySelectorAll(selector);\n                }\n            } else {\n                result = win.document.querySelectorAll(selector);\n            }\n        } else if ('length' in selector) {\n            // if it's something array-like (eg NodeList)\n            result = selector;\n        } else {\n            // this is somethong another (eg Attr)\n            result = [selector];\n        }\n    }\n\n    const length = result && result.length;\n\n    if (length) {\n        for (let i = 0; i < length; i++) {\n            this.push(result[i]);\n        }\n    }\n}\n\nMQInit.prototype = [];\n\nexport default MQInit;\n","// an object allows to share data between modules; it's needed because we use\n// simplified ES modules there and cannot import and share a number\nexport default {\n    nodeIndex: 0,\n    allEvents: {}\n};\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\n\n// the function removes internally used events such as _asterisk:add\nfunction detatchDelegatedLogic({\n    delegatedEventName,\n    pathStr,\n    allEvents\n}) {\n    const retain = [];\n    const events = allEvents[delegatedEventName];\n\n    nofn.forEach(events, (event) => {\n        // pathStr is assigned to info in delegateListener\n        if (event.info.pathStr !== pathStr) {\n            retain.push(event);\n        }\n    });\n\n    if (retain.length) {\n        allEvents[delegatedEventName] = retain;\n    } else {\n        delete allEvents[delegatedEventName];\n    }\n}\n\n// removes delegated event listener from an object by given path\nexport default function undelegateListener(object, givenPath, name, callback, info = {}) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return;\n    }\n\n    const { events: allEvents } = def;\n\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then remove listener\n        removeListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr;\n\n        if (path.length > 1) {\n            path = nofn.slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n\n        const delegatedChangeEvtName = `_change:delegated:${key}`;\n        if (allEvents[delegatedChangeEvtName]) {\n            detatchDelegatedLogic({\n                delegatedEventName: delegatedChangeEvtName,\n                pathStr,\n                allEvents\n            });\n        }\n\n        if (typeof object[key] === 'object') {\n            undelegateListener(object[key], path, name, callback, info);\n        }\n    }\n}\n","// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds.\n// (c) https://davidwalsh.name/javascript-debounce-function\n\nexport default function debounce(func, givenDelay, thisArg) {\n    let timeout;\n    let delay;\n    if (typeof givenDelay !== 'number') {\n        thisArg = givenDelay; // eslint-disable-line no-param-reassign\n        delay = 0;\n    } else {\n        delay = givenDelay || 0;\n    }\n\n    return function debounced() {\n        const args = arguments;\n        const callContext = thisArg || this;\n\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => func.apply(callContext, args), delay);\n    };\n}\n","import addListener from '../_addlistener';\nimport changeHandler from './changehandler';\n\n// adds delegated event listener to an object by given path\n// TODO Handler uses wrong context\nexport default function delegateListener(object, givenPath, name, callback, info = {}) {\n    // if typeof path is string and path is not empty string then split it\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then add simple listener\n        addListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr; // needed for undelegation\n\n        if (path.length > 1) {\n            path = nofn.slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n        const delegatedData = {\n            path,\n            name,\n            callback,\n            info,\n            object\n        };\n\n        // the event is triggered by \"set\"\n        addListener(object, `_change:delegated:${key}`, changeHandler, {\n            delegatedData,\n            pathStr\n        });\n\n        // call handler manually\n        changeHandler({\n            value: object[key]\n        }, delegatedData);\n    }\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport getNodes from '../bindnode/_getnodes';\nimport removeTreeListener from '../off/_removetreelistener';\nimport removeBinding from './_removebinding';\n\n// unbinds a node\nexport default function unbindNode(object, key, node, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'unbindNode');\n\n    if (key instanceof Array) {\n        /*\n         * accept array of keys\n         * this.unbindNode(['a', 'b', 'c'], node)\n         */\n        nofn.forEach(key, itemKey => unbindNode(object, itemKey, node, eventOptions));\n\n        return object;\n    }\n\n    if (key && typeof key === 'object') {\n        nofn.forOwn(key, (keyObjValue, keyObjKey) => {\n            if (keyObjValue.constructor === Object && 'node' in keyObjValue) {\n                // this.unbindNode({ key: { node: $(), binder } ) }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue.node, node);\n            } else if (\n                keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.unbindNode({ key: [{ node: $(), binder }] ) }, { silent: true });\n                nofn.forEach(keyObjValue, (keyObjValueItem) => {\n                    unbindNode(object, keyObjKey, keyObjValueItem.node, node);\n                });\n            } else {\n                // this.unbindNode({ key: $() }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue, node);\n            }\n        });\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const { deep } = eventOptions;\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n\n    // allow to pass null or undefined as key\n    // if passed then remove bindings of all keys for given object\n    if (key === null || typeof key === 'undefined') {\n        nofn.forOwn(props, (propsItem, propsKey) => {\n            unbindNode(object, propsKey, null, eventOptions);\n        });\n\n        return object;\n    }\n\n    // remove delegated binding\n    if (deep !== false) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            let target = object;\n\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                // TODO: Do we need to throw an error when a target is falsy?\n                target = target[deepPath[i]];\n            }\n\n            // TODO: Potential bug! This may undelegate listener for all bindings with the same path\n            // ...(cannot reproduce)\n            removeTreeListener(object, deepPath.slice(0, deepPathLength - 2));\n\n            unbindNode(target, deepPath[deepPathLength - 1], node, eventOptions);\n\n            return object;\n        }\n    }\n\n    const propDef = props[key];\n\n    // when no propdef do nothing\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    // if the property doesn't have any bindings do nothing\n    if (!bindings) {\n        return object;\n    }\n\n    // if no node is pased remove all bindings for given key\n    if (!node) {\n        nofn.forEach(bindings, (binding) => {\n            removeBinding({\n                object, key, eventOptions, binding\n            });\n        });\n\n        propDef.bindings = null;\n\n        return object;\n    }\n\n    const $nodes = getNodes(object, node);\n    const retainBindings = [];\n    const retainNodes = [];\n\n    // iterate over all bindngs and compare their node with given nodes\n    nofn.forEach($nodes, (nodesItem) => {\n        nofn.forEach(bindings, (binding) => {\n            if (binding.node === nodesItem) {\n                removeBinding({\n                    object, key, eventOptions, binding\n                });\n            } else {\n                retainBindings.push(binding);\n                retainNodes.push(nodesItem);\n            }\n        });\n    });\n\n    // update bindings object\n    if (retainBindings.length) {\n        propDef.bindings = retainBindings;\n    } else {\n        propDef.bindings = null;\n    }\n\n    return object;\n}\n","// returns a binder for input element based on its type\nexport default function input(type) {\n    let on;\n    switch (type) {\n        case 'checkbox':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.checked;\n                },\n                setValue(value) {\n                    this.checked = value;\n                }\n            };\n        case 'radio':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.value;\n                },\n                setValue(value) {\n                    this.checked = typeof value !== 'undefined' && this.value === value;\n                }\n            };\n        case 'submit':\n        case 'button':\n        case 'image':\n        case 'reset':\n            return {};\n        case 'hidden':\n            on = null;\n            break;\n        case 'file':\n            on = 'change';\n            break;\n\n            /*\n            case 'text':\n            case 'password':\n            case 'date':\n            case 'datetime':\n            case 'datetime-local':\n            case 'month':\n            case 'time':\n            case 'week':\n            case 'range':\n            case 'color':\n            case 'search':\n            case 'email':\n            case 'tel':\n            case 'url':\n            case 'file':\n            case 'number': */\n        default: // other future (HTML6+) inputs\n            on = 'input';\n    }\n\n    return {\n        on,\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n        }\n    };\n}\n","import splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport undelegateListener from './_undelegatelistener';\nimport $ from '../_mq';\n\n// removes event listener\nexport default function off(object, givenNames, callback) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'off');\n\n    const isNamesVarArray = givenNames instanceof Array;\n    const def = defs.get(object);\n\n    // allow to pass name-handler object\n    // TODO: Name-handler object passed to off method is non-documented feature\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        nofn.forOwn(givenNames, (namesObjCallback, namesObjName) =>\n            off(object, namesObjName, namesObjCallback, callback));\n        return object;\n    }\n\n\n    if (!givenNames && !callback) {\n        def.events = {};\n\n        nofn.forOwn(def.props, ({ bindings }, propName) => {\n            if (bindings) {\n                nofn.forEach(bindings, ({ node }) => {\n                    const eventNamespace = def.id + propName;\n                    $(node).off(`.${eventNamespace}`);\n                });\n            }\n        });\n\n        return object;\n    }\n\n    // TODO: Array of names passed to off method is non-documented feature\n    // split by spaces\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    nofn.forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n        if (delegatedEventParts.length > 1) {\n            const [path, delegatedName] = delegatedEventParts;\n            undelegateListener(object, path, delegatedName, callback);\n        } else {\n            removeListener(object, name, callback);\n        }\n    });\n\n    return object;\n}\n","// converts HTML string to NodeList instance\nexport default function html2nodeList(givenHTML) {\n    // wrapMap is taken from jQuery\n    const wrapMap = {\n        option: [1, '<select multiple=\"multiple\">', '</select>'],\n        legend: [1, '<fieldset>', '</fieldset>'],\n        thead: [1, '<table>', '</table>'],\n        tr: [2, '<table><tbody>', '</tbody></table>'],\n        td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n        area: [1, '<map>', '</map>'],\n        _: [0, '', '']\n    };\n\n    const html = givenHTML.replace(/^\\s+|\\s+$/g, '');\n    let node = window.document.createElement('div');\n    let i;\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    const ex = /<([\\w:]+)/.exec(html);\n    const wrapper = (ex && wrapMap[ex[1]]) || wrapMap._;\n\n    node.innerHTML = wrapper[1] + html + wrapper[2];\n\n    i = wrapper[0];\n\n    while (i) {\n        i -= 1;\n        node = node.children[0];\n    }\n\n    return node.childNodes;\n}\n","// determines whether two values are the same value\n/* istanbul ignore next */\nconst isPolyfill = (v1, v2) => v1 === 0 && v2 === 0 ? 1 / v1 === 1 / v2 : v1 !== v1 && v2 !== v2 || v1 === v2; // eslint-disable-line\n\nexport default Object.is || isPolyfill;\n","import delegateListener from './_delegatelistener';\nimport removeTreeListener from '../off/_removetreelistener';\n\n// creates tree listener\nfunction createTreeListener({ handler, restPath }) {\n    const newHandler = function treeListener(changeEvent) {\n        const extendedChangeEvent = {\n            restPath,\n            ...changeEvent\n        };\n        const { previousValue, value } = changeEvent;\n\n        // removes listener for all branches of the path on old object\n        if (previousValue && typeof previousValue === 'object') {\n            removeTreeListener(previousValue, restPath, handler);\n        }\n\n        // adds listener for all branches of \"restPath\" path on newly assigned object\n        if (value && typeof value === 'object') {\n            addTreeListener(value, restPath, handler);\n        }\n\n        // call original handler\n        handler.call(this, extendedChangeEvent);\n    };\n\n    newHandler._callback = handler;\n\n    return newHandler;\n}\n\n// listens changes for all branches of given path\n// one of the most hard functions to understand\nexport default function addTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over all keys and delegate listener for all objects of given branch\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice method is slow\n        const listenPath = deepPath.slice(0, i);\n        const restPath = deepPath.slice(i + 1);\n\n        delegateListener(\n            object,\n            listenPath,\n            `_change:tree:${deepPath[i]}`,\n            createTreeListener({\n                handler,\n                restPath\n            })\n        );\n    }\n}\n","import undelegateListener from './_undelegatelistener';\n\n// removes tree listener from all object tree of fiven path\nexport default function removeTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over keys of the path and undelegate given handler (can be undefined)\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice is slow\n        const listenedPath = deepPath.slice(0, i);\n\n        undelegateListener(\n            object,\n            listenedPath,\n            `_change:tree:${deepPath[i]}`,\n            handler\n        );\n    }\n}\n","import selectNodes from './_selectnodes';\nimport $ from '../_mq';\n\nconst htmlReg = /</;\nconst customSelectorReg = /:bound\\(([^(]*)\\)/;\n\n// the function works just like DOM library accepting any kind of arg\n// (HTML string, Node, NodeList etc) bu allows to pass custom selector\n// eg :bound(KEY)\nexport default function getNodes(object, selector) {\n    let nodes;\n\n    if (\n        typeof selector === 'string'\n        && !htmlReg.test(selector)\n        && customSelectorReg.test(selector)\n    ) {\n        nodes = selectNodes(object, selector);\n    } else {\n        nodes = $(selector);\n    }\n\n    return nodes;\n}\n","import * as functions from './_lib';\n\nmodule.exports = functions;\n","import on from './on';\nimport off from './off';\nimport trigger from './trigger';\nimport calc from './calc';\nimport bindNode from './bindnode';\nimport bound from './bound';\nimport unbindNode from './unbindnode';\nimport set from './set';\nimport remove from './remove';\nimport mediate from './mediate';\n\n// the following methods can be used as static methods and as instance methods\nexport {\n    on,\n    off,\n    trigger,\n    calc,\n    bindNode,\n    bound,\n    unbindNode,\n    set,\n    remove,\n    mediate\n};\n","import splitBySpaceReg from './_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport off from '../off';\nimport debounce from '../_helpers/debounce';\nimport addListener from './_addlistener';\nimport delegateListener from './_delegatelistener';\n\n// adds event listener\nexport default function on(object, givenNames, givenCallback, options) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'on');\n\n    const isNamesVarArray = givenNames instanceof Array;\n\n    // allow to pass name-handler object\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        nofn.forOwn(givenNames, (namesObjCallback, namesObjName) =>\n            on(object, namesObjName, namesObjCallback, givenCallback, options));\n        return object;\n    }\n\n    if (typeof givenNames !== 'string' && !isNamesVarArray) {\n        throw defiError('on:names_type', { names: givenNames });\n    }\n\n    // split by spaces\n    // TODO: Array of names passed to on method is a non-documented feature\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    const { triggerOnInit, once, debounce: debounceOption } = options || {};\n    let callback;\n    if (once) {\n        callback = function onceCallback() {\n            givenCallback.apply(this, arguments);\n            // remove event listener after its call\n            off(object, names, onceCallback);\n        };\n\n        // allow to remove event listener py passing original callback to \"off\"\n        callback._callback = givenCallback;\n    } else if (typeof debounceOption === 'number' || debounceOption === true) {\n        callback = debounce(givenCallback, debounceOption === true ? 0 : debounceOption, object);\n    } else {\n        callback = givenCallback;\n    }\n\n    nofn.forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n\n        if (delegatedEventParts.length > 1) {\n            // if @ exists in event name then this is delegated event\n            const [path, delegatedName] = delegatedEventParts;\n            delegateListener(object, path, delegatedName, callback);\n        } else {\n            // if not, this is simple event\n            addListener(object, name, callback);\n        }\n    });\n\n    // call callback immediatelly if triggerOnInit is true\n    if (triggerOnInit) {\n        callback.call(object, options);\n    }\n\n    return object;\n}\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport $ from '../_mq';\n\n// removes dom listener from nodes bound to given key\nexport default function removeDomListener(\n    object,\n    key,\n    eventName,\n    selector,\n    callback,\n    info\n) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // collect bound nodes and remove DOM event listener\n        const nodes = Array(bindings.length);\n        const eventNamespace = def.id + key;\n\n        nofn.forEach(bindings, (binding, index) => {\n            nodes[index] = binding.node;\n        });\n\n        $(nodes).off(`${eventName}.${eventNamespace}`, selector, callback);\n    }\n\n    // remove bind and unbind listeners from given key\n    removeListener(object, `bind:${key}`, callback, info);\n    removeListener(object, `unbind:${key}`, callback, info);\n\n    return object;\n}\n","import html2nodeList from './_html2nodelist';\nimport Init from './_init';\n\n// parses given HTML and returns mq instance\nexport default function parseHTML(html) {\n    return new Init(html2nodeList(html));\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n    return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n    const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n    const splittedSelector = selector.split(',');\n\n    let matching = '';\n\n    for (let i = 0; i < splittedSelector.length; i++) {\n        const sel = splittedSelector[i];\n        matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n    }\n\n\n    this.setAttribute(randomID, randomID);\n\n    if (is(evt.target, matching)) {\n        handler.call(this, evt);\n    }\n\n    this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n    const names = namesStr.split(splitBySpaceReg);\n    let delegate;\n\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (selector) {\n        delegate = function uniqueDelegateHandler(evt) {\n            delegateHandler.call(this, evt, selector, handler);\n        };\n    }\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n            let exist = false;\n\n            for (let k = 0; k < events.length; k++) {\n                const event = events[k];\n\n                if (handler === event.handler && (!selector || selector === event.selector)) {\n                    exist = true;\n                    break;\n                }\n            }\n\n            if (!exist) {\n                events.push({\n                    delegate,\n                    handler,\n                    namespace,\n                    selector,\n                    nodeID,\n                    name\n                });\n\n                node.addEventListener(name, delegate || handler, false);\n            }\n        }\n    }\n\n    return this;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\n\n// removes event handler from a set of elements\nexport default function off(namesStr, selector, handler) {\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    const names = namesStr.split(splitBySpaceReg);\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n\n            if (!name && namespace) {\n                for (let k = 0, keys = Object.keys(data.allEvents); k < keys.length; k++) {\n                    const events = data.allEvents[keys[k]];\n\n                    for (let l = 0; l < events.length; l++) {\n                        const event = events[i];\n                        if (event.namespace === namespace && event.nodeID === node.b$) {\n                            node.removeEventListener(event.name, event.delegate || event.handler);\n                            events.splice(l, 1);\n                            l -= 1;\n                        }\n                    }\n                }\n\n                continue;\n            }\n\n            const events = data.allEvents[name + node.b$];\n            if (events) {\n                for (let k = 0; k < events.length; k++) {\n                    const event = events[k];\n                    if (\n                        (!handler || handler === event.handler || handler === event.delegate)\n                        && (!namespace || namespace === event.namespace)\n                        && (!selector || selector === event.selector)\n                    ) {\n                        node.removeEventListener(name, event.delegate || event.handler);\n                        events.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n            } else if (!namespace && !selector) {\n                node.removeEventListener(name, handler);\n            }\n        }\n    }\n\n    return this;\n}\n","import Init from './_init';\nimport data from './_data';\n\n// adds unique nodes to mq collection\nexport default function add(selector) {\n    const idMap = {};\n\n    let result;\n\n    const nodes = new Init(selector);\n\n    if (this.length) {\n        result = new Init();\n        for (let i = 0; i < this.length; i++) {\n            const node = this[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            idMap[nodeID] = 1;\n            result.push(node);\n        }\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            if (!idMap[nodeID]) {\n                idMap[nodeID] = 1;\n                result.push(node);\n            }\n        }\n    } else {\n        result = nodes;\n    }\n\n    return result;\n}\n","// Object.assign polyfyll\n/* istanbul ignore next */\nconst assign = Object.assign || function assign(target) {\n    /* istanbul ignore next */\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert variable to object');\n    }\n\n    const output = Object(target);\n\n    for (let index = 1; index < arguments.length; index++) {\n        const source = arguments[index];\n        if (source !== undefined && source !== null) {\n            nofn.forOwn(source, (nextValue, nextKey) => {\n                output[nextKey] = nextValue;\n            });\n        }\n    }\n\n    return output;\n};\n\nexport default assign;\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport addListener from './_addlistener';\nimport $ from '../_mq';\nimport createDomEventHandler from './_createdomeventhandler';\n\n// returns an object with event handlers used at addDomListener\nfunction createBindingHandlers({\n    fullEventName,\n    domEventHandler,\n    selector\n}) {\n    return {\n        bindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).on(fullEventName, selector, domEventHandler);\n            }\n        },\n        unbindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).off(fullEventName, selector, domEventHandler);\n            }\n        }\n    };\n}\n\n// adds DOM event listener for nodes bound to given property\nexport default function addDomListener(object, key, eventName, selector, callback, info) {\n    const def = initDefi(object);\n    const propDef = defineProp(object, key);\n\n    const domEventHandler = createDomEventHandler({\n        key,\n        object,\n        callback\n    });\n\n    // making possible to remove this event listener\n    domEventHandler._callback = callback;\n\n    const eventNamespace = def.id + key;\n    const fullEventName = `${eventName}.${eventNamespace}`;\n    const { bindHandler, unbindHandler } = createBindingHandlers({\n        fullEventName,\n        domEventHandler,\n        selector\n    });\n    const addBindListenerResult\n        = addListener(object, `bind:${key}`, bindHandler, info);\n    const addUnbindListenerResult\n        = addListener(object, `unbind:${key}`, unbindHandler, info);\n\n    // if events are added successfully then run bindHandler for every node immediately\n    // TODO: Describe why do we need addBindListenerResult and addUnbindListenerResult\n    if (addBindListenerResult && addUnbindListenerResult) {\n        const { bindings } = propDef;\n        if (bindings) {\n            nofn.forEach(bindings, ({ node }) => bindHandler({ node }));\n        }\n    }\n\n    return object;\n}\n","// returns DOM event handler\nexport default function createDomEventHandler({\n    key,\n    object,\n    callback\n}) {\n    return function domEventHandler(domEvent) {\n        const originalEvent = domEvent.originalEvent || domEvent;\n        // defiTriggerArgs are created when DOM event is triggered by trigger method\n        const triggerArgs = originalEvent.defiTriggerArgs;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n\n        if (triggerArgs) {\n            // if args are passed to trigger method then pass them to an event handler\n            callback.apply(object, triggerArgs);\n        } else {\n            // use the following object as an arg for event handler\n            callback.call(object, {\n                self: object,\n                node: this,\n                preventDefault: () => domEvent.preventDefault(),\n                stopPropagation: () => domEvent.stopPropagation(),\n                key,\n                domEvent,\n                originalEvent,\n                which,\n                target,\n                ctrlKey,\n                altKey\n            });\n        }\n    };\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\n\n// the function is called when some part of a path is changed\n// it delegates event listener for new branch of an object and undelegates it for old one\n// used for non-asterisk events\nexport default function changeHandler({\n    previousValue,\n    value\n}, {\n    path,\n    name,\n    callback,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (value && typeof value === 'object') {\n        const delegateListener = require('./'); // fixing circular ref\n\n        delegateListener(value, path, name, callback, info);\n    }\n\n    if (previousValue && typeof previousValue === 'object') {\n        undelegateListener(previousValue, path, name, callback, info);\n    }\n}\n","import domEventReg from '../on/_domeventregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport defs from '../_core/defs';\nimport triggerOne from './_triggerone';\nimport triggerDomEvent from './_triggerdomevent';\n\n// triggers an event\nexport default function trigger(object, givenNames, ...triggerArgs) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'trigger');\n    let names;\n\n    // allow to use strings only as event name\n    if (typeof givenNames === 'string') {\n        names = givenNames.split(splitBySpaceReg);\n    } else {\n        throw defiError('trigger:names_type', { names: givenNames });\n    }\n\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return object;\n    }\n\n    const { events: allEvents } = def;\n\n    if (!allEvents) {\n        return object;\n    }\n\n    nofn.forEach(names, (name) => {\n        const domEvtExecResult = domEventReg.exec(name);\n\n        if (domEvtExecResult) {\n            // if EVT::KEY(SELECTOR) ia passed as event name then trigger DOM event\n            const [, eventName, key, selector] = domEvtExecResult;\n            triggerDomEvent(object, key, eventName, selector, triggerArgs);\n        } else {\n            // trigger ordinary event\n            triggerOne(object, name, triggerArgs);\n        }\n    });\n\n    return object;\n}\n","import triggerOneDOMEvent from './_triggeronedomevent';\nimport defs from '../_core/defs';\n\n// triggers DOM event on bound nodes\nexport default function triggerDOMEvent(object, key, eventName, selector, triggerArgs) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return;\n    }\n\n    const { bindings } = propDef;\n\n    if (!bindings) {\n        return;\n    }\n\n    nofn.forEach(bindings, ({ node }) => {\n        if (selector) {\n            // if selector is given trigger an event on all node descendants\n            const descendants = node.querySelectorAll(selector);\n            nofn.forEach(descendants, (descendant) => {\n                triggerOneDOMEvent({\n                    node: descendant,\n                    eventName,\n                    triggerArgs\n                });\n            });\n        } else {\n            // trigger an event for single node\n            triggerOneDOMEvent({\n                node,\n                eventName,\n                triggerArgs\n            });\n        }\n    });\n}\n","// triggers given DOM event on given node\nexport default function triggerOneDOMEvent({\n    node,\n    eventName,\n    triggerArgs\n}) {\n    const { Event } = window;\n    const event = new Event(eventName, {\n        bubbles: true,\n        cancelable: true\n    });\n\n    // defiTriggerArgs will be used in a handler created by addDOMListener\n    event.defiTriggerArgs = triggerArgs;\n\n    node.dispatchEvent(event);\n}\n","import initDefi from '../_core/init';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport debounce from '../_helpers/debounce';\nimport addSource from './_addsource';\nimport createCalcHandler from './_createcalchandler';\nimport defineProp from '../_core/defineprop';\n\n// defines a property which is dependend on other properties\nexport default function calc(object, target, sources, givenHandler, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'calc');\n\n    if (target instanceof Object) {\n        /*\n         * accept an object\n         * this.calc({target: { source, handler, event } }, commonEventOptions);\n         */\n        nofn.forOwn(target, ({\n            source: itemSource,\n            handler: itemHandler,\n            options: itemEventOptions\n        }, itemTarget) => {\n            const commonEventOptions = sources;\n            const mergedEventOptions = {};\n\n            if (commonEventOptions) {\n                // extend event object by \"global\" event\n                nofn.assign(mergedEventOptions, commonEventOptions);\n            }\n\n            if (itemEventOptions) {\n                // extend event object by \"local\" event (\"event\" key of an object)\n                nofn.assign(mergedEventOptions, itemEventOptions);\n            }\n\n            calc(object, itemTarget, itemSource, itemHandler, mergedEventOptions);\n        });\n\n        return object;\n    }\n\n    if (typeof target !== 'string') {\n        throw defiError('calc:target_type', { target });\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = initDefi(object);\n    const {\n        setOnInit = true,\n        debounceCalcOnInit = false,\n        debounceCalc = true,\n        debounceCalcDelay = 0,\n    } = eventOptions;\n    const defaultHandler = value => value;\n    const handler = givenHandler || defaultHandler;\n    const allSources = [];\n    const syncCalcHandler = createCalcHandler({\n        object,\n        eventOptions,\n        allSources,\n        target,\n        def,\n        handler\n    });\n\n    let debouncedCalcHandler;\n    let calcHandler;\n\n    if (debounceCalcOnInit || debounceCalc) {\n        debouncedCalcHandler = debounce(syncCalcHandler, debounceCalcDelay);\n    }\n\n    defineProp(object, target);\n\n    if (!(sources instanceof Array)) {\n        sources = [sources]; // eslint-disable-line no-param-reassign\n    }\n\n    if (debounceCalc) {\n        calcHandler = debouncedCalcHandler;\n    } else {\n        calcHandler = syncCalcHandler;\n    }\n\n    nofn.forEach(sources, (source) => {\n        if (typeof source === 'string') {\n            // source object is current object\n            addSource({\n                calcHandler,\n                allSources,\n                sourceKey: source,\n                sourceObject: object,\n                eventOptions\n            });\n        } else {\n            // source object is external object\n            if (!source || typeof source !== 'object') {\n                throw defiError('calc:source_type', { source });\n            }\n\n            const sourceKey = source.key;\n            const sourceObject = source.object;\n            if (sourceKey instanceof Array) {\n                // many keys are passed\n                nofn.forEach(sourceKey, (sourceKeyItem) => {\n                    addSource({\n                        calcHandler,\n                        allSources,\n                        sourceKey: sourceKeyItem,\n                        sourceObject,\n                        eventOptions\n                    });\n                });\n            } else {\n                // one key is passed\n                addSource({\n                    calcHandler,\n                    allSources,\n                    sourceKey,\n                    sourceObject,\n                    eventOptions\n                });\n            }\n        }\n    });\n\n    if (setOnInit) {\n        if (debounceCalcOnInit) {\n            debouncedCalcHandler();\n        } else {\n            syncCalcHandler();\n        }\n    }\n\n    return object;\n}\n","import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport defiError from '../_helpers/defierror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n    calcHandler,\n    allSources,\n    sourceKey,\n    sourceObject,\n    eventOptions\n}) {\n    let { exactKey = false } = eventOptions;\n    let isDelegated = false;\n\n    // source key must be a string\n    if (typeof sourceKey !== 'string') {\n        throw defiError('calc:source_key_type', { sourceKey });\n    }\n\n    // source object must be an object\n    if (!sourceObject || typeof sourceObject !== 'object') {\n        throw defiError('calc:source_object_type', { sourceObject });\n    }\n\n    if (!exactKey) {\n        const deepPath = sourceKey.split('.');\n\n        // if something like a.b.c is used as a key\n        if (deepPath.length > 1) {\n            isDelegated = true;\n            // TODO: Avoid collisions with bindings by using another event name\n            // ... instead of _change:tree:xxx\n            addTreeListener(sourceObject, deepPath, calcHandler);\n        } else {\n            exactKey = true;\n        }\n    }\n\n\n    if (exactKey) {\n        // normal handler\n        addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n    }\n\n    allSources.push({\n        sourceKey,\n        sourceObject,\n        isDelegated\n    });\n}\n","import set from '../set';\nimport deepFind from '../_helpers/deepfind';\n\n// creates event handler for target object which will be fired when a source is changed\nexport default function createCalcHandler({\n    object,\n    eventOptions,\n    allSources,\n    target,\n    def,\n    handler\n}) {\n    return function calcHandler(changeEvent = {}) {\n        const values = [];\n        const { protector = {} } = changeEvent;\n        const protectKey = target + def.id;\n        const { promiseCalc } = eventOptions;\n        const setEventOptions = {\n            protector,\n            ...eventOptions,\n            ...changeEvent\n        };\n\n        if (protectKey in protector) {\n            return;\n        }\n\n        protector[protectKey] = true;\n\n        nofn.forEach(allSources, ({\n            sourceObject,\n            sourceKey,\n            isDelegated\n        }) => {\n            const value = isDelegated ? deepFind(sourceObject, sourceKey) : sourceObject[sourceKey];\n            values.push(value);\n        });\n\n        let targetValue = handler.apply(object, values);\n\n        if (promiseCalc) {\n            if (!(targetValue instanceof Promise)) {\n                targetValue = Promise.resolve(targetValue);\n            }\n\n            targetValue\n                .then(promiseResult => set(object, target, promiseResult, setEventOptions))\n                .catch((e) => {\n                    throw Error(e);\n                });\n        } else {\n            set(object, target, targetValue, setEventOptions);\n        }\n    };\n}\n","// gets value of a property in nested object\n// eg \"d\" from a.b.c.d\nexport default function deepFind(obj, givenPath) {\n    const paths = typeof givenPath === 'string' ? givenPath.split('.') : givenPath;\n    let current = obj;\n\n    for (let i = 0; i < paths.length; ++i) {\n        if (typeof current[paths[i]] === 'undefined') {\n            return undefined;\n        }\n\n        current = current[paths[i]];\n    }\n\n    return current;\n}\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport getNodes from './_getnodes';\nimport createBindingSwitcher from './_createbindingswitcher';\nimport bindSingleNode from './_bindsinglenode';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport addTreeListener from '../on/_addtreelistener';\n\n// initializes binsing between a property of an object to HTML node\nexport default function bindNode(object, key, node, binder, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bindNode');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    binder = binder || {}; // eslint-disable-line no-param-reassign\n\n    initDefi(object);\n\n    // throw an error when key is falsy\n    if (!key) {\n        throw defiError('binding:falsy_key');\n    }\n\n    if (key instanceof Array) {\n        /*\n         * accept array of keys\n         * this.bindNode(['a', 'b', 'c'], node)\n         */\n        nofn.forEach(key, itemKey => bindNode(object, itemKey, node, binder, eventOptions));\n\n        return object;\n    }\n\n\n    if (typeof key === 'object') {\n        nofn.forOwn(key, (keyObjValue, keyObjKey) => {\n            // binder means eventOptions\n            eventOptions = binder; // eslint-disable-line no-param-reassign\n\n            if (\n                keyObjValue\n                && keyObjValue.constructor === Object\n                && 'node' in keyObjValue\n            ) {\n                // this.bindNode({ key: { node: $(), binder } ) }, { on: 'evt' }, { silent: true });\n                bindNode(\n                    object, keyObjKey, keyObjValue.node,\n                    keyObjValue.binder || node, eventOptions\n                );\n            } else if (\n                keyObjValue\n                && keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.bindNode({ key: [{\n                //   node: $(),\n                //   binder\n                // }] ) }, { on: 'evt' }, { silent: true });\n                nofn.forEach(keyObjValue, (keyObjValueItem) => {\n                    bindNode(\n                        object, keyObjKey, keyObjValueItem.node,\n                        keyObjValueItem.binder || node, eventOptions\n                    );\n                });\n            } else {\n                // this.bindNode({ key: $() }, { on: 'evt' }, { silent: true });\n                bindNode(object, keyObjKey, keyObjValue, node, eventOptions);\n            }\n        });\n\n        return object;\n    }\n\n    const {\n        optional = false,\n        exactKey = false\n    } = eventOptions;\n    const $nodes = getNodes(object, node);\n\n    // check node existence\n    if (!$nodes.length) {\n        if (optional) {\n            return object;\n        }\n\n        throw defiError('binding:node_missing', { key, node });\n    }\n\n    if (!exactKey) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            // handle binding when key arg includes dots (eg \"a.b.c.d\")\n            const bindingSwitcher = createBindingSwitcher({\n                object,\n                deepPath,\n                $nodes,\n                binder,\n                eventOptions,\n                bindNode\n            });\n\n            addTreeListener(object, deepPath.slice(0, deepPathLength - 1), bindingSwitcher);\n\n            bindingSwitcher();\n\n            return object;\n        }\n    }\n\n    const propDef = defineProp(object, key);\n\n    // handle binding for every node separately\n    nofn.forEach($nodes, oneNode => bindSingleNode(object, {\n        $nodes,\n        node: oneNode,\n        key,\n        eventOptions,\n        binder,\n        propDef\n    }));\n\n    return object;\n}\n","import defs from '../_core/defs';\nimport $ from '../_mq';\n\nconst customSelectorReg = /\\s*:bound\\(([^(]*)\\)\\s*([\\S\\s]*)\\s*/;\nconst randomAttr = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// the function selects nodes based on a selector (including custom values, eg :bound)\n// TODO: selectNodes looks not good, it needs to be refactored and accelerated if possible\nexport default function selectNodes(object, givenSelector) {\n    const { props } = defs.get(object);\n    const selectors = givenSelector.split(',');\n    let result = $();\n\n    nofn.forEach(selectors, (selector) => {\n        const execResult = customSelectorReg.exec(selector);\n        if (execResult) {\n            const boundKey = execResult[1];\n            const subSelector = execResult[2];\n            const propDef = props[boundKey];\n\n            if (propDef) {\n                const { bindings } = propDef;\n                if (bindings) {\n                    const boundNodes = Array(bindings.length);\n                    nofn.forEach(bindings, (binding, i) => {\n                        boundNodes[i] = binding.node;\n                    });\n\n                    // if native selector passed after :bound(KEY) is not empty string\n                    // for example \":bound(KEY) .my-selector\"\n                    if (subSelector) {\n                        // if native selector contains children selector\n                        // for example \":bound(KEY) > .my-selector\"\n                        if (subSelector.indexOf('>') === 0) {\n                            // selecting children\n                            nofn.forEach(boundNodes, (node) => {\n                                node.setAttribute(randomAttr, randomAttr);\n                                const selected = node.querySelectorAll(`[${randomAttr}=\"${randomAttr}\"] ${subSelector}`);\n                                result = result.add(selected);\n                                node.removeAttribute(randomAttr);\n                            });\n                        } else {\n                            // if native selector doesn't contain children selector\n                            nofn.forEach(boundNodes, (node) => {\n                                const selected = node.querySelectorAll(subSelector);\n                                result = result.add(selected);\n                            });\n                        }\n                    } else {\n                        // if native selector is empty string just add bound nodes to result\n                        result = result.add(boundNodes);\n                    }\n                }\n            }\n        } else {\n            // if it's native selector (no custom things)\n            result = result.add(selector);\n        }\n    });\n\n    return result;\n}\n","import unbindNode from '../unbindnode';\n\n// returns a function which re-adds binding when object branch is changed\n// the function is called by bindNode when something like\n// 'foo.bar.baz' is passed to it as key argument value\n// this is one of the hardest things in the framework to understand\nexport default function createBindingSwitcher({\n    object,\n    deepPath,\n    $nodes,\n    binder,\n    eventOptions,\n    bindNode\n}) {\n    return function bindingSwitcher(changeEvent = {}) {\n        const deepPathLength = deepPath.length;\n        const lastDeepPathItem = deepPath[deepPathLength - 1];\n        const {\n            value, // new value of a branch\n            previousValue, // previous value of a branch\n            restPath // path starting currently changed branch (passed by addTreeListener)\n        } = changeEvent;\n        let target; // an object to call bindNode\n        let previousTarget; // an object to call unbindNode\n\n\n        if (value && typeof value === 'object' && restPath) {\n            // if rest path is given and new value is an object\n            target = value;\n            for (let i = 0; i < restPath.length; i++) {\n                target = target[restPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        } else {\n            // if rest path is not given\n            target = object;\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                target = target[deepPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        }\n\n        // if rest path is given and previous value is an object\n        if (previousValue && typeof previousValue === 'object' && restPath) {\n            previousTarget = previousValue;\n            for (let i = 0; i < restPath.length; i++) {\n                previousTarget = previousTarget[restPath[i]];\n                if (!previousTarget) {\n                    break;\n                }\n            }\n        }\n\n        // add binding for new target\n        if (target && typeof target === 'object') {\n            bindNode(target, lastDeepPathItem, $nodes, binder, eventOptions);\n        }\n\n        // remove binding for previously used object\n        if (previousTarget && typeof previousTarget === 'object') {\n            unbindNode(previousTarget, lastDeepPathItem, $nodes);\n        }\n    };\n}\n","import removeListener from '../off/_removelistener';\nimport triggerOne from '../trigger/_triggerone';\n\nconst spaceReg = /\\s+/;\n\n// the function removes single binding for single object\n// called by unbindNode\nexport default function removeBinding({\n    object,\n    key,\n    eventOptions,\n    binding\n}) {\n    const {\n        bindingOptions,\n        binder,\n        node,\n        nodeHandler,\n        objectHandler\n    } = binding;\n    const { destroy, on } = binder;\n    const { silent } = eventOptions;\n\n    // if \"on\" is a function then disable it\n    // we cannot \"turn off\" custom listener defined by a programmer\n    // programmer needs to remove custom listener maually inside binder.destroy\n    if (typeof on === 'function') {\n        nodeHandler.disabled = true;\n    } else if (typeof on === 'string') {\n        // remove DOM event listener\n        // removeEventListener is faster than \"on\" method from any DOM library\n        nofn.forEach(\n            on.split(spaceReg),\n            evtName => node.removeEventListener(evtName, nodeHandler)\n        );\n    }\n\n    // remove object event listener\n    removeListener(object, `_change:bindings:${key}`, objectHandler);\n\n    // if binder.destroy is given call it\n    if (destroy) {\n        destroy.call(node, bindingOptions);\n    }\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `unbind:${key}`, extendedEventOptions);\n        triggerOne(object, 'unbind', extendedEventOptions);\n    }\n}\n","import lookForBinder from '../lookforbinder';\nimport createNodeHandler from './_createnodehandler';\nimport createObjectHandler from './_createobjecthandler';\nimport triggerOne from '../trigger/_triggerone';\nimport addListener from '../on/_addlistener';\nimport debounce from '../_helpers/debounce';\n\nconst spaceReg = /\\s+/;\n\n// handles binding for single property & node\n// the function is used at bindNode\nexport default function bindSingleNode(object, {\n    binder: givenBinder,\n    key,\n    $nodes,\n    node,\n    eventOptions,\n    propDef\n}) {\n    const {\n        silent,\n        getValueOnBind,\n        setValueOnBind,\n        // TODO: We probably need some general flag to cancel or force debouncing\n        // ... which overrides the following flags (something like debounceBinding)\n        debounceSetValue = true,\n        debounceGetValue = true,\n        debounceSetValueOnBind = false,\n        debounceGetValueOnBind = false,\n        debounceSetValueDelay = 0,\n        debounceGetValueDelay = 0,\n        useExactBinder = false\n    } = eventOptions;\n    // create bindings array in property definition object\n    const bindings = propDef.bindings = propDef.bindings || [];\n    const { value } = propDef;\n    const bindingOptions = {\n        self: object,\n        key,\n        value,\n        $nodes,\n        node\n    };\n    let isUndefined = typeof value === 'undefined';\n    let binder;\n    let objectHandler;\n    let nodeHandler;\n\n    // get actual binder\n    if (givenBinder !== null) {\n        // by default binder passed to bindNode is extended by default binder\n        // useExactBinder turns this behavior off\n        if (useExactBinder) {\n            binder = givenBinder;\n        } else {\n            // getting default binder\n            const foundBinder = lookForBinder(node);\n\n            // if default binder is found\n            if (foundBinder) {\n                // extend found binder by given binder\n                if (givenBinder) {\n                    nofn.assign(foundBinder, givenBinder);\n                }\n\n                binder = foundBinder;\n            } else {\n                // default binder is not found\n                binder = givenBinder || {};\n            }\n        }\n    }\n\n    const {\n        getValue, setValue, on, initialize\n    } = binder;\n\n    // call binder.initialize\n    if (initialize) {\n        initialize.call(node, bindingOptions);\n    }\n\n    // add needed event handlers to given node when getValue is given\n    if (getValue) {\n        const syncNodeHandler = createNodeHandler({\n            object,\n            key,\n            node,\n            propDef,\n            binder,\n            bindingOptions\n        });\n\n        let debouncedNodeHandler;\n\n        if (debounceGetValue || debounceGetValueOnBind) {\n            debouncedNodeHandler = debounce(syncNodeHandler, debounceGetValueDelay);\n        }\n\n        if (debounceGetValue) {\n            nodeHandler = debouncedNodeHandler;\n        } else {\n            nodeHandler = syncNodeHandler;\n        }\n\n        // TODO: Throw error when \"on\" and maybe other binder properties has wrong type\n        if (typeof on === 'function') {\n            on.call(node, nodeHandler, bindingOptions);\n        } else if (typeof on === 'string') {\n            // addEventListener is faster than \"on\" method from any DOM library\n            nofn.forEach(\n                on.split(spaceReg),\n                evtName => node.addEventListener(evtName, nodeHandler)\n            );\n        }\n\n        if ((isUndefined && getValueOnBind !== false) || getValueOnBind === true) {\n            if (debounceGetValueOnBind) {\n                debouncedNodeHandler();\n            } else {\n                syncNodeHandler();\n            }\n        }\n\n        isUndefined = typeof propDef.value === 'undefined';\n    }\n\n    // add needed event handlers to the object when setValue is given\n    if (setValue) {\n        const syncObjectHandler = createObjectHandler({\n            node,\n            propDef,\n            binder,\n            bindingOptions,\n            eventOptions\n        });\n\n        let debouncedObjectHandler;\n\n        if (debounceSetValue || debounceSetValueOnBind) {\n            debouncedObjectHandler = debounce(syncObjectHandler, debounceSetValueDelay);\n        }\n\n        if (debounceSetValue) {\n            objectHandler = debouncedObjectHandler;\n        } else {\n            objectHandler = syncObjectHandler;\n        }\n\n        // TODO: Is it possible to get previous value of a property?\n        addListener(object, `_change:bindings:${key}`, objectHandler, { skipChecks: true });\n\n        if ((!isUndefined && setValueOnBind !== false) || setValueOnBind === true) {\n            if (debounceSetValueOnBind) {\n                debouncedObjectHandler();\n            } else {\n                syncObjectHandler();\n            }\n        }\n    }\n\n    // add binding data to bindings array\n    bindings.push({\n        on,\n        node,\n        binder,\n        objectHandler,\n        nodeHandler,\n        bindingOptions\n    });\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `bind:${key}`, extendedEventOptions);\n        triggerOne(object, 'bind', extendedEventOptions);\n    }\n}\n","import defaultBinders from './defaultbinders';\n\n// tries to find a binder for given node\nexport default function lookForBinder(node) {\n    for (let i = 0; i < defaultBinders.length; i++) {\n        const binder = defaultBinders[i].call(node, node);\n        if (binder) {\n            return binder;\n        }\n    }\n\n    return undefined;\n}\n","import input from './binders/input';\nimport textarea from './binders/textarea';\nimport select from './binders/select';\nimport progress from './binders/progress';\nimport output from './binders/output';\n\n// defaultBinders collection by default contains only one function-checker\nexport default [(node) => {\n    switch (node.tagName) {\n        case 'INPUT':\n            return input(node.type);\n        case 'TEXTAREA':\n            return textarea();\n        case 'SELECT':\n            return select(node.multiple);\n        case 'PROGRESS':\n            return progress();\n        case 'OUTPUT':\n            return output();\n        default:\n            return null;\n    }\n}];\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function textarea() {\n    // textarea behaves just like text input\n    return input('text');\n}\n","// returns a binder for select element\nexport default function select(multiple) {\n    if (multiple) {\n        return {\n            on: 'change',\n            getValue() {\n                const { options } = this;\n                const result = [];\n\n                for (let i = 0; options.length > i; i++) {\n                    if (options[i].selected) {\n                        result.push(options[i].value);\n                    }\n                }\n\n                return result;\n            },\n            setValue(givenValue) {\n                const { options } = this;\n                const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    options[i].selected = ~value.indexOf(options[i].value);\n                }\n            }\n        };\n    }\n\n    return {\n        on: 'change',\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n\n            if (!value) {\n                const { options } = this;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    if (!options[i].value) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function progress() {\n    return input();\n}\n","// returns a binder for output element\nexport default function output() {\n    return {\n        on: null,\n        getValue() {\n            return this.value || this.textContent;\n        },\n        setValue(value) {\n            const property = 'form' in this ? 'value' : 'textContent';\n            this[property] = value === null ? '' : `${value}`;\n        }\n    };\n}\n","import is from '../_helpers/is';\nimport set from '../set';\n\n// returns a function which called when bound node state is changed (eg DOM event is fired)\nexport default function createNodeHandler({\n    object,\n    key,\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function nodeHandler(domEvent = {}) {\n        // nodeHandler.disabled = true is set in unbindNode\n        // we cannot \"turn off\" binder.on when its value is a function\n        // developer needs to clean memory (\"turn off\" callback) manualy in binder.destroy\n        if (nodeHandler.disabled) {\n            return;\n        }\n\n        const previousValue = propDef.value;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n        const { getValue } = binder;\n        const value = getValue.call(node, {\n            previousValue,\n            domEvent,\n            originalEvent: domEvent.originalEvent || domEvent, // jQuery thing\n            // will throw \"preventDefault is not a function\" when domEvent is empty object\n            preventDefault: () => domEvent.preventDefault(),\n            // will throw \"stopPropagation is not a function\" when domEvent is empty object\n            stopPropagation: () => domEvent.stopPropagation(),\n            which,\n            target,\n            ctrlKey,\n            altKey,\n            ...bindingOptions\n        });\n\n        if (!is(value, previousValue)) {\n            set(object, key, value, {\n                fromNode: true,\n                // the following properties are needed to avoid circular changes\n                // they are used at objectHandler\n                changedNode: node,\n                onChangeValue: value,\n                binder\n            });\n        }\n    };\n}\n","// returns a function which is called when property value is changed\nexport default function createObjectHandler({\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function objectHandler(eventOptions = {}) {\n        const { value } = propDef;\n        const { onChangeValue, changedNode, binder: evtBinder } = eventOptions;\n        const { setValue } = binder;\n        // a dirty hack for https://github.com/matreshkajs/matreshka/issues/19\n        const dirtyHackValue = onChangeValue === 'string' && typeof value === 'number'\n            ? `${value}` : value;\n\n        // don't call setValue if a property is changed via getValue of the same binder\n        if (changedNode === node && onChangeValue === dirtyHackValue && evtBinder === binder) {\n            return;\n        }\n\n        setValue.call(node, value, {\n            value,\n            ...bindingOptions\n        });\n    };\n}\n","import defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\n\n// the function returns bound node(s)\nexport default function bound(object, key, { all } = { all: false }) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bound');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return all ? [] : null;\n    }\n\n    const def = defs.get(object);\n    const propDef = def.props[key];\n\n    let nodes;\n\n    if (propDef) {\n        const { bindings } = propDef;\n        nodes = (bindings && bindings.map(({ node }) => node)) || [];\n    } else {\n        nodes = [];\n    }\n\n    return all ? nodes : nodes[0] || null;\n}\n","import unbindNode from './unbindnode';\nimport triggerOne from './trigger/_triggerone';\nimport removeListener from './off/_removelistener';\nimport defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport defiError from './_helpers/defierror';\n\n// removes a property, its bindings and its events\n// TODO: remove function does not correctly removes delegated events, bindings, tree listeners etc\nexport default function remove(object, givenKey, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'remove');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n    const { silent } = eventOptions;\n    // allow to pass single key or an array of keys\n    const keys = givenKey instanceof Array ? givenKey : [givenKey];\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('remove:key_type', { key });\n        }\n\n        const props = def && def.props;\n        const propDef = props && props[key];\n\n        // if no object definition then simply delete the property\n        if (!propDef) {\n            delete object[key];\n            continue;\n        }\n\n        const { value } = propDef;\n\n        // remove all bindings\n        unbindNode(object, key);\n\n        // TODO: Manual listing of event prefixes may cause problems in future\n        const removeEventPrefies = [\n            '_change:deps',\n            '_change:bindings',\n            '_change:delegated',\n            '_change:tree',\n            'change',\n            'beforechange',\n            'bind',\n            'unbind'\n        ];\n\n        // remove all events\n        nofn.forEach(removeEventPrefies, prefix => removeListener(object, `${prefix}:${key}`));\n\n        // delete property definition\n        delete props[key];\n\n        // delete the property itself\n        delete object[key];\n\n        const extendedEventOptions = {\n            key,\n            value,\n            ...eventOptions\n        };\n\n        // trigger delegated events logic removal for asterisk events (*.*.*@foo)\n        triggerOne(object, '_delete:delegated', extendedEventOptions);\n\n        // fire events if \"silent\" is not true\n        if (!silent) {\n            triggerOne(object, 'delete', extendedEventOptions);\n            triggerOne(object, `delete:${key}`, extendedEventOptions);\n        }\n    }\n}\n","import initDefi from './_core/init';\nimport defineProp from './_core/defineprop';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport set from './set';\nimport defiError from './_helpers/defierror';\n\n// creates property mediator\nfunction createMediator({\n    object,\n    propDef,\n    key,\n    mediator\n}) {\n    return function propMediator(value) {\n        // args: value, previousValue, key, object itself\n        return mediator.call(object, value, propDef.value, key, object);\n    };\n}\n\n// transforms property value on its changing\nexport default function mediate(object, givenKeys, mediator) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'mediate');\n\n    const isKeysArray = givenKeys instanceof Array;\n\n    // allow to use key-mediator object as another method variation\n    if (typeof givenKeys === 'object' && !isKeysArray) {\n        nofn.forOwn(givenKeys, (objVal, objKey) => mediate(object, objKey, objVal));\n        return object;\n    }\n\n    initDefi(object);\n\n    // allow to use both single key and an array of keys\n    const keys = isKeysArray ? givenKeys : [givenKeys];\n\n    nofn.forEach(keys, (key) => {\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('mediate:key_type', { key });\n        }\n\n        const propDef = defineProp(object, key);\n\n        const propMediator = propDef.mediator = createMediator({\n            object,\n            propDef,\n            key,\n            mediator\n        });\n\n        // set new value\n        set(object, key, propMediator(propDef.value), {\n            fromMediator: true\n        });\n    });\n\n    return object;\n}\n"],"sourceRoot":""}