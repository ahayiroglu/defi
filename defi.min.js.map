{"version":3,"sources":["webpack://defi/webpack/universalModuleDefinition","webpack://defi/webpack/bootstrap","webpack://defi/./src/_core/defs.js","webpack://defi/./src/_helpers/checkobjecttype.js","webpack://defi/./src/trigger/_triggerone.js","webpack://defi/./src/_helpers/defierror.js","webpack://defi/./src/off/_removelistener.js","webpack://defi/./src/_mq/index.js","webpack://defi/./src/set.js","webpack://defi/./src/_core/defineprop.js","webpack://defi/./src/_core/init.js","webpack://defi/./src/on/_addlistener.js","webpack://defi/./src/binders/input.js","webpack://defi/./src/unbindnode/index.js","webpack://defi/./src/off/_undelegatelistener.js","webpack://defi/./src/on/_delegatelistener/index.js","webpack://defi/./src/_mq/_data.js","webpack://defi/./src/_mq/_init.js","webpack://defi/./src/on/_domeventregexp.js","webpack://defi/./src/on/_splitbyspaceregexp.js","webpack://defi/./src/bindnode/_getnodes.js","webpack://defi/./src/bindnode/index.js","webpack://defi/./src/off/_removetreelistener.js","webpack://defi/./src/on/_addtreelistener.js","webpack://defi/./src/_helpers/debounce.js","webpack://defi/./src/_mq/_html2nodelist.js","webpack://defi/./src/_helpers/is.js","webpack://defi/./src/mediate.js","webpack://defi/./src/remove.js","webpack://defi/./src/bindoptionalnode.js","webpack://defi/./src/bound.js","webpack://defi/./src/bindnode/_createobjecthandler.js","webpack://defi/./src/bindnode/_createnodehandler.js","webpack://defi/./src/binders/output.js","webpack://defi/./src/binders/progress.js","webpack://defi/./src/binders/select.js","webpack://defi/./src/binders/textarea.js","webpack://defi/./src/defaultbinders.js","webpack://defi/./src/lookforbinder.js","webpack://defi/./src/bindnode/_bindsinglenode.js","webpack://defi/./src/unbindnode/_removebinding.js","webpack://defi/./src/bindnode/_createbindingswitcher.js","webpack://defi/./src/_helpers/toarray.js","webpack://defi/./src/bindnode/_selectnodes.js","webpack://defi/./src/_helpers/deepfind.js","webpack://defi/./src/calc/_createcalchandler.js","webpack://defi/./src/calc/_addsource.js","webpack://defi/./src/calc/index.js","webpack://defi/./src/trigger/_triggeronedomevent.js","webpack://defi/./src/trigger/_triggerdomevent.js","webpack://defi/./src/trigger/index.js","webpack://defi/./src/off/index.js","webpack://defi/./src/off/_removedomlistener.js","webpack://defi/./src/on/_delegatelistener/changehandler.js","webpack://defi/./src/on/_createdomeventhandler.js","webpack://defi/./src/_helpers/assign.js","webpack://defi/./src/_mq/add.js","webpack://defi/./src/_mq/off.js","webpack://defi/./src/_mq/on.js","webpack://defi/./src/_mq/parsehtml.js","webpack://defi/./src/on/_adddomlistener.js","webpack://defi/./src/on/index.js","webpack://defi/./src/_lib.js","webpack://defi/./src/index.js"],"names":["root","factory","exports","module","define","amd","defi","window","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","PseudoMap","obj","set","data","writable","has","WeakMap","method","typeofObject","defiError","triggerOne","triggerArgs","def","defs","events","length","Array","event","latestEvent","callback","ctx","apply","info","getTypeError","variable","variableName","expectedType","errors","common:object_type","_ref","binding:node_missing","_ref2","key","node","bindingErrorPrefix","binding:falsy_key","calc:target_type","_ref3","target","calcErrorPrefix","calc:source_key_type","_ref4","sourceKey","calc:source_object_type","_ref5","sourceObject","calc:source_type","_ref6","source","trigger:names_type","_ref7","names","eventsErrorPrefix","on:names_type","_ref8","removedatakeys:key_type","_ref9","adddatakeys:key_type","_ref10","remove:key_type","_ref11","mediate:key_type","_ref12","getError","Error","context","allEvents","retain","noTrigger","domEventExecResult","domEventReg","exec","eventName","selector","removeDomListener","allEventsName","allEventsItem","_target2","_keys","keys","_i","_l2","_target","_index","_l","removeEventData","_target3","_index2","_l3","argCallback","_callback","eventCallback","push","a","mq","Init","parseHTML","assign","on","off","add","eventOptions","checkObjectType","objKey","objVal","props","propDef","newValue","previousValue","mediator","_eventOptions","skipMediator","fromMediator","force","forceHTML","silent","silentHTML","skipCalc","is","_keys2","_i2","_source","_key","isChanged","_result","self","extendedEventOptions","triggerChange","beforechangeEventName","beforechangeStr","beforechange","changeBindingsEventName","changeEventName","changeStr","change","changeDepsEventName","changeDelegatedKeyEventName","changeTreeEventName","changeCommonEventName","noAccessor","bindings","v","fromSetter","objectId","id","propModEventReg","arguments","initMK","_info$skipChecks","skipChecks","addDomListener","existingEvent","test","defineProp","replace","type","getValue","this","checked","setValue","unbindNode","itemKey","_l6","itemNode","itemEventOptions","mergedEventOptions","_key2","_source2","_key4","_result2","_source4","_keys4","_l5","_i4","keyObjKey","keyObjValue","_target4","_keys5","_i5","_l8","constructor","keyObjValueItem","_index3","_l7","deep","propsKey","_target5","_keys6","_i6","_l9","deepPath","split","deepPathLength","removeTreeListener","slice","_target6","_index4","_l10","binding","removeBinding","nodesItem","retainBindings","retainNodes","_target8","getNodes","_index6","_l12","_target7","_index5","_l11","undelegateListener","givenPath","path","pathStr","_end","_j","join","delegatedChangeEvtName","delegatedEventName","removeListener","delegatedData","addListener","changeHandler","nodeIndex","win","MQInit","result","nodeType","html2nodeList","newContext","querySelectorAll","document","htmlReg","customSelectorReg","selectNodes","$","nodes","u","bindNode","binder","temporaryOptionalFlag","optional","itemBinder","commonEventOptions","_key3","_source3","_keys3","_l4","_i3","_key5","_result3","_source5","_keys7","_i7","_source6","_key6","_result4","_eventOptions$optiona","_eventOptions$exactKe","exactKey","$nodes","bindingSwitcher","createBindingSwitcher","addTreeListener","oneNode","bindSingleNode","handler","listenedPath","createTreeListener","restPath","newHandler","changeEvent","extendedChangeEvent","listenPath","delegateListener","func","givenDelay","thisArg","timeout","delay","args","callContext","clearTimeout","setTimeout","givenHTML","wrapMap","option","legend","thead","tr","td","col","area","_","html","createElement","optgroup","tbody","tfoot","colgroup","caption","th","ex","wrapper","innerHTML","children","childNodes","v1","v2","createMediator","mediate","givenKeys","isKeysArray","propMediator","givenKey","_loop","prefix","all","map","bindingOptions","onChangeValue","changedNode","evtBinder","nodeHandler","domEvent","disabled","which","ctrlKey","altKey","originalEvent","preventDefault","stopPropagation","fromNode","textContent","input","multiple","options","selected","givenValue","indexOf","tagName","textarea","select","progress","output","defaultBinders","spaceReg","givenBinder","getValueOnBind","setValueOnBind","_eventOptions$debounc","debounceSetValue","_eventOptions$debounc2","debounceGetValue","_eventOptions$debounc3","debounceSetValueOnBind","_eventOptions$debounc4","debounceGetValueOnBind","_eventOptions$debounc5","debounceSetValueDelay","_eventOptions$debounc6","debounceGetValueDelay","_eventOptions$useExac","useExactBinder","isUndefined","objectHandler","foundBinder","lookForBinder","_binder","initialize","syncNodeHandler","createNodeHandler","debouncedNodeHandler","debounce","evtName","addEventListener","syncObjectHandler","createObjectHandler","debouncedObjectHandler","destroy","removeEventListener","lastDeepPathItem","previousTarget","start","array","randomAttr","Math","random","toString","givenSelector","selectors","execResult","boundKey","subSelector","boundNodes","setAttribute","toArray","removeAttribute","paths","current","allSources","values","_changeEvent$protecto","protector","protectKey","promiseCalc","setEventOptions","isDelegated","deepFind","targetValue","Promise","resolve","then","promiseResult","catch","calcHandler","calc","sources","givenHandler","itemTarget","itemSource","itemHandler","_eventOptions$setOnIn","setOnInit","debounceCalcOnInit","debounceCalc","debounceCalcDelay","_eventOptions$isTarge","isTargetPropertyHidden","syncCalcHandler","createCalcHandler","debouncedCalcHandler","addSource","sourceKeyItem","_window","Event","createEvent","initEvent","bubbles","cancelable","matreshkaTriggerArgs","dispatchEvent","descendant","triggerOneDOMEvent","givenNames","_len","splitBySpaceReg","domEvtExecResult","triggerDomEvent","isNamesVarArray","namesObjName","namesObjCallback","propName","eventNamespace","delegatedEventParts","delegatedName","index","TypeError","nextKey","nextValue","idMap","b$","nodeID","splitByDotReg","namesStr","_names$i$split","namespace","j","k","delegate","splice","randomID","evt","scopeSelector","splittedSelector","matching","sel","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","exist","domEventHandler","createDomEventHandler","_createBindingHandler","fullEventName","bindHandler","unbindHandler","addBindListenerResult","addUnbindListenerResult","triggerOnInit","f","trigger","bound","bindOptionalNode","remove","functions"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAAI,KAAAL,IAEAD,EAAAM,KAAAL,IARA,CASCM,OAAA,WACD,gBAAAC,GCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,IACAC,EAAAD,EACAE,KACAX,YAUA,OANAY,EAAAH,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,KAGAV,EAAAD,QA2CA,OAtCAQ,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,GACAK,gBACAC,cACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAzB,GACAoB,OAAAC,eAAArB,EAAA,cAAiD0B,YAIjDlB,EAAAmB,EAAA,SAAA1B,GACA,IAAAiB,EAAAjB,KAAA2B,WACA,WAA2B,OAAA3B,EAAA4B,SAC3B,WAAiC,OAAA5B,GAEjC,OADAO,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAW,EAAAC,GAAsD,OAAAX,OAAAY,UAAAC,eAAApB,KAAAiB,EAAAC,IAGtDvB,EAAA0B,EAAA,GAIA1B,IAAA2B,EAAA,IDzDA,ECyDA,SAAA7B,EAAA8B,EAAAT,GAAA,aCnEA,SAASU,iBAIGA,EAAUL,aAClBR,IAD6B,SACzBc,GACA,OAAOA,EAAIlC,MAEfmC,IAJ6B,SAIzBD,EAAKE,GACLpB,OAAOC,eAAeiB,EAAK,QACvBZ,MAAOc,EACPjB,cACAkB,YACAnB,mBAGRoB,IAZ6B,SAYzBJ,GACA,MAAO,SAAUA,qEAIS,oBAAZK,QAA0B,IAAIN,EAAc,IAAIM,8CCrBhD,GAAArC,EAAAN,QAGP,SAAyB8B,EAAQc,GAC5C,IAAMC,EAA0B,OAAXf,EAAkB,cAAgBA,EAEvD,GAAqB,WAAjBe,GAA8C,aAAjBA,EAC7B,MAAMC,EAAU,sBACZhB,SACAc,kDCTK,GAGF,SAASG,EAAWjB,EAAQb,EAAM+B,GAC7C,IAAMC,EAAMC,EAAK1B,IAAIM,GACfqB,EAASF,GAAOA,EAAIE,OAAOlC,GAEjC,GAAIkC,EAAQ,CACR,IAAMxC,EAAIwC,EAAOC,OACb1C,EAAI,EAGR,GAAIsC,aAAuBK,MACvB,KAAO3C,EAAIC,GAAG,CACV,IAAM2C,EAAQP,EAAWQ,YAAcJ,EAAOzC,GACtC8C,EAAkBF,EAAlBE,SAAUC,EAAQH,EAARG,IAClBD,EAASE,MAAMD,EAAKT,GACpBtC,GAAK,OAGT,KAAOA,EAAIC,GAAG,CACV,IAAM2C,EAAQP,EAAWQ,YAAcJ,EAAOzC,GACtC8C,EAAkBF,EAAlBE,SAAUC,EAAQH,EAARG,IAClBD,EAAS3C,KAAK4C,EAAKT,GACnBtC,GAAK,IAAAJ,EAAAN,QArBG+C,EA4BxBA,EAAWQ,aACPI,QACA1C,KAAM,gBAAAX,EAAA8B,EAAAT,GAAA,aChCV,IAWMiC,EAAe,SAACC,EAAUC,EAAcC,GAAzB,OACdD,EADc,oBACkBC,EADlB,cAPL,SAACF,GACb,OAAiB,OAAbA,EACO,cAGGA,EALF,CAQyDA,GADpD,cAGfG,GACFC,qBAAsB,SAAAC,GAAA,IAAGpC,EAAHoC,EAAGpC,OAAH,MAAwB,YAAxBoC,EAAWtB,OAAa,KACxCgB,EAAa9B,EAAQ,SAAU,WAErCqC,uBAAwB,SAAAC,GAAmB,IAAhBC,EAAgBD,EAAhBC,IAAKC,EAAWF,EAAXE,KAE5B,MAAUC,2CAA+CF,EAAzD,KADqC,iBAATC,EAAP,wBAAmDA,EAAnD,KAA8D,IACnF,KAEJE,oBAAqB,iBAASD,4CAC9BE,mBAAoB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAH,MACbC,eAAmBhB,EAAae,EAAQ,aAAc,WAC7DE,uBAAwB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,MACjBH,eAAmBhB,EAAamB,EAAW,aAAc,WAChEC,0BAA2B,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAH,MACpBN,eAAmBhB,EAAasB,EAAc,gBAAiB,WACtEC,mBAAoB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAH,MACbT,eAAmBhB,EAAayB,EAAQ,SAAU,WAEzDC,qBAAsB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,MACfC,iBAAqB7B,EAAa4B,EAAO,aAAc,WAE9DE,gBAAiB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,MAAH,OAAexB,EAAO,uBAAwBwB,WAE/DI,0BAA2B,SAAAC,GAAA,IAAGxB,EAAHwB,EAAGxB,IAAH,kCACKT,EAAaS,EAAK,MAAO,WAEzDyB,uBAAwB,SAAAC,GAAA,IAAG1B,EAAH0B,EAAG1B,IAAH,+BACKT,EAAaS,EAAK,MAAO,WAEtD2B,kBAAmB,SAAAC,GAAA,IAAG5B,EAAH4B,EAAG5B,IAAH,0BACKT,EAAaS,EAAK,MAAO,WAEjD6B,mBAAoB,SAAAC,GAAA,IAAG9B,EAAH8B,EAAG9B,IAAH,2BACKT,EAAaS,EAAK,MAAO,YAAA/D,EAAAN,QAGvC,SAAmBqE,EAAK7B,GACnC,IAAM4D,EAAWpC,EAAOK,GACxB,IAAK+B,EACD,MAAMC,wBAAwBhC,EAAxB,0CAGV,OAAO,IAAIgC,MAAMD,EAAS5D,2CCzDb,GAAArB,EAAAQ,EACM,GAAAjB,EAAAiB,EACC,IAAArB,EAAAN,QAGT,SAAwB8B,EAAQb,EAAMuC,EAAU8C,EAAS3C,GACpE,IAAMV,EAAMC,EAAK1B,IAAIM,GAGrB,IAAKmB,EACD,SALsE,IAQ1DsD,EAActD,EAAtBE,OACFA,EAASoD,EAAUtF,GACnBuF,KACAC,IAAYxF,GAAmB,MAAZA,EAAK,GACxByF,EAAqBC,EAAYC,KAAK3F,GAE5C,GAAIyF,EAAoB,KACXG,EAA4BH,EADjB,GACArC,EAAiBqC,EADjB,GACKI,EAAYJ,EADjB,GAOpB,OAJ0BlG,EAAQ,GAElCuG,CAAkBjF,EAAQuC,EAAKwC,EAAWC,EAAUtD,EAAU8C,EAAS3C,MAM3E,YAAW1C,EAAsB,CAC7B,IAAKwF,EAAW,QAC2BO,EAAfC,EADZC,EACAX,EADAY,EAAA/F,OAAAgG,KAAAF,GAAAG,EAAA,EAAAC,EAAAH,EAAA/D,OACY6D,EADZC,EAC2BF,EAD3BG,EAAAE,MAAAC,EAAAD,IAC6C,QAAAE,EACxCN,EADwCO,EAAA,EAAAC,EAAAF,EAAAnE,OACxBE,EADwBiE,EAAAC,KAAAC,EAAAD,IACd,CACnC,IAAME,GACFV,gBACAxD,SAAUF,EAAME,SAChB8C,QAAShD,EAAMgD,SAGnBvD,EAAWjB,EAAX,eAAkCb,EAAQyG,GAC1C3E,EAAWjB,EAAQ,cAAe4F,GAM9CzE,EAAIE,eACD,GAAIA,EAAQ,SAEOG,EAFPqE,EAEFxE,EAFEyE,EAAA,EAAAC,EAAAF,EAAAvE,OAEOE,EAFPqE,EAAAC,KAAAC,EAAAD,IAEiB,CAC5B,IAAME,EAAetE,GAAYA,EAASuE,WAAcvE,EAClDwE,EAAgB1E,EAAME,SAASuE,WAAazE,EAAME,SAExD,GAAKsE,GAAeA,IAAgBE,GAC5B1B,GAAWA,IAAYhD,EAAMgD,QAEjCE,EAAOyB,KAAK3E,OACT,CACH,IAAMoE,GACFzG,OACAuC,SAAUF,EAAME,SAChB8C,QAAShD,EAAMgD,SAGdG,IACD1D,EAAWjB,EAAX,eAAkCb,EAAQyG,GAC1C3E,EAAWjB,EAAQ,cAAe4F,KAK1ClB,EAAOpD,OACPmD,EAAUtF,GAAQuF,SAEXvD,EAAIE,OAAOlC,GAI1B,WAAO,SAAAX,EAAA8B,EAAAT,GAAA,iBAAAF,EAAAE,EC/EM,IAAAR,EAAAQ,EACK,IAAAjB,EAAAiB,EACP,IAAAuG,EAAAvG,EACC,IAAAZ,EAAAY,EACA,IAAAQ,EAAAR,EACG,IAIJ,SAASwG,EAAGrB,EAAUR,GACjC,OAAO,IAAI8B,EAAKtB,EAAUR,aADN6B,EAIxBA,EAAGE,UAAYA,EAEfC,EAAOF,EAAKpG,WACRuG,KACAC,MACAC,8CClBa,GAAAtH,EAAAQ,EACM,GAAAjB,EAAAiB,EACK,GAAAuG,EAAAvG,EACb,IAAArB,EAAAN,QAIA,SAASuC,EAAIT,EAAQuC,EAAK3C,EAAOgH,GAK5C,GAHAC,EAAgB7G,EAAQ,QAGnBuC,EACD,OAAOvC,EAIX,GAAmB,iBAARuC,EAAkB,SACCuE,EAARC,EADOtB,EACblD,EADa8C,EAAA/F,OAAAgG,KAAAG,GAAAF,EAAA,EAAAI,EAAAN,EAAA/D,OACPyF,EADOtB,EACCqB,EADDzB,EAAAE,MAAAI,EAAAJ,IACY9E,EAAIT,EAAQ8G,EAAQC,EAAQnH,GACjE,OAAOI,EAGX4G,EAAeA,MACf,IAAMzF,EAAMC,EAAK1B,IAAIM,GAGrB,IAAKmB,EAED,OADAnB,EAAOuC,GAAO3C,EACPI,EArB+C,IAwBlDgH,EAAkB7F,EAAlB6F,MAAO3F,EAAWF,EAAXE,OACT4F,EAAUD,EAAMzE,GAGtB,IAAK0E,EAED,OADAjH,EAAOuC,GAAO3C,EACPI,EA9B+C,IA8CtDkH,EAbWC,EAA4BF,EAAnCrH,MAAsBwH,EAAaH,EAAbG,SAjC4BC,EA4CtDT,EAPAU,EArCsDD,EAqCtDC,aACAC,EAtCsDF,EAsCtDE,aACAC,EAvCsDH,EAuCtDG,MACAC,EAxCsDJ,EAwCtDI,UACAC,EAzCsDL,EAyCtDK,OACAC,EA1CsDN,EA0CtDM,WACAC,EA3CsDP,EA2CtDO,SAQAV,GAHAE,GAAaS,EAAGjI,EAAOuH,IAAmBG,GAAiBC,EAGhD3H,EAFAwH,EAASxH,GAKxB,IAtD0DkI,EAAAtC,EAAAuC,EAAAC,EAAAC,EAsDpDC,GAAaL,EAAGX,EAAUC,GAtD0BgB,KAAA,IAAAH,EA4DnDpB,EA5DmDpB,GAAAsC,EAAAxI,OAAAgG,KAAA0C,IAAA1G,OAAAyG,EAAA,EAAAA,EAAAvC,EAAAuC,IAAAI,EAAAF,EAAAH,EAAAC,IAAAC,EAAAC,GAAAE,EA6DtDvI,MAAOsH,EA7D+CiB,EA8DtDC,KAAMpI,EA9DgDmI,EA+DtDhB,gBA/DsDgB,EAgEtD5F,MAhEsD4F,EAiEtDD,YANJ,IAAMG,IASAC,GAAiBJ,GAAaV,KAAWE,EAG/C,GAAIY,EAAe,CACf,IACMC,EAA2BC,gBAAmBjG,EAEhDlB,EAAOkH,IACPtH,EAAWjB,EAAQuI,EAAuBF,GAG1ChH,EAAAoH,cACAxH,EAAWjB,EARS,eAQgBqI,GAO5C,GAHApB,EAAQrH,MAAQsH,GAGXS,IAAeO,GAAaT,GAAY,CACzC,IAAMiB,sBAA8CnG,EAChDlB,EAAOqH,IACPzH,EAAWjB,EAAQ0I,EAAyBL,GAKpD,GAAIC,EAAe,CACf,IACMK,EAAqBC,UAAarG,EACpClB,EAAOsH,IACP1H,EAAWjB,EAAQ2I,EAAiBN,GAGpChH,EAAAwH,QACA5H,EAAWjB,EAPG,SAOgBqI,GAKtC,IAAKH,GAAaV,KAAWI,EAAU,CACnC,IAAMkB,kBAAsCvG,EACxClB,EAAOyH,IACP7H,EAAWjB,EAAQ8I,EAAqBT,GAKhD,GAAIH,EAAW,CAEX,IAAMa,uBAAmDxG,EACrDlB,EAAO0H,IACP9H,EAAWjB,EAAQ+I,EAA6BV,GAIpD,IAAMW,kBAAsCzG,EACxClB,EAAO2H,IACP/H,EAAWjB,EAAQgJ,EAAqBX,GAI5C,IAAMY,oBAA0C1G,EAC5ClB,EAAO4H,IACPhI,EAAWjB,EAAQiJ,EAAuBZ,GAM1ChH,EAD6B,sBAE7BJ,EAAWjB,EAFkB,oBAEgBqI,GAIrD,OAAOrI,yCCtJM,GAAAX,EAAAQ,EACD,GAAArB,EAAAN,QAGD,SAAoB8B,EAAQuC,EAAK2G,GAC5C,IAAM/H,EAAMC,EAAK1B,IAAIM,GAGrB,IAAKmB,EACD,OAAO,KAGX,IAAKA,EAAI6F,MAAMzE,GAAM,CACjB,IAAM0E,EAAU9F,EAAI6F,MAAMzE,IACtB3C,MAAOI,EAAOuC,GACd6E,SAAU,KACV+B,SAAU,MAGTD,GACD5J,OAAOC,eAAeS,EAAQuC,GAC1B/C,gBACAC,cACAC,IAH+B,WAI3B,OAAOuH,EAAQrH,OAEnBa,IAN+B,SAM3B2I,GACA,OAAO3I,EAAIT,EAAQuC,EAAK6G,GACpBC,mBAOpB,OAAOlI,EAAI6F,MAAMzE,0CCnCJ,GAEb+G,EAAW,EAAA9K,EAAAN,QAGA,SAAgB8B,GAC3B,IAAImB,EAAMC,EAAK1B,IAAIM,GAoCnB,OAnCKmB,IACDA,GAGIE,UAUA2F,SAaAuC,GAAID,GAGRA,GAAY,EAEZlI,EAAKX,IAAIT,EAAQmB,IAGdA,yCC1CQ,GAAA9B,EAAAQ,EACI,GAAAjB,EAAAiB,EACA,GAAAuG,EAAAvG,EACC,IAGlB2J,EACA,gHAAAhL,EAAAN,QAIS,SAAqB8B,EAAQb,EAAMuC,EAAU8C,GAAoB,IAAX3C,EAAW4H,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,MAC5DhF,EAAciF,EAAO1J,GAA7BqB,OACFM,EAAM6C,GAAWxE,EACjBqB,EAASoD,EAAUtF,GACnBqC,GACFE,WAAU8C,UAAS7C,MAAKxC,OAAM0C,QAL0C8H,EAQ7C9H,EAAvB+H,sBARoED,KAU5E,IAAKC,EAAY,CACb,IAAMhF,EAAqBC,EAAYC,KAAK3F,GAE5C,GAAIyF,EAAoB,KACXG,EAA4BH,EADjB,GACArC,EAAiBqC,EADjB,GACKI,EAAYJ,EADjB,GAOpB,OAJuBlG,EAAQ,GAE/BmL,CAAe7J,EAAQuC,EAAKwC,EAAWC,EAAUtD,EAAU8C,EAAS3C,OAO5E,GAAIR,EAAQ,CACR,IAAKuI,EAED,IAAK,IAAIhL,EAAI,EAAGA,EAAIyC,EAAOC,OAAQ1C,IAAK,CACpC,IAAMkL,EAAgBzI,EAAOzC,GAG7B,IAFqB8C,GAAYA,EAASuE,WAAcvE,MAClCoI,EAAcpI,SAASuE,WAAa6D,EAAcpI,WACnCoI,EAActF,UAAYA,EAC3D,SAMZnD,EAAO8E,KAAK3E,QAGZiD,EAAUtF,IAASqC,GAevB,OAZIgI,EAAgBO,KAAK5K,IAErB6K,EAAWhK,EAAQb,EAAK8K,QAAQT,EAAiB,KAIhDI,GAA0B,MAAZzK,EAAK,KACpB8B,EAAWjB,EAAX,YAA+Bb,EAAQqC,GACvCP,EAAWjB,EAAQ,WAAYwB,KAInC,IAAO,SAAAhD,EAAA8B,EAAAT,GAAA,aAAArB,EAAAN,QCnEI,SAAegM,GAC1B,IAAIzD,SACJ,OAAQyD,GACJ,IAAK,WACD,OACIzD,GAAI,cACJ0D,SAFG,WAGC,OAAOC,KAAKC,SAEhBC,SALG,SAKM1K,GACLwK,KAAKC,QAAUzK,IAG3B,IAAK,QACD,OACI6G,GAAI,cACJ0D,SAFG,WAGC,OAAOC,KAAKxK,OAEhB0K,SALG,SAKM1K,GACLwK,KAAKC,iBAAiBzK,GAAyBwK,KAAKxK,QAAUA,IAG1E,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,QACD,SACJ,IAAK,SACD6G,EAAK,KACL,MACJ,IAAK,OACDA,EAAK,SACL,MAmBJ,QACIA,EAAK,QAGb,OACIA,KACA0D,SAFG,WAGC,OAAOC,KAAKxK,OAEhB0K,SALG,SAKM1K,GACLwK,KAAKxK,MAAQA,2CC/DG,GAAAP,EAAAQ,EACX,GAAAjB,EAAAiB,EACI,IAAAuG,EAAAvG,EACU,IAAAZ,EAAAY,EACL,IAAArB,EAAAN,QAGX,SAASqM,EAAWvK,EAAQuC,EAAKC,EAAMoE,GAIlD,GAFAC,EAAgB7G,EAAQ,cAEpBuC,aAAehB,MAAO,CACtB,GAAsB,iBAAXgB,EAAI,GAAiB,QAAAkD,EAMflD,EANemD,EAAA,EAAAC,EAAAF,EAAAnE,OAMVkJ,EANU/E,EAAAC,KAAAC,EAAAD,IAMC6E,EAAWvK,EAAQwK,EAAShI,EAAMoE,QAC5D,QAAAxE,EAAAgD,EAKU7C,EALVuD,EAAA,EAAA2E,EAAArF,EAAA9D,OAAAc,EAAAgD,EAAAU,KAAA2E,EAAA3E,IASG,KAHG0E,EAGHpI,EAHFG,IACMmI,EAEJtI,EAFFI,KACOmI,EACLvI,EADFZ,MAGMoJ,KAEN,GAH2BpI,EAGH,QAAAqI,EAAA1C,EAERyC,EAFQE,EAHGtI,EAGHsF,EAAAxI,OAAAgG,KAAAwF,GAAA/E,EAAA+B,EAAAxG,OAAAyG,EAAA,EAAAA,EAAAhC,EAAAgC,IAAAI,EAAA0C,EAAA/C,EAAAC,IAAA+C,EAAAD,GAKxB,GAAIF,EAAkB,QAAAI,EAAAC,EAENJ,EAFMK,EAEcN,EAFdO,EAAA5L,OAAAgG,KAAA2F,GAAAE,EAAAD,EAAA5J,OAAA8J,EAAA,EAAAA,EAAAD,EAAAC,IAAAJ,EAAAD,EAAAG,EAAAE,IAAAH,EAAAF,GAKtBR,EAAWvK,EAAQwK,EAASE,EAAUE,GAI9C,OAAO5K,EAGX,GAAIuC,GAAsB,iBAARA,EAAkB,SACD8I,EAAbC,EADcC,EACpBhJ,EADoBiJ,EAAAlM,OAAAgG,KAAAiG,GAAAE,EAAA,EAAAC,EAAAF,EAAAlK,OACdgK,EADcC,EACDF,EADCG,EAAAC,MAAAC,EAAAD,IAE5B,GAAIH,EAAYK,cAAgBrM,QAAU,SAAUgM,EAEhDf,EAAWvK,EAAQqL,EAAWC,EAAY9I,KAAMA,QAC7C,GACH8I,EAAYK,cAAgBpK,OACzB+J,EAAYhK,QACZgK,EAAY,GAAGK,cAAgBrM,QAC/B,SAAUgM,EAAY,GAC3B,QAE6BM,EAF7B/F,EAEeyF,EAFfO,EAAA,EAAAC,EAAAjG,EAAAvE,OAE6BsK,EAF7B/F,EAAAgG,KAAAC,EAAAD,IAGMtB,EAAWvK,EAAQqL,EAAWO,EAAgBpJ,KAAMA,QAIxD+H,EAAWvK,EAAQqL,EAAWC,EAAa9I,GAGnD,OAAOxC,EA9DqD,IAkExD+L,GADRnF,EAAeA,OACPmF,KACF5K,EAAMC,EAAK1B,IAAIM,GAErB,IAAKmB,EACD,OAAOnB,EAtEqD,IAyExDgH,EAAU7F,EAAV6F,MAIR,GAAY,OAARzE,YAAuBA,EAAqB,SACbyJ,EADaC,EAChCjF,EADgCkF,EAAA5M,OAAAgG,KAAA2G,GAAAE,EAAA,EAAAC,EAAAF,EAAA5K,OAAA2K,EACbD,EADaE,EAAAC,MAAAC,EAAAD,IAExC5B,EAAWvK,EAAQgM,EAAU,KAAMpF,GAGvC,OAAO5G,EAIX,QAAI+L,EAAgB,CAChB,IAAMM,EAAW9J,EAAI+J,MAAM,KACrBC,EAAiBF,EAAS/K,OAEhC,GAAIiL,EAAiB,EAAG,CAGpB,IAFA,IAAI1J,EAAS7C,EAEJpB,GAAI,EAAGA,GAAI2N,EAAiB,EAAG3N,KAEpCiE,EAASA,EAAOwJ,EAASzN,KAS7B,OAJA4N,EAAmBxM,EAAQqM,EAASI,MAAM,EAAGF,EAAiB,IAE9DhC,EAAW1H,EAAQwJ,EAASE,EAAiB,GAAI/J,EAAMoE,GAEhD5G,GAIf,IAAMiH,GAAUD,EAAMzE,GAGtB,IAAK0E,GACD,OAAOjH,EAhHqD,IAmHxDmJ,GAAalC,GAAbkC,SAGR,IAAKA,GACD,OAAOnJ,EAIX,IAAKwC,EAAM,SAAAkK,GACMvD,GADNwD,GAAA,EAAAC,GAAAF,GAAApL,OACiBuL,GADjBH,GAAAC,OAAAC,GAAAD,KAEHG,GACI9M,SAAQuC,MAAKqE,eAAciG,aAMnC,OAFA5F,GAAQkC,SAAW,KAEZnJ,EApIqD,IAuIhE,IAKsB+M,GAJhBC,MACAC,MAzI0DC,GAuIjDC,EAASnN,EAAQwC,GAvIgC4K,GAAA,EAAAC,GAAAH,GAAA5L,OA4I1CyL,GA5I0CG,GAAAE,OAAAC,GAAAD,KA4I5B,QACRP,GADQS,GACnBnE,GADmBoE,GAAA,EAAAC,GAAAF,GAAAhM,OACRuL,GADQS,GAAAC,OAAAC,GAAAD,KAExBV,GAAQrK,OAASuK,GACjBD,GACI9M,SAAQuC,MAAKqE,eAAciG,cAG/BG,GAAe7G,KAAK0G,IACpBI,GAAY9G,KAAK4G,KAY7B,OANIC,GAAe1L,OACf2F,GAAQkC,SAAW6D,GAEnB/F,GAAQkC,SAAW,KAGhBnJ,yCCvKM,GAAAX,EAAAQ,EACU,GAAArB,EAAAN,QA0BZ,SAASuP,EAAmBzN,EAAQ0N,EAAWvO,EAAMuC,EAAU8C,GAAoB,IAAX3C,EAAW4H,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,MACxFtI,EAAMC,EAAK1B,IAAIM,GAGrB,GAAKmB,EAAL,CAJ8F,IAQ9EsD,EAActD,EAAtBE,OAEJsM,EAA4B,iBAAdD,GAAwC,KAAdA,EAAmBA,EAAUpB,MAAM,KAAOoB,EAEtF,GAAKC,GAASA,EAAKrM,OAGZ,CAEH,IAAMiB,EAAMoL,EAAK,GACbC,SAEJ,GAAID,EAAKrM,OAAS,EAAG,SAAA0G,EACC2F,EADDpI,EACO,EADPsI,EAAA7F,EAAA1G,OAAAwM,EAAA,EAAA3F,EAAA5G,MAAAsM,EAAAtI,KAAAsI,GAAA1F,EAAA2F,KAAA9F,EAAAzC,KAEjBqI,GADAD,KACeI,KAAK,UAGpBH,GADAD,MACe,IAAM,GAIzB,IAAMK,uBAA8CzL,EAChDkC,EAAUuJ,IArDtB,SAAA5L,GAIG,QAIuBZ,EAPtByM,EAGD7L,EAHC6L,mBACAL,EAEDxL,EAFCwL,QACAnJ,EACDrC,EADCqC,UAEMC,KADPe,EAEgBhB,EAAUwJ,GAF1BvI,EAAA,EAAAC,EAAAF,EAAAnE,OAIuBE,EAJvBiE,EAAAC,KAAAC,EAAAD,IAMSlE,EAAMK,KAAK+L,UAAYA,GACvBlJ,EAAOyB,KAAK3E,GAIhBkD,EAAOpD,OACPmD,EAAUwJ,GAAsBvJ,SAEzBD,EAAUwJ,GAlBzB,EAuDgBA,mBAAoBD,EACpBJ,UACAnJ,cAImB,iBAAhBzE,EAAOuC,IACdkL,EAAmBzN,EAAOuC,GAAMoL,EAAMxO,EAAMuC,EAAU8C,EAAS3C,QAzBnEqM,EAAelO,EAAQb,EAAMuC,EAAU8C,EAAS3C,2CCzChC,GAAAxC,EAAAQ,EACE,IAAArB,EAAAN,QAGX,SAA0B8B,EAAQ0N,EAAWvO,EAAMuC,EAAU8C,GAAoB,IAAX3C,EAAW4H,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,MAExFkE,EAA4B,iBAAdD,GAAwC,KAAdA,EAAmBA,EAAUpB,MAAM,KAAOoB,EAEtF,GAAKC,GAASA,EAAKrM,OAGZ,CAEH,IAAMiB,EAAMoL,EAAK,GACbC,SAEJ,GAAID,EAAKrM,OAAS,EAAG,SAAA0G,EACC2F,EADDpI,EACO,EADPsI,EAAA7F,EAAA1G,OAAAwM,EAAA,EAAA3F,EAAA5G,MAAAsM,EAAAtI,KAAAsI,GAAA1F,EAAA2F,KAAA9F,EAAAzC,KAEjBqI,GADAD,KACeI,KAAK,UAGpBH,GADAD,MACe,IAAM,GAGzB,IAAMQ,GACFR,OACAxO,OACAuC,WACA8C,UACA3C,OACA7B,UAIJoO,EAAYpO,EAAZ,qBAAyCuC,EAAO8L,EAAe,MAC3DF,gBACAP,YAIJS,GACIzO,MAAOI,EAAOuC,IACf4L,QAhCHC,EAAYpO,EAAQb,EAAMuC,EAAU8C,EAAS3C,6CCPjDyM,UAAW,EACX7J,oDCJsB,IAEpB8J,EAAMhQ,OAIZ,SAASiQ,EAAOxJ,EAAUR,GACtB,IAAIiK,SAEJ,GAAIzJ,EACA,GAAIA,EAAS0J,UAA4B,iBAARH,GAAoBvJ,IAAauJ,EAC9DE,GAAUzJ,QACP,GAAwB,iBAAbA,EACd,GAAI,IAAI+E,KAAK/E,GACTyJ,EAASE,EAAc3J,QACpB,GAAIR,EAAS,CAChB,IAAMoK,EAAc,IAAIJ,EAAOhK,GAAU,GAErCoK,IACAH,EAASG,EAAWC,iBAAiB7J,SAGzCyJ,EAASF,EAAIO,SAASD,iBAAiB7J,QAI3CyJ,EAFO,WAAYzJ,EAEVA,GAGCA,GAIlB,IAAM1D,EAASmN,GAAUA,EAAOnN,OAEhC,GAAIA,EACA,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAQ1C,IACxBwL,KAAKjE,KAAKsI,EAAO7P,IAK7B4P,EAAOtO,uBAEQsO,0CC1CA,6CAAAhQ,EAAA8B,EAAAT,GAAA,aAAArB,EAAAN,QCDA,4BAAAM,EAAA8B,EAAAT,GAAA,iBAAAF,EAAAE,ECDS,IAAAR,EAAAQ,EACV,GAERkP,EAAU,IACVC,EAAoB,oBAAAxQ,EAAAN,QAKX,SAAkB8B,EAAQgF,GAarC,MATwB,iBAAbA,IACH+J,EAAQhF,KAAK/E,IACdgK,EAAkBjF,KAAK/E,GAElBiK,EAAYjP,EAAQgF,GAEpBkK,EAAElK,KAGPmK,qCCtBQ,GAAA9P,EAAAQ,EACI,GAAAjB,EAAAiB,EACF,IAAAuG,EAAAvG,EACa,IAAAZ,EAAAY,EACP,IAAAQ,EAAAR,EACC,GAAAhB,EAAAgB,EACN,GAAAuP,EAAAvP,EACM,IAAArB,EAAAN,QAGb,SAASmR,EAASrP,EAAQuC,EAAKC,EAAM8M,EAAQ1I,GAExDC,EAAgB7G,EAAQ,YAExB4G,EAAeA,MACf0I,EAASA,MAET5F,EAAO1J,GAP+D,IAS9DuP,EAA0BF,EAA1BE,sBAKR,UAHOF,EAASE,uBAGXhN,EACD,MAAMvB,EAAU,qBAGpB,GAAIuB,aAAehB,MAAO,CACtB,GAAsB,iBAAXgB,EAAI,GAAiB,CAK5B,GAAIgN,EAAuB,KAAAlK,EAAAM,EAAAJ,EAAAyC,EAAAC,EAAAE,KAAA,IAAAH,EAEHpB,EAFGjB,GAAAN,EAAA/F,OAAAgG,KAAA0C,IAAA1G,OAAAiE,EAAA,EAAAA,EAAAI,EAAAJ,IAAA4C,EAAAF,EAAA5C,EAAAE,IAAAyC,EAAAC,GAAAE,EAEWqH,YAAlC5I,IAPwB,QAAAnB,EAUflD,EAVemD,EAAA,EAAAF,EAAAC,EAAAnE,OAUVkJ,EAVU/E,EAAAC,KAAAF,EAAAE,IAUC2J,EAASrP,EAAQwK,EAAShI,EAAM8M,EAAQ1I,QAClE,QAAAxE,EAAAgD,EAKU7C,EALVuD,EAAA,EAAAgG,EAAA1G,EAAA9D,OAAAc,EAAAgD,EAAAU,KAAAgG,EAAAhG,IAUG,KAJG0E,EAIHpI,EAJFG,IACMmI,EAGJtI,EAHFI,KACQiN,EAENrN,EAFFkN,OACO3E,EACLvI,EADFZ,MAEMkO,EAAqBlN,EACrBoI,KAMN,GAJI2E,IACA3E,EAAmB4E,aAGnBE,EAAoB,QAAAC,EAAA3E,EAERJ,EAFQgF,EAEYF,EAFZG,EAAAvQ,OAAAgG,KAAAsK,GAAAE,EAAAD,EAAAvO,OAAAyO,EAAA,EAAAA,EAAAD,EAAAC,IAAA/E,EAAA2E,EAAAE,EAAAE,IAAAH,EAAAD,GAKxB,GAAIhF,EAAkB,QAAAqF,EAAAC,EAENrF,EAFMsF,EAEcvF,EAFda,EAAAlM,OAAAgG,KAAA4K,GAAAzF,EAAAe,EAAAlK,OAAAmK,EAAA,EAAAA,EAAAhB,EAAAgB,IAAAwE,EAAAD,EAAAxE,EAAAC,IAAAyE,EAAAF,GAKtBX,EAASrP,EAAQwK,EAASE,EAAU+E,EAAY7E,GAIxD,OAAO5K,EAIX,GAAmB,iBAARuC,EAAkB,SACM8I,EAAbC,EADOC,EACbhJ,EADa4N,EAAA7Q,OAAAgG,KAAAiG,GAAA6E,EAAA,EAAAxD,EAAAuD,EAAA7O,OACPgK,EADOC,EACMF,EADN8E,EAAAC,MAAAxD,EAAAwD,IACoB,CAEzC,GAAIb,EAAuB,KAAArD,EAAAR,EAAAS,GAAAkE,GAAAC,GAAAC,MAAA,IAAAF,GAEMf,EAFN5D,GAAAQ,EAAA5M,OAAAgG,KAAA+K,KAAA/O,OAAA6K,GAAA,EAAAA,GAAAT,EAAAS,KAAAoE,GAAAD,GAAApE,EAAAC,KAAAkE,GAAAC,IAAAC,GAEcf,YAArC5I,EAAe0I,MAA2CE,kBAE1D5I,EAAe0I,EAGnB,GACIhE,GACGA,EAAYK,cAAgBrM,QAC5B,SAAUgM,EAGb+D,EACIrP,EAAQqL,EAAWC,EAAY9I,KAC/B8I,EAAYgE,QAAU9M,EAAMoE,QAE7B,GACH0E,GACGA,EAAYK,cAAgBpK,OAC5B+J,EAAYhK,QACZgK,EAAY,GAAGK,cAAgBrM,QAC/B,SAAUgM,EAAY,GAC3B,QAK6BM,GAL7B/F,GAKeyF,EALfO,GAAA,EAAAO,GAAAvG,GAAAvE,OAK6BsK,GAL7B/F,GAAAgG,OAAAO,GAAAP,KAMMwD,EACIrP,EAAQqL,EAAWO,GAAgBpJ,KACnCoJ,GAAgB0D,QAAU9M,EAAMoE,QAKxCyI,EAASrP,EAAQqL,EAAWC,EAAa9I,EAAMoE,GAIvD,OAAO5G,EA7G2D,IAAAqH,GAmHlET,EAnHkE4J,GAAAnJ,GAiHlEmI,qBAjHkEgB,GAiHvDjB,MAjHuDiB,GAAAC,GAAApJ,GAkHlEqJ,qBAlHkED,OAoHhEE,GAASxD,EAASnN,EAAQwC,GAGhC,IAAKmO,GAAOrP,OAAQ,CAChB,GAAIkO,GACA,OAAOxP,EAGX,MAAMgB,EAAU,wBAA0BuB,MAAKC,SAGnD,IAAKkO,GAAU,CACX,IAAMrE,GAAW9J,EAAI+J,MAAM,KACrBC,GAAiBF,GAAS/K,OAEhC,GAAIiL,GAAiB,EAAG,CAEpB,IAAMqE,GAAkBC,GACpB7Q,SACAqM,YACAsE,UACArB,SACA1I,eACAyI,aAOJ,OAJAyB,EAAgB9Q,EAAQqM,GAASI,MAAM,EAAGF,GAAiB,GAAIqE,IAE/DA,KAEO5Q,GAlJuD,IAsJtE,IAGqB+Q,GAHf9J,GAAU+C,EAAWhK,EAAQuC,GAtJmC0J,GAyJzD0E,GAzJyDhE,GAAA,EAAAa,GAAAvB,GAAA3K,OAyJjDyP,GAzJiD9E,GAAAU,OAAAa,GAAAb,KAyJtCqE,EAAehR,GAC3C2Q,UACAnO,KAAMuO,GACNxO,MACAqE,eACA0I,SACArI,aAGJ,OAAOjH,yCC5KoB,IAAAxB,EAAAN,QAIhB,SAA4B8B,EAAQqM,EAAU4E,GACjC,iBAAb5E,IACPA,EAAWA,EAASC,MAAM,MAI9B,IAAK,IAAI1N,EAAI,EAAGA,EAAIyN,EAAS/K,OAAQ1C,IAAK,CAEtC,IAAMsS,EAAe7E,EAASI,MAAM,EAAG7N,GAEvC6O,EACIzN,EACAkR,EAFJ,gBAGoB7E,EAASzN,GACzBqS,2CClBiB,IAAA5R,EAAAQ,EACE,IAG/B,SAASsR,EAAT/O,GAAmD,IAArB6O,EAAqB7O,EAArB6O,QAASG,EAAYhP,EAAZgP,SAC7BC,EAAa,SAAsBC,GAAa,IAAAjM,EAAAM,EAAAJ,EAAAyC,EAAAC,EAAAE,KAAA,IAAAA,EAE9CiJ,WAF8CpJ,EAG3CsJ,EAH2C3L,GAAAN,EAAA/F,OAAAgG,KAAA0C,IAAA1G,OAAAiE,EAAA,EAAAA,EAAAI,EAAAJ,IAAA4C,EAAAF,EAAA5C,EAAAE,IAAAyC,EAAAC,GAClD,IAAMsJ,IAIEpK,EAAyBmK,EAAzBnK,cAAevH,EAAU0R,EAAV1R,MAGnBuH,GAA0C,iBAAlBA,GACxBqF,EAAmBrF,EAAeiK,EAAUH,GAI5CrR,GAA0B,iBAAVA,GAChBkR,EAAgBlR,EAAOwR,EAAUH,GAIrCA,EAAQlS,KAAKqL,KAAMmH,IAKvB,OAFAF,EAAWpL,UAAYgL,EAEhBI,EAMI,SAASP,EAAgB9Q,EAAQqM,EAAU4E,GAC9B,iBAAb5E,IACPA,EAAWA,EAASC,MAAM,MAI9B,IAAK,IAAI1N,EAAI,EAAGA,EAAIyN,EAAS/K,OAAQ1C,IAAK,CAEtC,IAAM4S,EAAanF,EAASI,MAAM,EAAG7N,GAC/BwS,EAAW/E,EAASI,MAAM7N,EAAI,GAEpC6S,EACIzR,EACAwR,EAFJ,gBAGoBnF,EAASzN,GACzBuS,GACIF,UACAG,yBAjBQN,0CC7BT,SAAkBY,EAAMC,EAAYC,GAC/C,IAAIC,SACAC,SAQJ,MAP0B,iBAAfH,GACPC,EAAUD,EACVG,EAAQ,GAERA,EAAQH,GAAc,EAGnB,WACH,IAAMI,EAAOtI,UACPuI,EAAcJ,GAAWxH,KAE/B6H,aAAaJ,GAEbA,EAAUK,WAAW,kBAAMR,EAAK9P,MAAMoQ,EAAaD,IAAOD,6CCpBnD,SAAuBK,GAElC,IAAMC,GACFC,QAAS,EAAG,+BAAgC,aAC5CC,QAAS,EAAG,aAAc,eAC1BC,OAAQ,EAAG,UAAW,YACtBC,IAAK,EAAG,iBAAkB,oBAC1BC,IAAK,EAAG,qBAAsB,yBAC9BC,KAAM,EAAG,mCAAoC,uBAC7CC,MAAO,EAAG,QAAS,UACnBC,GAAI,EAAG,GAAI,KAGTC,EAAOV,EAAUlI,QAAQ,aAAc,IACzCzH,EAAOjE,OAAOuQ,SAASgE,cAAc,OACrClU,SAEJwT,EAAQW,SAAWX,EAAQC,OAC3BD,EAAQY,MAAQZ,EAAQa,MAAQb,EAAQc,SAAWd,EAAQe,QAAUf,EAAQG,MAC7EH,EAAQgB,GAAKhB,EAAQK,GAErB,IAAMY,EAAK,YAAYvO,KAAK+N,GACtBS,EAAWD,GAAMjB,EAAQiB,EAAG,KAAQjB,EAAQQ,EAMlD,IAJApQ,EAAK+Q,UAAYD,EAAQ,GAAKT,EAAOS,EAAQ,GAE7C1U,EAAI0U,EAAQ,GAEL1U,GACHA,GAAK,EACL4D,EAAOA,EAAKgR,SAAS,GAGzB,OAAOhR,EAAKiR,oDC7BDnU,OAAOuI,IAFH,SAAC6L,EAAIC,GAAL,OAAmB,IAAPD,GAAmB,IAAPC,EAAW,EAAID,GAAO,EAAIC,EAAKD,GAAOA,GAAMC,GAAOA,GAAMD,IAAOC,yCCHxF,GAAAtU,EAAAQ,EACI,GAAAjB,EAAAiB,EACK,GAAAuG,EAAAvG,EACZ,GAAAZ,EAAAY,EACM,GAGtB,SAAS+T,EAATxR,GAKG,IAJCpC,EAIDoC,EAJCpC,OACAiH,EAGD7E,EAHC6E,QACA1E,EAEDH,EAFCG,IACA6E,EACDhF,EADCgF,SAEA,OAAO,SAAsBxH,GAEzB,OAAOwH,EAASrI,KAAKiB,EAAQJ,EAAOqH,EAAQrH,MAAO2C,EAAKvC,cAKjD,SAAS6T,EAAQ7T,EAAQ8T,EAAW1M,GAE/CP,EAAgB7G,EAAQ,WAExB,IAAM+T,EAAcD,aAAqBvS,MAGzC,GAAyB,iBAAduS,IAA2BC,EAAa,SACfjN,EAARC,EADuBtB,EACnCqO,EADmCzO,EAAA/F,OAAAgG,KAAAG,GAAAF,EAAA,EAAAI,EAAAN,EAAA/D,OACvByF,EADuBtB,EACfqB,EADezB,EAAAE,MAAAI,EAAAJ,IACJsO,EAAQ7T,EAAQ8G,EAAQC,GACnE,OAAO/G,EAGX0J,EAAO1J,GAZkD,IAezD,IAEoBuC,EAjBqC6C,EAe5C2O,EAAcD,GAAaA,GAfiBpO,EAAA,EAAAF,EAAAJ,EAAA9D,OAiBrCiB,EAjBqC6C,EAAAM,KAAAF,EAAAE,IAiB7B,CAExB,GAAmB,iBAARnD,EACP,MAAMvB,EAAU,oBAAsBuB,QAG1C,IAAM0E,EAAU+C,EAAWhK,EAAQuC,GAE7ByR,EAAe/M,EAAQG,SAAWwM,GACpC5T,SACAiH,UACA1E,MACA6E,aAIJ3G,EAAIT,EAAQuC,EAAKyR,EAAa/M,EAAQrH,QAClC2H,kBAIR,OAAOvH,yCC1DY,IAAAX,EAAAQ,EACA,GAAAjB,EAAAiB,EACI,GAAAuG,EAAAvG,EACV,GAAAZ,EAAAY,EACW,GAAAQ,EAAAR,EACN,GAAArB,EAAAN,QAIP,SAAgB8B,EAAQiU,EAAUrN,GAE7CC,EAAgB7G,EAAQ,UAExB4G,EAAeA,MAMf,IALA,IAAMzF,EAAMC,EAAK1B,IAAIM,GACb0H,EAAWd,EAAXc,OAEFpC,EAAO2O,aAAoB1S,MAAQ0S,GAAYA,GARMC,EAAA,SAUlDtV,GACL,IAAM2D,EAAM+C,EAAK1G,GAGjB,GAAmB,iBAAR2D,EACP,MAAMvB,EAAU,mBAAqBuB,QAGzC,IAAMyE,EAAQ7F,GAAOA,EAAI6F,MACnBC,EAAUD,GAASA,EAAMzE,GAG/B,IAAK0E,EAED,cADOjH,EAAOuC,GACd,WAxBmD,IA2B/C3C,EAAUqH,EAAVrH,MAGR2K,EAAWvK,EAAQuC,GA9BoC,IAiCvD,IAYiC4R,EA7CsB1O,GAkCnD,eACA,mBACA,oBACA,eACA,SACA,eACA,OACA,UAzCmDC,EAAA,EAAAC,EAAAF,EAAAnE,OA6CtB6S,EA7CsB1O,EAAAC,KAAAC,EAAAD,IA6CZwI,EAAelO,EAAWmU,EAA1B,IAAoC5R,UAGxEyE,EAAMzE,UAGNvC,EAAOuC,GAnDyC,IAAA8C,EAAAG,EAAAD,EAAAyC,EAAAC,EAAAE,KAAA,IAAAA,EAsDnD5F,MAtDmD4F,EAuDnDvI,QAvDmDoI,EAwDhDpB,EAxDgDpB,GAAAH,EAAA/F,OAAAgG,KAAA0C,IAAA1G,OAAAiE,EAAA,EAAAA,EAAAC,EAAAD,IAAA4C,EAAAF,EAAA5C,EAAAE,IAAAyC,EAAAC,GAqDvD,IAAMI,IAONpH,EAAWjB,EAAQ,oBAAqBqI,GAGnCX,IACDzG,EAAWjB,EAAQ,SAAUqI,GAC7BpH,EAAWjB,EAAX,UAA6BuC,EAAO8F,KAvDnCzJ,EAAI,EAAGA,EAAI0G,EAAKhE,OAAQ1C,IAAKsV,EAA7BtV,0CCnBQ,IAAAJ,EAAAN,QAGN,WAIX,OADAmR,EAASE,yBACFF,EAASzN,MAAMwI,KAAMX,kDCPf,GAAApK,EAAAQ,EACW,GAAArB,EAAAN,QAGb,SAAe8B,EAAQuC,GAA+B,IAAxB6R,GAAwB3K,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,IAAd2K,SAAVA,IAKzC,GAHAvN,EAAgB7G,EAAQ,UAGnBuC,EACD,OAAO6R,KAAW,KAGtB,IACMnN,EADM7F,EAAK1B,IAAIM,GACDgH,MAAMzE,GAEtB4M,SAEJ,GAAIlI,EAAS,KACDkC,EAAalC,EAAbkC,SACRgG,EAAShG,GAAYA,EAASkL,IAAI,SAAA/R,GAAA,OAAAA,EAAGE,gBAErC2M,KAGJ,OAAOiF,EAAMjF,EAAQA,EAAM,IAAM,gBAAA3Q,EAAA8B,EAAAT,GAAA,aAAArB,EAAAN,QCxBtB,SAAAkE,GAKZ,IAJCI,EAIDJ,EAJCI,KACAyE,EAGD7E,EAHC6E,QACAqI,EAEDlN,EAFCkN,OACAgF,EACDlS,EADCkS,eAEA,OAAO,WAA0C,IAAnB1N,EAAmB6C,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,MACrC7J,EAAUqH,EAAVrH,MACA2U,EAAkD3N,EAAlD2N,cAAeC,EAAmC5N,EAAnC4N,YAAqBC,EAAc7N,EAAtB0I,OAC5BhF,EAAagF,EAAbhF,SAMR,GAAIkK,IAAgBhS,GAAQ+R,KAJa,WAAlBA,GAA+C,iBAAV3U,EAArC,GACdA,EAAUA,IAG6C6U,IAAcnF,EAA9E,CAT6C,IAAAjK,EAAAM,EAAAJ,EAAAyC,EAAAC,EAAAE,KAAA,IAAAA,EAczCvI,QAdyCoI,EAetCsM,EAfsC3O,GAAAN,EAAA/F,OAAAgG,KAAA0C,IAAA1G,OAAAiE,EAAA,EAAAA,EAAAI,EAAAJ,IAAA4C,EAAAF,EAAA5C,EAAAE,IAAAyC,EAAAC,GAa7CqC,EAASvL,KAAKyD,EAAM5C,EAApBuI,4CCpBO,IAAA9I,EAAAQ,EACC,GAAArB,EAAAN,QAGD,SAAAkE,GAOZ,IANCpC,EAMDoC,EANCpC,OACAuC,EAKDH,EALCG,IACAC,EAIDJ,EAJCI,KACAyE,EAGD7E,EAHC6E,QACAqI,EAEDlN,EAFCkN,OACAgF,EACDlS,EADCkS,eAEA,OAAO,SAASI,IAA2B,IAAfC,EAAelL,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,MAIvC,IAAIiL,EAAYE,SAAhB,CAIA,IARuCvP,EAAAM,EAAAJ,EAAAyC,EAAAC,EAQjCd,EAAgBF,EAAQrH,MAE1BiV,EACAF,EADAE,MAAOhS,EACP8R,EADO9R,OAAQiS,EACfH,EADeG,QAASC,EACxBJ,EADwBI,OAEpB5K,EAAamF,EAAbnF,SAZ+BhC,KAAA,IAAAA,EAcnChB,gBAdmCgB,EAenCwM,WAfmCxM,EAgBnC6M,cAAeL,EAASK,eAAiBL,EAhBNxM,EAkBnC8M,eAAgB,kBAAMN,EAASM,kBAlBI9M,EAoBnC+M,gBAAiB,kBAAMP,EAASO,mBApBG/M,EAqBnC0M,QArBmC1M,EAsBnCtF,SAtBmCsF,EAuBnC2M,UAvBmC3M,EAwBnC4M,SAxBmC/M,EAyBhCsM,EAzBgC3O,GAAAN,EAAA/F,OAAAgG,KAAA0C,IAAA1G,OAAAiE,EAAA,EAAAA,EAAAI,EAAAJ,IAAA4C,EAAAF,EAAA5C,EAAAE,IAAAyC,EAAAC,GAavC,IAAMrI,EAAQuK,EAASpL,KAAKyD,EAAd2F,GAeTN,EAAGjI,EAAOuH,IACX1G,EAAIT,EAAQuC,EAAK3C,GACbuV,YAGAX,YAAahS,EACb+R,cAAe3U,EACf0P,sDC9CD,WACX,OACI7I,GAAI,KACJ0D,SAFG,WAGC,OAAOC,KAAKxK,OAASwK,KAAKgL,aAE9B9K,SALG,SAKM1K,GAELwK,KADiB,SAAUA,KAAO,QAAU,eACjB,OAAVxK,EAAiB,GAAjB,GAAyBA,2CCTpC,IAAApB,EAAAN,QAGH,WACX,OAAOmX,6CCHI,SAAgBC,GAC3B,OAAIA,GAEI7O,GAAI,SACJ0D,SAFG,WAMC,IAJO,IACCoL,EAAYnL,KAAZmL,QACF9G,KAEG7P,EAAI,EAAG2W,EAAQjU,OAAS1C,EAAGA,IAC5B2W,EAAQ3W,GAAG4W,UACX/G,EAAOtI,KAAKoP,EAAQ3W,GAAGgB,OAI/B,OAAO6O,GAEXnE,SAdG,SAcMmL,GAGL,IAHiB,IACTF,EAAYnL,KAAZmL,QACF3V,EAA8B,iBAAf6V,GAA2BA,GAAcA,EACrD7W,EAAI2W,EAAQjU,OAAS,EAAG1C,GAAK,EAAGA,IACrC2W,EAAQ3W,GAAG4W,UAAY5V,EAAM8V,QAAQH,EAAQ3W,GAAGgB,UAO5D6G,GAAI,SACJ0D,SAFG,WAGC,OAAOC,KAAKxK,OAEhB0K,SALG,SAKM1K,GAGL,GAFAwK,KAAKxK,MAAQA,GAERA,EAED,IAFQ,IACA2V,EAAYnL,KAAZmL,QACC3W,EAAI2W,EAAQjU,OAAS,EAAG1C,GAAK,EAAGA,IACrC,IAAK2W,EAAQ3W,GAAGgB,MAAO,CACnB2V,EAAQ3W,GAAG4W,YACX,oBAAAhX,EAAA8B,EAAAT,GAAA,iBAAAF,EAAAE,ECxCN,IAAArB,EAAAN,QAGH,WAEX,OAAOmX,EAAM,mBAAA7W,EAAA8B,EAAAT,GAAA,iBAAAF,EAAAE,ECLC,IAAAR,EAAAQ,EACG,IAAAjB,EAAAiB,EACF,IAAAuG,EAAAvG,EACE,IAAAZ,EAAAY,EACF,IAAArB,EAAAN,SAGH,SAACsE,GACb,OAAQA,EAAKmT,SACT,IAAK,QACD,OAAON,EAAM7S,EAAK0H,MACtB,IAAK,WACD,OAAO0L,IACX,IAAK,SACD,OAAOC,EAAOrT,EAAK8S,UACvB,IAAK,WACD,OAAOQ,IACX,IAAK,SACD,OAAOC,IACX,QACI,OAAO,kBAAAvX,EAAA8B,EAAAT,GAAA,iBAAAF,EAAAE,ECpBQ,IAAArB,EAAAN,QAGZ,SAAuBsE,GAClC,IAAK,IAAI5D,EAAI,EAAGA,EAAIoX,EAAe1U,OAAQ1C,IAAK,CAC5C,IAAM0Q,EAAS0G,EAAepX,GAAGG,KAAKyD,EAAMA,GAC5C,GAAI8M,EACA,OAAOA,KAIf,SAAA9Q,EAAA8B,EAAAT,GAAA,iBAAAF,EAAAE,ECXsB,IAAAR,EAAAQ,EACI,IAAAjB,EAAAiB,EACE,IAAAuG,EAAAvG,EACT,GAAAZ,EAAAY,EACC,GAAAQ,EAAAR,EACH,IAEfoW,EAAW,MAAAzX,EAAAN,QAIF,SAAwB8B,EAAxBoC,GAOZ,IANS8T,EAMT9T,EANCkN,OACA/M,EAKDH,EALCG,IACAoO,EAIDvO,EAJCuO,OACAnO,EAGDJ,EAHCI,KACAoE,EAEDxE,EAFCwE,aACAK,EACD7E,EADC6E,QAGIS,EAYAd,EAZAc,OACAyO,EAWAvP,EAXAuP,eACAC,EAUAxP,EAVAwP,eAJLC,EAcKzP,EAPA0P,4BAPLD,KAAAE,EAcK3P,EANA4P,4BARLD,KAAAE,EAcK7P,EALA8P,kCATLD,KAAAE,EAcK/P,EAJAgQ,kCAVLD,KAAAE,EAcKjQ,EAHAkQ,iCAXLD,EAW6B,EAX7BA,EAAAE,EAcKnQ,EAFAoQ,iCAZLD,EAY6B,EAZ7BA,EAAAE,EAcKrQ,EADAsQ,0BAbLD,KAgBO9N,EAAWlC,EAAQkC,SAAWlC,EAAQkC,aACpCvJ,EAAUqH,EAAVrH,MACF0U,GACFlM,KAAMpI,EACNuC,MACA3C,QACA+Q,SACAnO,QAEA2U,WAAqBvX,EACrB0P,SACA8H,SACA1C,SAGJ,GAAoB,OAAhBwB,EAGA,GAAIgB,EACA5H,EAAS4G,MACN,CAEH,IAAMmB,EAAcC,EAAc9U,GAGlC,GAAI6U,EAAa,CAEb,GAAInB,EAAa,QAAArL,EAAA1C,EACDkP,EADCvM,EACYoL,EADZpO,EAAAxI,OAAAgG,KAAAwF,GAAAtF,EAAAsC,EAAAxG,OAAAyG,EAAA,EAAAA,EAAAvC,EAAAuC,IAAAI,EAAA0C,EAAA/C,EAAAC,IAAA+C,EAAAD,GAIjByE,EAAS+H,OAGT/H,EAAS4G,MAlDtB,IAAAqB,EAyDKjI,EADAnF,EAxDLoN,EAwDKpN,SAAUG,EAxDfiN,EAwDejN,SAAU7D,EAxDzB8Q,EAwDyB9Q,GAAI+Q,EAxD7BD,EAwD6BC,WAS5B,GALIA,GACAA,EAAWzY,KAAKyD,EAAM8R,GAItBnK,EAAU,CACV,IAAMsN,EAAkBC,GACpB1X,SACAuC,MACAC,OACAyE,UACAqI,SACAgF,mBAGAqD,SAaJ,IAXInB,GAAoBI,KACpBe,EAAuBC,EAASH,EAAiBT,IAIjDtC,EADA8B,EACcmB,EAEAF,EAIA,mBAAPhR,EACPA,EAAG1H,KAAKyD,EAAMkS,EAAaJ,QACxB,GAAkB,iBAAP7N,EAAiB,QAI3BoR,EAJ2BpS,GAG3BgB,EAAG6F,MAAM2J,GAHkBvQ,GAAA,EAAAK,GAAAN,GAAAnE,OAI3BuW,EAJ2BpS,GAAAC,OAAAK,GAAAL,KAIhBlD,EAAKsV,iBAAiBD,EAASnD,IAI7CyC,QAAehB,QAA6BA,KACzCS,EACAe,IAEAF,KAIRN,WAAqBlQ,EAAQrH,MAIjC,GAAI0K,EAAU,CACV,IAAMyN,GAAoBC,GACtBxV,OACAyE,UACAqI,SACAgF,iBACA1N,iBAGAqR,WAEA3B,GAAoBI,KACpBuB,GAAyBL,EAASG,GAAmBjB,IAUzD1I,EAAYpO,EAAZ,oBAAwCuC,EANpC6U,EADAd,EACgB2B,GAEAF,GAI0C,MAAQnO,kBAEhEuN,QAAef,QAA6BA,KAC1CM,EACAuB,KAEAF,MAgBZ,GAVA5O,EAAShD,MACLM,KACAjE,OACA8M,SACA8H,gBACA1C,cACAJ,oBAIC5M,EAAQ,KAAAmI,GAAAC,GAAAC,GAAAH,GAAAD,GAAA3E,MAAA,IAAAA,GAELzI,MAFKyI,GAGLxI,OAHKoN,GAIFhJ,EAJEkJ,IAAAD,GAAAvQ,OAAAgG,KAAAsK,KAAAtO,OAAAyO,GAAA,EAAAA,GAAAD,GAAAC,KAAA/E,GAAA2E,GAAAE,GAAAE,KAAAH,GAAAD,IACT,IAAMtH,MAMNpH,EAAWjB,EAAX,QAA2BuC,EAAO8F,IAClCpH,EAAWjB,EAAQ,OAAQqI,4CCpLR,GAAAhJ,EAAAQ,EACJ,GAEjBoW,EAAW,MAAAzX,EAAAN,QAIF,SAAAkE,GAKZ,IAJCpC,EAIDoC,EAJCpC,OACAuC,EAGDH,EAHCG,IACAqE,EAEDxE,EAFCwE,aACAiG,EACDzK,EADCyK,QAGIyH,EAKAzH,EALAyH,eACAhF,EAIAzC,EAJAyC,OACA9M,EAGAqK,EAHArK,KACAkS,EAEA7H,EAFA6H,YACA0C,EACAvK,EADAuK,cAEIc,EAAgB5I,EAAhB4I,QAASzR,EAAO6I,EAAP7I,GACTiB,EAAWd,EAAXc,OAKR,GAAkB,mBAAPjB,EACPiO,EAAYE,iBACT,GAAkB,iBAAPnO,EAAiB,QAK3BoR,EAL2BpS,EAI3BgB,EAAG6F,MAAM2J,GAJkBvQ,EAAA,EAAAC,EAAAF,EAAAnE,OAK3BuW,EAL2BpS,EAAAC,KAAAC,EAAAD,IAKhBlD,EAAK2V,oBAAoBN,EAASnD,GAarD,GARAxG,EAAelO,EAAf,oBAA2CuC,EAAO6U,GAG9Cc,GACAA,EAAQnZ,KAAKyD,EAAM8R,IAIlB5M,EAAQ,KAAArC,EAAAG,EAAAD,EAAAyC,EAAAC,EAAAE,KAAA,IAAAA,EAEL5F,MAFK4F,EAGL3F,OAHKwF,EAIFpB,EAJEpB,GAAAH,EAAA/F,OAAAgG,KAAA0C,IAAA1G,OAAAiE,EAAA,EAAAA,EAAAC,EAAAD,IAAA4C,EAAAF,EAAA5C,EAAAE,IAAAyC,EAAAC,GACT,IAAMI,IAMNpH,EAAWjB,EAAX,UAA6BuC,EAAO8F,GACpCpH,EAAWjB,EAAQ,SAAUqI,2CCtDd,IAAA7J,EAAAN,QAMR,SAAAkE,GAOZ,IANCpC,EAMDoC,EANCpC,OACAqM,EAKDjK,EALCiK,SACAsE,EAIDvO,EAJCuO,OACArB,EAGDlN,EAHCkN,OACA1I,EAEDxE,EAFCwE,aACAyI,EACDjN,EADCiN,SAEA,OAAO,WAA2C,IAAlBiC,EAAkB7H,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,MACxC8C,EAAiBF,EAAS/K,OAC1B8W,EAAmB/L,EAASE,EAAiB,GAE/C3M,EAGA0R,EAHA1R,MACAuH,EAEAmK,EAFAnK,cACAiK,EACAE,EADAF,SAEAvO,SACAwV,SAGJ,GAAIzY,GAA0B,iBAAVA,GAAsBwR,EAAU,CAEhDvO,EAASjD,EACT,IAAK,IAAIhB,EAAI,EAAGA,EAAIwS,EAAS9P,SACzBuB,EAASA,EAAOuO,EAASxS,KADQA,UAMlC,CAEHiE,EAAS7C,EACT,IAAK,IAAIpB,EAAI,EAAGA,EAAI2N,EAAiB,IACjC1J,EAASA,EAAOwJ,EAASzN,KADWA,MAS5C,GAAIuI,GAA0C,iBAAlBA,GAA8BiK,EAAU,CAChEiH,EAAiBlR,EACjB,IAAK,IAAIvI,EAAI,EAAGA,EAAIwS,EAAS9P,SACzB+W,EAAiBA,EAAejH,EAASxS,KADRA,MASrCiE,GAA4B,iBAAXA,GACjBwM,EAASxM,EAAQuV,EAAkBzH,EAAQrB,EAAQ1I,GAInDyR,GAA4C,iBAAnBA,GACzB9N,EAAW8N,EAAgBD,EAAkBzH,6CC/D1C,SAAiB3Q,GAI5B,IAJ+C,IAAXsY,EAAW7O,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,GAAH,EACpCnI,EAAWtB,EAAXsB,OACFiX,EAAQhX,MAAMD,GAEX1C,EAAI0Z,EAAO1Z,EAAI0C,EAAQ1C,IAC5B2Z,EAAM3Z,EAAI0Z,GAAStY,EAAOpB,GAG9B,OAAO2Z,yCCTM,GAAAlZ,EAAAQ,EACG,IAAAjB,EAAAiB,EACN,GAERmP,EAAoB,sCACpBwJ,EAAgBC,KAAKC,SAASC,WAAW1O,QAAQ,KAAM,KAAvD,IAAAzL,EAAAN,QAIS,SAAqB8B,EAAQ4Y,GAAe,QAK9B5T,EAJjBgC,EAAU5F,EAAK1B,IAAIM,GAAnBgH,MACF6R,EAAYD,EAActM,MAAM,KAClCmC,EAASS,IAH0C3D,EAK1CsN,EAL0ChN,EAAA,EAAAiE,EAAAvE,EAAAjK,OAK9B0D,EAL8BuG,EAAAM,KAAAiE,EAAAjE,IAKjB,CAClC,IAAMiN,EAAa9J,EAAkBlK,KAAKE,GAC1C,GAAI8T,EAAY,CACZ,IAAMC,EAAWD,EAAW,GACtBE,EAAcF,EAAW,GACzB7R,EAAUD,EAAM+R,GAEtB,GAAI9R,EAAS,KACDkC,EAAalC,EAAbkC,SACR,GAAIA,EAAU,KACV,IACwB0D,EADlBoM,EAAa1X,MAAM4H,EAAS7H,QADxBmE,EAEG0D,EAAoBvK,EAFvB,EAAA+G,EAAAF,EAAAnE,OAEcuL,EAFdpH,EAEuB7G,KAFvB+G,EAEuB/G,IAC7Bqa,EAAWra,GAAKiO,EAAQrK,KAK5B,GAAIwW,EAGA,GAAiC,IAA7BA,EAAYtD,QAAQ,KAAY,QAAAtQ,EAEnB6T,EAFmBvT,EAAA,EAAAF,EAAAJ,EAAA9D,OAENkB,EAFM4C,EAAAM,KAAAF,EAAAE,IAEG,CAC/BlD,EAAK0W,aAAaV,EAAYA,GAC9B,IAAMhD,EAAWhT,EAAKqM,iBAAL,IAA0B2J,EAA1B,KAAyCA,EAAzC,MAAyDQ,GAC1EvK,EAASA,EAAO9H,IAAIwS,EAAQ3D,IAC5BhT,EAAK4W,gBAAgBZ,QAEtB,QAEuBhW,EAFvBqD,EAEUoT,EAFVnT,EAAA,EAAAC,EAAAF,EAAAvE,OAEuBkB,EAFvBqD,EAAAC,KAAAC,EAAAD,IAEgC,CACzB0P,EAAWhT,EAAKqM,iBAAiBmK,GACvCvK,EAASA,EAAO9H,IAAIwS,EAAQ3D,SAKpC/G,EAASA,EAAO9H,IAAIsS,UAMhCxK,EAASA,EAAO9H,IAAI3B,GAI5B,OAAOyJ,2CC3DI,SAAkBjO,EAAKkN,GAIlC,IAHA,IAAM2L,EAA6B,iBAAd3L,EAAyBA,EAAUpB,MAAM,KAAOoB,EACjE4L,EAAU9Y,EAEL5B,EAAI,EAAGA,EAAIya,EAAM/X,SAAU1C,EAAG,CACnC,YAAW0a,EAAQD,EAAMza,IACrB,OAGJ0a,EAAUA,EAAQD,EAAMza,IAG5B,OAAO0a,yCCdK,GAAAja,EAAAQ,EACK,IAAArB,EAAAN,QAGN,SAAAkE,GAOZ,IANCpC,EAMDoC,EANCpC,OACA4G,EAKDxE,EALCwE,aACA2S,EAIDnX,EAJCmX,WACA1W,EAGDT,EAHCS,OACA1B,EAEDiB,EAFCjB,IACA8P,EACD7O,EADC6O,QAEA,OAAO,WAAuC,IAAA5L,EAAAM,EAAAJ,EAAAyC,EAAAC,EAAlBqJ,EAAkB7H,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,MACpC+P,KADoCC,EAEfnI,EAAnBoI,qBAFkCD,OAGpCE,EAAa9W,EAAS1B,EAAIoI,GACxBqQ,EAAgBhT,EAAhBgT,YAJkCzR,KAAA,IAAAA,EAMtCuR,YANsC1R,EAOnCpB,EAPmCjB,GAAAN,EAAA/F,OAAAgG,KAAA0C,IAAA1G,OAAAiE,EAAA,EAAAA,EAAAI,EAAAJ,IAAA4C,EAAAF,EAAA5C,EAAAE,IAAAyC,EAAAC,GAAA,IAAAD,EAQnCsJ,EARmC3L,GAAAN,EAAA/F,OAAAgG,KAAA0C,IAAA1G,OAAAiE,EAAA,EAAAA,EAAAI,EAAAJ,IAAA4C,EAAAF,EAAA5C,EAAAE,IAAAyC,EAAAC,GAK1C,IAAM4R,IAMN,KAAIF,KAAcD,GAAlB,CAIAA,EAAUC,MAfgC,QAAArX,EAAAmD,EAiB7B8T,EAjB6B7T,EAAA,EAAAF,EAAAC,EAAAnE,OAAAgB,EAAAmD,EAAAC,KAAAF,EAAAE,IAqBpC,KAHFtC,EAGEd,EAHFc,aACAH,EAEEX,EAFFW,UAGMrD,EADJ0C,EADFwX,YAE4BC,EAAS3W,EAAcH,GAAaG,EAAaH,GAC7EuW,EAAOrT,KAAKvG,GAGhB,IAAIoa,EAAc/I,EAAQrP,MAAM5B,EAAQwZ,GAEpCI,GACMI,aAAuBC,UACzBD,EAAcC,QAAQC,QAAQF,IAGlCA,EACKG,KAAK,SAAAC,GAAA,OAAiB3Z,EAAIT,EAAQ6C,EAAQuX,EAAeP,KACzDQ,MAAM,SAAC7b,GACJ,MAAM+F,MAAM/F,MAGpBiC,EAAIT,EAAQ6C,EAAQmX,EAAaH,4CCnDrB,GAAAxa,EAAAQ,EACI,IAAAjB,EAAAiB,EACN,GAAArB,EAAAN,QAGP,SAAAkE,GAMZ,IALCkY,EAKDlY,EALCkY,YACAf,EAIDnX,EAJCmX,WACAtW,EAGDb,EAHCa,UACAG,EAEDhB,EAFCgB,aAEDqN,EAAArO,EADCwE,aAEM8J,oBADPD,KAEKqJ,KAGJ,GAAyB,iBAAd7W,EACP,MAAMjC,EAAU,wBAA0BiC,cAI9C,IAAKG,GAAwC,iBAAjBA,EACxB,MAAMpC,EAAU,2BAA6BoC,iBAGjD,IAAKsN,EAAU,CACX,IAAMrE,EAAWpJ,EAAUqJ,MAAM,KAG7BD,EAAS/K,OAAS,GAClBwY,KAGAhJ,EAAgB1N,EAAciJ,EAAUiO,IAExC5J,KAKJA,GAEAtC,EAAYhL,EAAZ,gBAA0CH,EAAaqX,GAG3Df,EAAWpT,MACPlD,YACAG,eACA0W,uDChDW,GAAAza,EAAAQ,EACS,GAAAjB,EAAAiB,EACN,GAAAuG,EAAAvG,EACD,IAAAZ,EAAAY,EACC,IAAAQ,EAAAR,EACQ,IAAAhB,EAAAgB,EACP,GAAArB,EAAAN,QAGR,SAASqc,EAAKva,EAAQ6C,EAAQ2X,EAASC,EAAc7T,GAIhE,GAFAC,EAAgB7G,EAAQ,QAEpB6C,aAAkBvD,OAAQ,SASvBob,EATuBtY,EAAAqD,EAKd5C,EALc2I,EAAAlM,OAAAgG,KAAAG,GAAAgG,EAAA,EAAAN,EAAAK,EAAAlK,OAAAc,EAAAqD,EASvBiV,EATuBlP,EAAAC,MAAAN,EAAAM,IASR,KAHNkP,EAGMvY,EAHdmB,OACSqX,EAEKxY,EAFd6O,QACOtG,EACOvI,EADdZ,MAGMoJ,KAEN,GAH2B4P,EAGH,QAAA3P,EAAA1C,EAERyC,EAFQE,EAHG0P,EAGH1S,EAAAxI,OAAAgG,KAAAwF,GAAAtF,EAAAsC,EAAAxG,OAAAyG,EAAA,EAAAA,EAAAvC,EAAAuC,IAAAI,EAAA0C,EAAA/C,EAAAC,IAAA+C,EAAAD,GAKxB,GAAIF,EAAkB,QAAAI,EAAAC,EAENJ,EAFMK,EAEcN,EAFdO,EAAA5L,OAAAgG,KAAA2F,GAAA6E,EAAA5E,EAAA5J,OAAA8J,EAAA,EAAAA,EAAA0E,EAAA1E,IAAAJ,EAAAD,EAAAG,EAAAE,IAAAH,EAAAF,GAKtBwP,EAAKva,EAAQ0a,EAAYC,EAAYC,EAAahQ,GAGtD,OAAO5K,EAGX,GAAsB,iBAAX6C,EACP,MAAM7B,EAAU,oBAAsB6B,WAG1C+D,EAAeA,MACf,IAuBI0T,EAvBEnZ,EAAMuI,EAAO1J,GAtC2DqH,EA+C1ET,EA/C0EiU,EAAAxT,EAwC1EyT,qBAxC0ED,KAAAxE,EAAAhP,EAyC1E0T,8BAzC0E1E,KAAAE,EAAAlP,EA0C1E2T,wBA1C0EzE,KAAAE,EAAApP,EA2C1E4T,6BA3C0ExE,EA2CtD,EA3CsDA,EAAAyE,EAAA7T,EA8C1E8T,kCA9C0ED,KAkDxE3B,KACA6B,EAAkBC,GACpBrb,SACA4G,eACA2S,aACA1W,SACA1B,MACA8P,QARYwJ,GADO,SAAA7a,GAAA,OAASA,KAY5B0b,UAGAP,GAAsBC,KACtBM,EAAuB1D,EAASwD,EAAiBH,IAGrDjR,EAAWhK,EAAQ6C,EAAQsY,GAErBX,aAAmBjZ,QACrBiZ,GAAWA,IAIXF,EADAU,EACcM,EAEAF,EA5E4D,QA+EvD7X,EA/EuDsC,EA+EjE2U,EA/EiE1U,EAAA,EAAAgG,GAAAjG,EAAAvE,OA+EvDiC,EA/EuDsC,EAAAC,KAAAgG,GAAAhG,IAgF1E,GAAsB,iBAAXvC,EAEPgY,GACIjB,cACAf,aACAtW,UAAWM,EACXH,aAAcpD,EACd4G,qBAED,CAEH,IAAKrD,GAA4B,iBAAXA,EAClB,MAAMvC,EAAU,oBAAsBuC,WAG1C,IAAMN,GAAYM,EAAOhB,IACnBa,GAAeG,EAAOvD,OAC5B,GAAIiD,cAAqB1B,MAAO,QAEHia,GAFGpW,GAEfnC,GAFeyC,GAAA,EAAA+E,GAAArF,GAAA9D,OAEHka,GAFGpW,GAAAM,OAAA+E,GAAA/E,KAGxB6V,GACIjB,cACAf,aACAtW,UAAWuY,GACXpY,gBACAwD,sBAKR2U,GACIjB,cACAf,aACAtW,aACAG,gBACAwD,iBAchB,OARIkU,IACIC,EACAO,IAEAF,KAIDpb,2CCzII,SAAAoC,GAIZ,IAHCI,EAGDJ,EAHCI,KACAuC,EAED3C,EAFC2C,UACA7D,EACDkB,EADClB,YACDua,EAC6Bld,OAApBuQ,EADT2M,EACS3M,SAAU4M,EADnBD,EACmBC,MACdla,SAGAsN,EAAS6M,aAETna,EAAQsN,EAAS6M,YAAY,UACvBC,UAAU7W,MAAW,QAAM,IACnB2W,IACdla,EAAQ,IAAIka,EAAM3W,GACd8W,WACAC,iBAKRta,EAAMua,qBAAuB7a,EAE7BsB,EAAKwZ,cAAcxa,0CCxBQ,IAAAnC,EAAAQ,EACd,GAAArB,EAAAN,QAGF,SAAyB8B,EAAQuC,EAAKwC,EAAWC,EAAU9D,GACtE,IAAMC,EAAMC,EAAK1B,IAAIM,GAErB,GAAKmB,EAAL,CAHmF,IAQ7E8F,EADY9F,EAAV6F,MACczE,GAEtB,GAAK0E,EAAL,CAVmF,IAc3EkC,EAAalC,EAAbkC,SAER,GAAKA,EAhB8E,QAAA/G,EAAAgD,EAoBtE+D,EApBsErD,EAAA,EAAAN,EAAAJ,EAAA9D,OAAAc,EAAAgD,EAAAU,KAAAN,EAAAM,IAoB9C,KAAXtD,EAAWJ,EAAXI,KACtB,GAAIwC,EAAU,IAEV,IAC2BiX,EAHjBxW,EAEUjD,EAAKqM,iBAAiB7J,GAFhCU,EAAA,EAAAC,EAAAF,EAAAnE,OAGiB2a,EAHjBxW,EAAAC,KAAAC,EAAAD,IAINwW,GACI1Z,KAAMyZ,EACNlX,YACA7D,qBAKRgb,GACI1Z,OACAuC,YACA7D,0DCxCQ,IAAA7B,EAAAQ,EACI,GAAAjB,EAAAiB,EACN,GAAAuG,EAAAvG,EACM,IAAAZ,EAAAY,EACX,GAAAQ,EAAAR,EACM,GAAAhB,EAAAgB,EACK,IAAArB,EAAAN,QAGb,SAAiB8B,EAAQmc,GAA4B,QAAAC,EAAA3S,UAAAnI,OAAbJ,EAAaK,MAAA6a,EAAA,EAAAA,EAAA,KAAAnU,EAAA,EAAAA,EAAAmU,EAAAnU,IAAb/G,EAAa+G,EAAA,GAAAwB,UAAAxB,GAEhEpB,EAAgB7G,EAAQ,WACxB,IAAI0D,EAGJ,GAA0B,iBAAfyY,EAGP,MAAMnb,EAAU,sBAAwB0C,MAAOyY,IAF/CzY,EAAQyY,EAAW7P,MAAM+P,GAK7B,IAAMlb,EAAMC,EAAK1B,IAAIM,GAGrB,IAAKmB,EACD,OAAOnB,EAKX,IAF8BmB,EAAtBE,OAGJ,OAAOrB,EAtBqD,QAyB3Cb,EAzB2CsG,EAyBnD/B,EAzBmDgC,EAAA,EAAAC,EAAAF,EAAAnE,OAyB3CnC,EAzB2CsG,EAAAC,KAAAC,EAAAD,IAyBlC,CAC1B,IAAM4W,EAAmBzX,EAAYC,KAAK3F,GAE1C,GAAImd,EAAkB,KAETvX,EAA4BuX,EAFnB,GAEE/Z,EAAiB+Z,EAFnB,GAEOtX,EAAYsX,EAFnB,GAGlBC,EAAgBvc,EAAQuC,EAAKwC,EAAWC,EAAU9D,QAGlDD,EAAWjB,EAAQb,EAAM+B,GAIjC,OAAOlB,yCC/CiB,IAAAX,EAAAQ,EACA,GAAAjB,EAAAiB,EACX,GAAAuG,EAAAvG,EACU,GAAAZ,EAAAY,EACI,IAAAQ,EAAAR,EACjB,GAAArB,EAAAN,QAGC,SAASwI,EAAI1G,EAAQmc,EAAYza,EAAU8C,GAEtDqC,EAAgB7G,EAAQ,OAExB,IAAMwc,EAAkBL,aAAsB5a,MACxCJ,EAAMC,EAAK1B,IAAIM,GAIrB,GAAImc,GAAoC,iBAAfA,IAA4BK,EAAiB,SACvBC,EAAlBC,EADyCjX,EACtD0W,EADsD9W,EAAA/F,OAAAgG,KAAAG,GAAAF,EAAA,EAAAI,EAAAN,EAAA/D,OACzCob,EADyCjX,EACvBgX,EADuBpX,EAAAE,MAAAI,EAAAJ,IAE9DmB,EAAI1G,EAAQyc,EAAcC,EAAkBhb,GAChD,OAAO1B,EAIX,IAAKmc,IAAeza,IAAa8C,EAAS,CACtCrD,EAAIE,UADkC,QAGAsb,EAHAva,EAAAyD,EAG1B1E,EAAI6F,MAHsBc,EAAAxI,OAAAgG,KAAAO,GAAAkC,EAAA,EAAAhC,EAAA+B,EAAAxG,OAAAc,EAAAyD,EAGA8W,EAHA7U,EAAAC,MAAAhC,EAAAgC,IAGa,KAAzBoB,EAAyB/G,EAAzB+G,SACtB,GAAIA,EAAU,QAAA7G,EAAA8C,EACG+D,EADHzD,EAAA,EAAAF,EAAAJ,EAAA9D,OAAAgB,EAAA8C,EAAAM,KAAAF,EAAAE,IAC2B,KAAXlD,EAAWF,EAAXE,KAChBoa,EAAiBzb,EAAIoI,GAAKoT,EAChCzN,EAAE1M,GAAMkE,IAAR,IAAgBkW,IAK5B,OAAO5c,EA5BoD,IAiC/D,IAEqBb,EAnC0CoM,EAiCjDiR,EAAkBL,EAAaA,EAAW7P,MAAM+P,GAjCCvW,EAAA,EAAAgK,EAAAvE,EAAAjK,OAmC1CnC,EAnC0CoM,EAAAzF,KAAAgK,EAAAhK,IAmCjC,CAC1B,IAAM+W,EAAsB1d,EAAKmN,MAAM,KACvC,GAAIuQ,EAAoBvb,OAAS,EAAG,KACzBqM,EAAuBkP,EADE,GACnBC,EAAiBD,EADE,GAEhCpP,EAAmBzN,EAAQ2N,EAAMmP,EAAepb,EAAU8C,QAE1D0J,EAAelO,EAAQb,EAAMuC,EAAU8C,GAI/C,OAAOxE,yCCrDM,GAAAX,EAAAQ,EACU,GAAAjB,EAAAiB,EACb,GAAArB,EAAAN,QAGC,SACX8B,EACAuC,EACAwC,EACAC,EACAtD,EACA8C,EACA3C,GAEA,IAAMV,EAAMC,EAAK1B,IAAIM,GAErB,IAAKmB,EACD,OAAOnB,EAJb,IAQQiH,EADY9F,EAAV6F,MACczE,GAEtB,IAAK0E,EACD,OAAOjH,EAXb,IAcUmJ,EAAalC,EAAbkC,SAER,GAAIA,EAAU,KAEV,IAGwB0D,EAHlBsC,EAAQ5N,MAAM4H,EAAS7H,QACvBsb,EAAiBzb,EAAIoI,GAAKhH,EAHtBkD,EAKG0D,EAAoB4T,EALvB,EAAApX,EAAAF,EAAAnE,OAKcuL,EALdpH,EAKuBsX,KALvBpX,EAKuBoX,IAC7B5N,EAAM4N,GAASlQ,EAAQrK,KAG3B0M,EAAEC,GAAOzI,IAAO3B,EAAhB,IAA6B6X,EAAkB5X,EAAUtD,GAO7D,OAHAwM,EAAelO,EAAf,QAA+BuC,EAAOb,EAAU8C,EAAS3C,GACzDqM,EAAelO,EAAf,UAAiCuC,EAAOb,EAAU8C,EAAS3C,GAEpD7B,yCC7CoB,IAAAX,EAAAQ,EACR,GAAArB,EAAAN,QAKR,SAAAkE,GASgC,IAR3C+E,EAQ2C/E,EAR3C+E,cACAvH,EAO2CwC,EAP3CxC,MAO2C0C,EAAAmH,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,GAA3CxI,EAAWQ,YAAYI,KAAKsM,cAL5BR,EAK2CrL,EAL3CqL,KACAxO,EAI2CmD,EAJ3CnD,KACAuC,EAG2CY,EAH3CZ,SACA8C,EAE2ClC,EAF3CkC,QACA3C,EAC2CS,EAD3CT,KAEIjC,GAA0B,iBAAVA,GACSlB,EAAQ,GAEjC+S,CAAiB7R,EAAO+N,EAAMxO,EAAMuC,EAAU8C,EAAS3C,GAGvDsF,GAA0C,iBAAlBA,GACxBsG,EAAmBtG,EAAewG,EAAMxO,EAAMuC,EAAU8C,EAAS3C,4CCtB1D,SAAAO,GAKZ,IAJCG,EAIDH,EAJCG,IACAvC,EAGDoC,EAHCpC,OACA0B,EAEDU,EAFCV,SACA8C,EACDpC,EADCoC,QAEA,OAAO,SAAyBmQ,GAC5B,IAAMK,EAAgBL,EAASK,eAAiBL,EAE1CzT,EAAc8T,EAAc+G,qBAE9BlH,EACAF,EADAE,MAAOhS,EACP8R,EADO9R,OAAQiS,EACfH,EADeG,QAASC,EACxBJ,EADwBI,OAGxB7T,EAEAQ,EAASE,MAAM4C,EAAStD,GAGxBQ,EAAS3C,KAAKyF,GACV4D,KAAMpI,EACNwC,KAAM4H,KACN6K,eAAgB,kBAAMN,EAASM,kBAC/BC,gBAAiB,kBAAMP,EAASO,mBAChC3S,MACAoS,WACAK,gBACAH,QACAhS,SACAiS,UACAC,2CC7BhB,IAAMvO,EAASlH,OAAOkH,QAAU,SAAgB3D,GAE5C,YAAIA,GAAmC,OAAXA,EACxB,MAAM,IAAIma,UAAU,qCAKxB,IAFA,IAAMjH,EAASzW,OAAOuD,GAEbka,EAAQ,EAAGA,EAAQtT,UAAUnI,OAAQyb,IAAS,CACnD,IAAMxZ,EAASkG,UAAUsT,GACzB,YAAIxZ,GAAmC,OAAXA,EAAiB,QACT0Z,EAAXC,EADoBzX,EAC7BlC,EAD6B8B,EAAA/F,OAAAgG,KAAAG,GAAAF,EAAA,EAAAI,EAAAN,EAAA/D,OACpB4b,EADoBzX,EACTwX,EADS5X,EAAAE,MAAAI,EAAAJ,IAErCwQ,EAAOkH,GAAWC,EAK9B,OAAOnH,aAGIvP,wCCtBE,IAAAnH,EAAAQ,EACA,IAAArB,EAAAN,QAGF,SAAa8G,GACxB,IAAMmY,KAEF1O,SAEEU,EAAQ,IAAI7I,EAAKtB,GAEvB,GAAIoF,KAAK9I,OAAQ,CACbmN,EAAS,IAAInI,EACb,IAAK,IAAI1H,EAAI,EAAGA,EAAIwL,KAAK9I,OAAQ1C,IAAK,CAClC,IAAM4D,EAAO4H,KAAKxL,GAElBue,EADe3a,EAAK4a,GAAK5a,EAAK4a,MAAQ1c,EAAK4N,WAC3B,EAChBG,EAAOtI,KAAK3D,GAGhB,IAAK,IAAI5D,EAAI,EAAGA,EAAIuQ,EAAM7N,OAAQ1C,IAAK,CACnC,IAAM4D,EAAO2M,EAAMvQ,GACbye,EAAS7a,EAAK4a,GAAK5a,EAAK4a,MAAQ1c,EAAK4N,UACtC6O,EAAME,KACPF,EAAME,GAAU,EAChB5O,EAAOtI,KAAK3D,UAIpBiM,EAASU,EAGb,OAAOV,yCChCM,IAEX4N,EAAkB,MAClBiB,EAAgB,SAAA9e,EAAAN,QAGP,SAAaqf,EAAUvY,EAAUiM,GACpB,mBAAbjM,IACPiM,EAAUjM,EACVA,EAAW,MAKf,IAFA,IAAMtB,EAAQ6Z,EAASjR,MAAM+P,GAEpBzd,EAAI,EAAGA,EAAI8E,EAAMpC,OAAQ1C,IAG9B,IAHmC,IAAA4e,EACT9Z,EAAM9E,GAAG0N,MAAMgR,GAAlCne,EAD4Bqe,EAAA,GACtBC,EADsBD,EAAA,GAG1BE,EAAI,EAAGA,EAAItT,KAAK9I,OAAQoc,IAAK,CAClC,IAAMlb,EAAO4H,KAAKsT,GAElB,GAAKve,IAAQse,EAAb,CAiBA,IAAMpc,EAASX,EAAK+D,UAAUtF,EAAOqD,EAAK4a,IAC1C,GAAI/b,EACA,IAAK,IAAIsc,EAAI,EAAGA,EAAItc,EAAOC,OAAQqc,IAAK,CACpC,IAAMnc,EAAQH,EAAOsc,GAEf1M,GAAWA,IAAYzP,EAAMyP,SAAWA,IAAYzP,EAAMoc,UACvDH,GAAaA,IAAcjc,EAAMic,WACjCzY,GAAYA,IAAaxD,EAAMwD,WAEpCxC,EAAK2V,oBAAoBhZ,EAAMqC,EAAMoc,UAAYpc,EAAMyP,SACvD5P,EAAOwc,OAAOF,EAAG,GACjBA,GAAK,QAGLF,GAAczY,GACtBxC,EAAK2V,oBAAoBhZ,EAAM8R,QA/B/B,IAAK,IAAI0M,EAAI,EAAGrY,EAAOhG,OAAOgG,KAAK5E,EAAK+D,WAAYkZ,EAAIrY,EAAKhE,OAAQqc,IAGjE,IAFA,IAAMtc,EAASX,EAAK+D,UAAUa,EAAKqY,IAE1B9e,EAAI,EAAGA,EAAIwC,EAAOC,OAAQzC,IAAK,CACpC,IAAM2C,EAAQH,EAAOzC,GACjB4C,EAAMic,YAAcA,GAAajc,EAAM6b,SAAW7a,EAAK4a,KACvD5a,EAAK2V,oBAAoB3W,EAAMrC,KAAMqC,EAAMoc,UAAYpc,EAAMyP,SAC7D5P,EAAOwc,OAAOhf,EAAG,GACjBA,GAAK,IA4B7B,OAAOuL,4CCzDM,IAEXiS,EAAkB,MAClBiB,EAAgB,SAChBQ,EAAcrF,KAAKC,SAASC,WAAW1O,QAAQ,KAAM,KAArD,IAAAzL,EAAAN,QAkCS,SAAYqf,EAAUvY,EAAUiM,GAC3C,IAAMvN,EAAQ6Z,EAASjR,MAAM+P,GACzBuB,SAEoB,mBAAb5Y,IACPiM,EAAUjM,EACVA,EAAW,MAGXA,IACA4Y,EAAW,SAA+BG,aAhCzBA,EAAK/Y,EAAUiM,GAMpC,IALA,IAAM+M,MAAoBF,EAApB,KAAiCA,EAAjC,MACAG,EAAmBjZ,EAASsH,MAAM,KAEpC4R,EAAW,GAENtf,EAAI,EAAGA,EAAIqf,EAAiB3c,OAAQ1C,IAAK,CAC9C,IAAMuf,EAAMF,EAAiBrf,GAC7Bsf,IAAqB,IAANtf,EAAU,GAAK,KAAMof,EAAgBG,EAApD,IAA2DH,EAAgBG,EAA3E,KAIJ/T,KAAK8O,aAAa4E,EAAUA,GArBhC,SAAYtb,EAAMwC,GACd,OAAQxC,EAAK4b,SACF5b,EAAK6b,uBACL7b,EAAK8b,oBACL9b,EAAK+b,mBACL/b,EAAKgc,kBAAkBzf,KAAKyD,EAAMwC,GALjD,CAuBW+Y,EAAIlb,OAAQqb,IACfjN,EAAQlS,KAAKqL,KAAM2T,GAGvB3T,KAAKgP,gBAAgB0E,KAeG/e,KAAKqL,KAAM2T,EAAK/Y,EAAUiM,KAIlD,IAAK,IAAIrS,EAAI,EAAGA,EAAI8E,EAAMpC,OAAQ1C,IAG9B,IAHmC,IAAA4e,EACT9Z,EAAM9E,GAAG0N,MAAMgR,GAAlCne,EAD4Bqe,EAAA,GACtBC,EADsBD,EAAA,GAG1BE,EAAI,EAAGA,EAAItT,KAAK9I,OAAQoc,IAAK,CAOlC,IANA,IAAMlb,EAAO4H,KAAKsT,GACZL,EAAS7a,EAAK4a,GAAK5a,EAAK4a,MAAQ1c,EAAK4N,UACrCjN,EAASX,EAAK+D,UAAUtF,EAAOke,GAAU3c,EAAK+D,UAAUtF,EAAOke,OAEjEoB,KAEKd,EAAI,EAAGA,EAAItc,EAAOC,OAAQqc,IAAK,CACpC,IAAMnc,EAAQH,EAAOsc,GAErB,GAAI1M,IAAYzP,EAAMyP,WAAajM,GAAYA,IAAaxD,EAAMwD,UAAW,CACzEyZ,KACA,OAIHA,IACDpd,EAAO8E,MACHyX,WACA3M,UACAwM,YACAzY,WACAqY,SACAle,SAGJqD,EAAKsV,iBAAiB3Y,EAAMye,GAAY3M,OAKpD,OAAO7G,4CCvFe,IAAA/K,EAAAQ,EACT,IAAArB,EAAAN,QAGF,SAAmB2U,GAC9B,OAAO,IAAIvM,EAAKqI,EAAckE,2CCLf,GAAAxT,EAAAQ,EACI,GAAAjB,EAAAiB,EACC,GAAAuG,EAAAvG,EACV,GAAAZ,EAAAY,EACoB,IAAArB,EAAAN,QAyBnB,SAAwB8B,EAAQuC,EAAKwC,EAAWC,EAAUtD,EAAU8C,EAAS3C,GACxF,IAAMV,EAAMuI,EAAO1J,GACbiH,EAAU+C,EAAWhK,EAAQuC,GAE7Bmc,EAAkBC,GACpBpc,MACAvC,SACA0B,WACA8C,QAASA,GAAWxE,IAIxB0e,EAAgBzY,UAAYvE,EAE5B,IAd8Fkd,EAtBlG,SAAAxc,GAIG,IAHCyc,EAGDzc,EAHCyc,cACAH,EAEDtc,EAFCsc,gBACA1Z,EACD5C,EADC4C,SAEA,OACI8Z,YADG,WACmB,IACVtc,GADUiH,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,OACVjH,KACJA,GACA0M,EAAE1M,GAAMiE,GAAGoY,EAAe7Z,EAAU0Z,IAG5CK,cAPG,WAOqB,IACZvc,GADYiH,UAAAnI,OAAA,YAAAmI,UAAA,GAAAA,UAAA,OACZjH,KACJA,GACA0M,EAAE1M,GAAMkE,IAAImY,EAAe7Z,EAAU0Z,KAfrD,EAuCQG,cAFqB9Z,EAAnB,KADiB5D,EAAIoI,GAAKhH,GAI5Bmc,kBACA1Z,aAHI8Z,EAhBsFF,EAgBtFE,YAAaC,EAhByEH,EAgBzEG,cAKfC,EACA5Q,EAAYpO,EAAZ,QAA4BuC,EAAOuc,EAAata,EAAS3C,GACzDod,EACA7Q,EAAYpO,EAAZ,UAA8BuC,EAAOwc,EAAeva,EAAS3C,GAInE,GAAImd,GAAyBC,EAAyB,KAC1C9V,EAAalC,EAAbkC,SACR,GAAIA,EAAU,QAAA7G,EAAAmD,EACG0D,EADHzD,EAAA,EAAAC,EAAAF,EAAAnE,OAAAgB,EAAAmD,EAAAC,KAAAC,EAAAD,IAAA,QAC2BoZ,GAActc,KADzCF,EACgBE,QAIlC,OAAOxC,yCChEiB,IAAAX,EAAAQ,EACA,GAAAjB,EAAAiB,EACN,GAAAuG,EAAAvG,EACE,GAAAZ,EAAAY,EACK,IAAArB,EAAAN,QAGd,SAASuI,EAAGzG,EAAQmc,EAAYza,EAAUwd,EAAe1a,GAEpEqC,EAAgB7G,EAAQ,MAExB,IAAMwc,EAAkBL,aAAsB5a,MAG9C,GAAI4a,GAAoC,iBAAfA,IAA4BK,EAAiB,SACvBC,EAAlBC,EADyCjX,EACtD0W,EADsD9W,EAAA/F,OAAAgG,KAAAG,GAAAF,EAAA,EAAAI,EAAAN,EAAA/D,OACzCob,EADyCjX,EACvBgX,EADuBpX,EAAAE,MAAAI,EAAAJ,IAE9DkB,EAAGzG,EAAQyc,EAAcC,EAAkBhb,EAAUwd,GACzD,OAAOlf,EAGX,GAA0B,iBAAfmc,IAA4BK,EACnC,MAAMxb,EAAU,iBAAmB0C,MAAOyY,IAK9C,IAAMzY,EAAQ8Y,EAAkBL,EAAaA,EAAW7P,MAAM+P,GAG9D,GAA6B,kBAAlB6C,YAAsCA,EAA+B,KAAA9c,GAEhD8c,EAAe1a,GAA1CA,EAF2EpC,EAAA,GAElE8c,EAFkE9c,EAAA,GAtBH,QA2BxDjD,EA3BwDiG,EA2BhE1B,EA3BgEgC,EAAA,EAAAF,EAAAJ,EAAA9D,OA2BxDnC,EA3BwDiG,EAAAM,KAAAF,EAAAE,IA2B/C,CAC1B,IAAMmX,EAAsB1d,EAAKmN,MAAM,KAEvC,GAAIuQ,EAAoBvb,OAAS,EAAG,KAEzBqM,EAAuBkP,EAFE,GAEnBC,EAAiBD,EAFE,GAGhCpL,EAAiBzR,EAAQ2N,EAAMmP,EAAepb,EAAU8C,GAAWxE,QAGnEoO,EAAYpO,EAAQb,EAAMuC,EAAU8C,GAS5C,OAT4CA,IAKxC0a,GACAxd,EAAS3C,KAAKyF,GAAWxE,GAAUkf,kBAGhClf,yCCpDI,IAAAX,EAAAQ,EACC,IAAAjB,EAAAiB,EACI,IAAAuG,EAAAvG,EACH,IAAAZ,EAAAY,EACI,IAAAQ,EAAAR,EACH,IAAAhB,EAAAgB,EACK,IAAAuP,EAAAvP,EACM,IAAAsf,EAAAtf,EACb,GAAAuJ,EAAAvJ,EACG,IAAAX,EAAAW,EACC,IAAAS,EAIhBmG,OACAC,QACA0Y,YACA7E,SACAlL,aACAgQ,UACA9U,eACA+U,qBACA7e,QACA8e,WACA1L,gDCxBuB,IAE3B1V,EAAOD,QAAUshB","file":"defi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"defi\"] = factory();\n\telse\n\t\troot[\"defi\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 61);\n","function PseudoMap() {}\n\n// PseudoMap simulates WeakMap behavior with O(1) search complexity\n// it's needed to support @IE9 and @IE10\nnofn.assign(PseudoMap.prototype, {\n    get(obj) {\n        return obj.defi;\n    },\n    set(obj, data) {\n        Object.defineProperty(obj, 'defi', {\n            value: data,\n            enumerable: false,\n            writable: false,\n            configurable: false\n        });\n    },\n    has(obj) {\n        return 'defi' in obj;\n    }\n});\n\nexport default typeof WeakMap === 'undefined' ? new PseudoMap() : new WeakMap();\n","import defiError from './defierror';\n\n// checks type of a variable and throws an error if its type is not an object\nexport default function checkObjectType(object, method) {\n    const typeofObject = object === null ? 'null' : typeof object;\n\n    if (typeofObject !== 'object' && typeofObject !== 'function') {\n        throw defiError('common:object_type', {\n            object,\n            method\n        });\n    }\n}\n","import defs from '../_core/defs';\n\n// triggers one event\nexport default function triggerOne(object, name, triggerArgs) {\n    const def = defs.get(object);\n    const events = def && def.events[name];\n\n    if (events) {\n        const l = events.length;\n        let i = 0;\n\n        // allow to pass both array of args and single arg as triggerArgs\n        if (triggerArgs instanceof Array) {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback, ctx } = event;\n                callback.apply(ctx, triggerArgs);\n                i += 1;\n            }\n        } else {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback, ctx } = event;\n                callback.call(ctx, triggerArgs);\n                i += 1;\n            }\n        }\n    }\n}\n\n// latestEvent is used as required hack in somemethods\ntriggerOne.latestEvent = {\n    info: {},\n    name: null\n};\n","/* eslint-disable prefer-template, max-len */\nconst bindingErrorPrefix = 'Binding error:';\nconst calcErrorPrefix = 'Calc error:';\nconst eventsErrorPrefix = 'Events error:';\n\nconst getType = (variable) => {\n    if (variable === null) {\n        return 'null';\n    }\n\n    return typeof variable;\n};\nconst getTypeError = (variable, variableName, expectedType) =>\n    `${variableName} must have type \"${expectedType}\" but got \"${getType(variable)}\" instead.`;\n\nconst errors = {\n    'common:object_type': ({ object, method }) => `Error in ${method}: `\n        + getTypeError(object, 'object', 'object'),\n\n    'binding:node_missing': ({ key, node }) => {\n        const selectorInfo = typeof node === 'string' ? ` (given selector is \"${node}\")` : '';\n        return `${bindingErrorPrefix} node is missing for key \"${key}\"${selectorInfo}.`;\n    },\n    'binding:falsy_key': () => `${bindingErrorPrefix} \"key\" arg cannot be falsy`,\n    'calc:target_type': ({ target }) =>\n        `${calcErrorPrefix} ${getTypeError(target, 'target key', 'string')}`,\n    'calc:source_key_type': ({ sourceKey }) =>\n        `${calcErrorPrefix} ${getTypeError(sourceKey, 'source key', 'string')}`,\n    'calc:source_object_type': ({ sourceObject }) =>\n        `${calcErrorPrefix} ${getTypeError(sourceObject, 'source object', 'object')}`,\n    'calc:source_type': ({ source }) =>\n        `${calcErrorPrefix} ${getTypeError(source, 'source', 'object')}`,\n\n    'trigger:names_type': ({ names }) =>\n        `${eventsErrorPrefix} ${getTypeError(names, 'event name', 'string')}`,\n\n    'on:names_type': ({ names }) => errors['trigger:names_type']({ names }),\n\n    'removedatakeys:key_type': ({ key }) =>\n        `Error in removeDataKeys: ${getTypeError(key, 'key', 'string')}`,\n\n    'adddatakeys:key_type': ({ key }) =>\n        `Error in addDataKeys: ${getTypeError(key, 'key', 'string')}`,\n\n    'remove:key_type': ({ key }) =>\n        `Error in remove: ${getTypeError(key, 'key', 'string')}`,\n\n    'mediate:key_type': ({ key }) =>\n        `Error in mediate: ${getTypeError(key, 'key', 'string')}`\n};\n\nexport default function defiError(key, data) {\n    const getError = errors[key];\n    if (!getError) {\n        throw Error(`Unknown error \"${key}\". Please report about this on Github.`);\n    }\n\n    return new Error(getError(data));\n}\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport domEventReg from '../on/_domeventregexp';\n\n// removes simple event listener from an object\nexport default function removeListener(object, name, callback, context, info) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return false;\n    }\n\n    const { events: allEvents } = def;\n    const events = allEvents[name];\n    const retain = [];\n    const noTrigger = name ? name[0] === '_' : false;\n    const domEventExecResult = domEventReg.exec(name);\n\n    if (domEventExecResult) {\n        const [, eventName, key, selector] = domEventExecResult;\n        // fixing circular reference issue\n        const removeDomListener = require('./_removedomlistener');\n\n        removeDomListener(object, key, eventName, selector, callback, context, info);\n\n        return true;\n    }\n\n    // if all events need to be removed\n    if (typeof name === 'undefined') {\n        if (!noTrigger) {\n            nofn.forOwn(allEvents, (allEventsItem, allEventsName) => {\n                nofn.forEach(allEventsItem, (event) => {\n                    const removeEventData = {\n                        allEventsName,\n                        callback: event.callback,\n                        context: event.context\n                    };\n\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                });\n            });\n        }\n\n        // restore default value of \"events\"\n        def.events = {};\n    } else if (events) {\n        // if events with given name are found\n        nofn.forEach(events, (event) => {\n            const argCallback = (callback && callback._callback) || callback;\n            const eventCallback = event.callback._callback || event.callback;\n\n            if ((argCallback && argCallback !== eventCallback)\n                || (context && context !== event.context)) {\n                // keep event\n                retain.push(event);\n            } else {\n                const removeEventData = {\n                    name,\n                    callback: event.callback,\n                    context: event.context\n                };\n\n                if (!noTrigger) {\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                }\n            }\n        });\n\n        if (retain.length) {\n            allEvents[name] = retain;\n        } else {\n            delete def.events[name];\n        }\n    }\n\n    return false;\n}\n","import Init from './_init';\nimport parseHTML from './parsehtml';\nimport on from './on';\nimport off from './off';\nimport add from './add';\nimport assign from '../_helpers/assign';\n\n// tiny jQuery replacement for Matreshka\n// mq previously called balalaika.js\nexport default function mq(selector, context) {\n    return new Init(selector, context);\n}\n\nmq.parseHTML = parseHTML;\n\nassign(Init.prototype, {\n    on,\n    off,\n    add\n});\n","import defs from './_core/defs';\nimport triggerOne from './trigger/_triggerone';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport is from './_helpers/is';\n\n// the function sets new value for a property\n// since its performance is very critical we're checking events existence manually\nexport default function set(object, key, value, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'set');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return object;\n    }\n\n    // allow to use key-value object as another method variation\n    if (typeof key === 'object') {\n        nofn.forOwn(key, (objVal, objKey) => set(object, objKey, objVal, value));\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n\n    // if no object definition then make simple assignment\n    if (!def) {\n        object[key] = value;\n        return object;\n    }\n\n    const { props, events } = def;\n    const propDef = props[key];\n\n    // if no property definition then make simple assignment\n    if (!propDef) {\n        object[key] = value;\n        return object;\n    }\n\n    const { value: previousValue, mediator } = propDef;\n\n    // possible flags, all of them are falsy by default\n    const {\n        skipMediator,\n        fromMediator,\n        force,\n        forceHTML,\n        silent,\n        silentHTML,\n        skipCalc\n    } = eventOptions;\n\n    let newValue;\n\n    if (mediator && !is(value, previousValue) && !skipMediator && !fromMediator) {\n        newValue = mediator(value);\n    } else {\n        newValue = value;\n    }\n\n    const isChanged = !is(newValue, previousValue);\n\n    // add to eventOptions object some useful properties\n    // we override default eventOptions because some of the properties need to have actual values,\n    // not inherited ones (eg when calc is used)\n    const extendedEventOptions = {\n        ...eventOptions,\n        value: newValue,\n        self: object,\n        previousValue,\n        key,\n        isChanged\n    };\n\n    const triggerChange = (isChanged || force) && !silent;\n\n    // trigger beforechange:KEY and beforechange events\n    if (triggerChange) {\n        const beforechangeStr = 'beforechange';\n        const beforechangeEventName = `${beforechangeStr}:${key}`;\n\n        if (events[beforechangeEventName]) {\n            triggerOne(object, beforechangeEventName, extendedEventOptions);\n        }\n\n        if (events[beforechangeStr]) {\n            triggerOne(object, beforechangeStr, extendedEventOptions);\n        }\n    }\n\n    propDef.value = newValue;\n\n    // triger bindings\n    if (!silentHTML && (isChanged || forceHTML)) {\n        const changeBindingsEventName = `_change:bindings:${key}`;\n        if (events[changeBindingsEventName]) {\n            triggerOne(object, changeBindingsEventName, extendedEventOptions);\n        }\n    }\n\n    // trigger change:KEY and change events\n    if (triggerChange) {\n        const changeStr = 'change';\n        const changeEventName = `${changeStr}:${key}`;\n        if (events[changeEventName]) {\n            triggerOne(object, changeEventName, extendedEventOptions);\n        }\n\n        if (events[changeStr]) {\n            triggerOne(object, changeStr, extendedEventOptions);\n        }\n    }\n\n    // trigger dependencies made by calc method\n    if ((isChanged || force) && !skipCalc) {\n        const changeDepsEventName = `_change:deps:${key}`;\n        if (events[changeDepsEventName]) {\n            triggerOne(object, changeDepsEventName, extendedEventOptions);\n        }\n    }\n\n\n    if (isChanged) {\n        // trigger common delegated events logic\n        const changeDelegatedKeyEventName = `_change:delegated:${key}`;\n        if (events[changeDelegatedKeyEventName]) {\n            triggerOne(object, changeDelegatedKeyEventName, extendedEventOptions);\n        }\n\n        // trigger tree change events logic\n        const changeTreeEventName = `_change:tree:${key}`;\n        if (events[changeTreeEventName]) {\n            triggerOne(object, changeTreeEventName, extendedEventOptions);\n        }\n\n        // trigger other internal change events\n        const changeCommonEventName = `_change:common:${key}`;\n        if (events[changeCommonEventName]) {\n            triggerOne(object, changeCommonEventName, extendedEventOptions);\n        }\n\n        // trigger delegated logic for asterisk events (*.*.*@foo)\n        // TODO: Confusing events names (\"_change:delegated\", \"_change:common:KEY\" etc)\n        const changeDelegatedEventName = '_change:delegated';\n        if (events[changeDelegatedEventName]) {\n            triggerOne(object, changeDelegatedEventName, extendedEventOptions);\n        }\n    }\n\n    return object;\n}\n","import defs from './defs';\nimport set from '../set';\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key, noAccessor) {\n    const def = defs.get(object);\n\n    // if no object definition do nothing\n    if (!def) {\n        return null;\n    }\n\n    if (!def.props[key]) {\n        const propDef = def.props[key] = {\n            value: object[key],\n            mediator: null,\n            bindings: null\n        };\n\n        if (!noAccessor) {\n            Object.defineProperty(object, key, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return propDef.value;\n                },\n                set(v) {\n                    return set(object, key, v, {\n                        fromSetter: true\n                    });\n                }\n            });\n        }\n    }\n\n    return def.props[key];\n}\n","import defs from './defs';\n\nlet objectId = 0;\n\n// this is common function which associates an object with its Matreshka definition\nexport default function initMK(object) {\n    let def = defs.get(object);\n    if (!def) {\n        def = {\n            // a property name of \"events\" object is an event name\n            // and a value is an array of event handlers\n            events: {\n                /* example: {\n                    callback: function,\n                    ctx: object,\n                    context: object2,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n            },\n            // \"props\" contains special information about properties (getters, setters etc)\n            props: {\n                /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                } */\n            },\n            id: objectId\n        };\n\n        objectId += 1;\n\n        defs.set(object, def);\n    }\n\n    return def;\n}\n","import initMK from '../_core/init';\nimport triggerOne from '../trigger/_triggerone';\nimport defineProp from '../_core/defineprop';\nimport domEventReg from './_domeventregexp';\n\n// property modifier event regexp\nconst propModEventReg // eslint-disable-next-line max-len\n    = /^_change:deps:|^_change:bindings:|^_change:delegated:|^_change:common:|^_change:tree:|^change:|^beforechange:/;\n\n// adds simple event listener\n// used as core of event engine\nexport default function addListener(object, name, callback, context, info = {}) {\n    const { events: allEvents } = initMK(object);\n    const ctx = context || object;\n    const events = allEvents[name];\n    const event = {\n        callback, context, ctx, name, info\n    };\n    // skipChecks is used by internal methods for better performance\n    const { skipChecks = false } = info;\n\n    if (!skipChecks) {\n        const domEventExecResult = domEventReg.exec(name);\n\n        if (domEventExecResult) {\n            const [, eventName, key, selector] = domEventExecResult;\n            // fixing circular reference issue\n            const addDomListener = require('./_adddomlistener');\n\n            addDomListener(object, key, eventName, selector, callback, context, info);\n\n            return true;\n        }\n    }\n\n    // if there are events with the same name\n    if (events) {\n        if (!skipChecks) {\n            // if there are events with the same data, return false\n            for (let i = 0; i < events.length; i++) {\n                const existingEvent = events[i];\n                const argCallback = (callback && callback._callback) || callback;\n                const eventCallback = existingEvent.callback._callback || existingEvent.callback;\n                if (argCallback === eventCallback && existingEvent.context === context) {\n                    return false;\n                }\n            }\n        }\n\n        // if the event isn't found add it to the event list\n        events.push(event);\n    } else {\n        // if there are no events with the same name, create an array with only  one event\n        allEvents[name] = [event];\n    }\n\n    if (propModEventReg.test(name)) {\n        // define needed accessors for KEY\n        defineProp(object, name.replace(propModEventReg, ''));\n    }\n\n    // names prefixed by underscore mean \"private\" events\n    if (!skipChecks && name[0] !== '_') {\n        triggerOne(object, `addevent:${name}`, event);\n        triggerOne(object, 'addevent', event);\n    }\n\n    // if event is added successfully return true\n    return true;\n}\n","// returns a binder for input element based on its type\nexport default function input(type) {\n    let on;\n    switch (type) {\n        case 'checkbox':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.checked;\n                },\n                setValue(value) {\n                    this.checked = value;\n                }\n            };\n        case 'radio':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.value;\n                },\n                setValue(value) {\n                    this.checked = typeof value !== 'undefined' && this.value === value;\n                }\n            };\n        case 'submit':\n        case 'button':\n        case 'image':\n        case 'reset':\n            return {};\n        case 'hidden':\n            on = null;\n            break;\n        case 'file':\n            on = 'change';\n            break;\n\n            /*\n            case 'text':\n            case 'password':\n            case 'date':\n            case 'datetime':\n            case 'datetime-local':\n            case 'month':\n            case 'time':\n            case 'week':\n            case 'range':\n            case 'color':\n            case 'search':\n            case 'email':\n            case 'tel':\n            case 'url':\n            case 'file':\n            case 'number': */\n        default: // other future (HTML6+) inputs\n            on = 'input';\n    }\n\n    return {\n        on,\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n        }\n    };\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport getNodes from '../bindnode/_getnodes';\nimport removeTreeListener from '../off/_removetreelistener';\nimport removeBinding from './_removebinding';\n\n// unbinds a node\nexport default function unbindNode(object, key, node, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'unbindNode');\n\n    if (key instanceof Array) {\n        if (typeof key[0] === 'string') {\n            /*\n             * accept array of keys\n             * this.unbindNode(['a', 'b', 'c'], node)\n             */\n\n            nofn.forEach(key, itemKey => unbindNode(object, itemKey, node, eventOptions));\n        } else {\n            /*\n             * acept array of objects\n             * this.unbindNode([{ key, node, binder, event }], { silent: true });\n             */\n            nofn.forEach(key, ({\n                key: itemKey,\n                node: itemNode,\n                event: itemEventOptions\n            }) => {\n                const commonEventOptions = node;\n                const mergedEventOptions = {};\n\n                if (commonEventOptions) {\n                    // extend event object by \"global\" event\n                    nofn.assign(mergedEventOptions, commonEventOptions);\n                }\n\n                if (itemEventOptions) {\n                    // extend event object by \"local\" event (\"event\" key of an object)\n                    nofn.assign(mergedEventOptions, itemEventOptions);\n                }\n\n                unbindNode(object, itemKey, itemNode, mergedEventOptions);\n            });\n        }\n\n        return object;\n    }\n\n    if (key && typeof key === 'object') {\n        nofn.forOwn(key, (keyObjValue, keyObjKey) => {\n            if (keyObjValue.constructor === Object && 'node' in keyObjValue) {\n                // this.unbindNode({ key: { node: $(), binder } ) }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue.node, node);\n            } else if (\n                keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.unbindNode({ key: [{ node: $(), binder }] ) }, { silent: true });\n                nofn.forEach(keyObjValue, (keyObjValueItem) => {\n                    unbindNode(object, keyObjKey, keyObjValueItem.node, node);\n                });\n            } else {\n                // this.unbindNode({ key: $() }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue, node);\n            }\n        });\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const { deep } = eventOptions;\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n\n    // allow to pass null or undefined as key\n    // if passed then remove bindings of all keys for given object\n    if (key === null || typeof key === 'undefined') {\n        nofn.forOwn(props, (propsItem, propsKey) => {\n            unbindNode(object, propsKey, null, eventOptions);\n        });\n\n        return object;\n    }\n\n    // remove delegated binding\n    if (deep !== false) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            let target = object;\n\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                // TODO: Do we need to throw an error when a target is falsy?\n                target = target[deepPath[i]];\n            }\n\n            // TODO: Potential bug! This may undelegate listener for all bindings with the same path\n            // ...(cannot reproduce)\n            removeTreeListener(object, deepPath.slice(0, deepPathLength - 2));\n\n            unbindNode(target, deepPath[deepPathLength - 1], node, eventOptions);\n\n            return object;\n        }\n    }\n\n    const propDef = props[key];\n\n    // when no propdef do nothing\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    // if the property doesn't have any bindings do nothing\n    if (!bindings) {\n        return object;\n    }\n\n    // if no node is pased remove all bindings for given key\n    if (!node) {\n        nofn.forEach(bindings, (binding) => {\n            removeBinding({\n                object, key, eventOptions, binding\n            });\n        });\n\n        propDef.bindings = null;\n\n        return object;\n    }\n\n    const $nodes = getNodes(object, node);\n    const retainBindings = [];\n    const retainNodes = [];\n\n    // iterate over all bindngs and compare their node with given nodes\n    nofn.forEach($nodes, (nodesItem) => {\n        nofn.forEach(bindings, (binding) => {\n            if (binding.node === nodesItem) {\n                removeBinding({\n                    object, key, eventOptions, binding\n                });\n            } else {\n                retainBindings.push(binding);\n                retainNodes.push(nodesItem);\n            }\n        });\n    });\n\n    // update bindings object\n    if (retainBindings.length) {\n        propDef.bindings = retainBindings;\n    } else {\n        propDef.bindings = null;\n    }\n\n    return object;\n}\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\n\n// the function removes internally used events such as _asterisk:add\nfunction detatchDelegatedLogic({\n    delegatedEventName,\n    pathStr,\n    allEvents\n}) {\n    const retain = [];\n    const events = allEvents[delegatedEventName];\n\n    nofn.forEach(events, (event) => {\n        // pathStr is assigned to info in delegateListener\n        if (event.info.pathStr !== pathStr) {\n            retain.push(event);\n        }\n    });\n\n    if (retain.length) {\n        allEvents[delegatedEventName] = retain;\n    } else {\n        delete allEvents[delegatedEventName];\n    }\n}\n\n// removes delegated event listener from an object by given path\nexport default function undelegateListener(object, givenPath, name, callback, context, info = {}) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return;\n    }\n\n    const { events: allEvents } = def;\n\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then remove listener\n        removeListener(object, name, callback, context, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr;\n\n        if (path.length > 1) {\n            path = nofn.slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n\n        const delegatedChangeEvtName = `_change:delegated:${key}`;\n        if (allEvents[delegatedChangeEvtName]) {\n            detatchDelegatedLogic({\n                delegatedEventName: delegatedChangeEvtName,\n                pathStr,\n                allEvents\n            });\n        }\n\n        if (typeof object[key] === 'object') {\n            undelegateListener(object[key], path, name, callback, context, info);\n        }\n    }\n}\n","import addListener from '../_addlistener';\nimport changeHandler from './changehandler';\n\n// adds delegated event listener to an object by given path\nexport default function delegateListener(object, givenPath, name, callback, context, info = {}) {\n    // if typeof path is string and path is not empty string then split it\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then add simple listener\n        addListener(object, name, callback, context, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr; // needed for undelegation\n\n        if (path.length > 1) {\n            path = nofn.slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n        const delegatedData = {\n            path,\n            name,\n            callback,\n            context,\n            info,\n            object\n        };\n\n            // the event is triggered by \"set\"\n        addListener(object, `_change:delegated:${key}`, changeHandler, null, {\n            delegatedData,\n            pathStr\n        });\n\n        // call handler manually\n        changeHandler({\n            value: object[key]\n        }, delegatedData);\n    }\n}\n","// an object allows to share data between modules; it's needed because we use\n// simplified ES modules there and cannot import and share a number\nexport default {\n    nodeIndex: 0,\n    allEvents: {}\n};\n","import html2nodeList from './_html2nodelist';\n\nconst win = window;\n\n// function-constructor of mq library\n// accepts many kinds of arguments (selector, html, function)\nfunction MQInit(selector, context) {\n    let result;\n\n    if (selector) {\n        if (selector.nodeType || (typeof win === 'object' && selector === win)) {\n            result = [selector];\n        } else if (typeof selector === 'string') {\n            if (/</.test(selector)) {\n                result = html2nodeList(selector);\n            } else if (context) {\n                const newContext = (new MQInit(context))[0];\n\n                if (newContext) {\n                    result = newContext.querySelectorAll(selector);\n                }\n            } else {\n                result = win.document.querySelectorAll(selector);\n            }\n        } else if ('length' in selector) {\n            // if it's something array-like (eg NodeList)\n            result = selector;\n        } else {\n            // this is somethong another (eg Attr)\n            result = [selector];\n        }\n    }\n\n    const length = result && result.length;\n\n    if (length) {\n        for (let i = 0; i < length; i++) {\n            this.push(result[i]);\n        }\n    }\n}\n\nMQInit.prototype = [];\n\nexport default MQInit;\n","// the regexp allows to parse things like \"click::x(.y)\"\n// it's shared between few modules\nexport default /([^::]+)::([^()]+)?(?:\\((.*)\\))?/;\n","// allows to split by spaces not inclusing ones inside of brackers\nexport default /\\s+(?![^(]*\\))/g;\n","import selectNodes from './_selectnodes';\nimport $ from '../_mq';\n\nconst htmlReg = /</;\nconst customSelectorReg = /:bound\\(([^(]*)\\)/;\n\n// the function works just like DOM library accepting any kind of arg\n// (HTML string, Node, NodeList etc) bu allows to pass custom selector\n// eg :bound(KEY)\nexport default function getNodes(object, selector) {\n    let nodes;\n\n    if (\n        typeof selector === 'string'\n        && !htmlReg.test(selector)\n        && customSelectorReg.test(selector)\n    ) {\n        nodes = selectNodes(object, selector);\n    } else {\n        nodes = $(selector);\n    }\n\n    return nodes;\n}\n","import initMK from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport getNodes from './_getnodes';\nimport createBindingSwitcher from './_createbindingswitcher';\nimport bindSingleNode from './_bindsinglenode';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport addTreeListener from '../on/_addtreelistener';\n\n// initializes binsing between a property of an object to HTML node\nexport default function bindNode(object, key, node, binder, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bindNode');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    binder = binder || {}; // eslint-disable-line no-param-reassign\n\n    initMK(object);\n\n    const { temporaryOptionalFlag } = bindNode;\n\n    delete bindNode.temporaryOptionalFlag;\n\n    // throw an error when key is falsy\n    if (!key) {\n        throw defiError('binding:falsy_key');\n    }\n\n    if (key instanceof Array) {\n        if (typeof key[0] === 'string') {\n            /*\n             * accept array of keys\n             * this.bindNode(['a', 'b', 'c'], node)\n             */\n            if (temporaryOptionalFlag) {\n                // eslint-disable-next-line no-param-reassign\n                eventOptions = { ...eventOptions, optional: true };\n            }\n\n            nofn.forEach(key, itemKey => bindNode(object, itemKey, node, binder, eventOptions));\n        } else {\n            /*\n             * accept array of objects\n             * this.bindNode([{key, node, binder, event}], { silent: true });\n             */\n            nofn.forEach(key, ({\n                key: itemKey,\n                node: itemNode,\n                binder: itemBinder,\n                event: itemEventOptions\n            }) => {\n                const commonEventOptions = node;\n                const mergedEventOptions = {};\n\n                if (temporaryOptionalFlag) {\n                    mergedEventOptions.optional = true;\n                }\n\n                if (commonEventOptions) {\n                    // extend event object by \"global\" event\n                    nofn.assign(mergedEventOptions, commonEventOptions);\n                }\n\n                if (itemEventOptions) {\n                    // extend event object by \"local\" event (\"event\" key of an object)\n                    nofn.assign(mergedEventOptions, itemEventOptions);\n                }\n\n                bindNode(object, itemKey, itemNode, itemBinder, mergedEventOptions);\n            });\n        }\n\n        return object;\n    }\n\n\n    if (typeof key === 'object') {\n        nofn.forOwn(key, (keyObjValue, keyObjKey) => {\n            // binder means eventOptions\n            if (temporaryOptionalFlag) {\n                // eslint-disable-next-line no-param-reassign\n                eventOptions = binder ? { ...binder, optional: true } : { optional: true };\n            } else {\n                eventOptions = binder; // eslint-disable-line no-param-reassign\n            }\n\n            if (\n                keyObjValue\n                && keyObjValue.constructor === Object\n                && 'node' in keyObjValue\n            ) {\n                // this.bindNode({ key: { node: $(), binder } ) }, { on: 'evt' }, { silent: true });\n                bindNode(\n                    object, keyObjKey, keyObjValue.node,\n                    keyObjValue.binder || node, eventOptions\n                );\n            } else if (\n                keyObjValue\n                && keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.bindNode({ key: [{\n                //   node: $(),\n                //   binder\n                // }] ) }, { on: 'evt' }, { silent: true });\n                nofn.forEach(keyObjValue, (keyObjValueItem) => {\n                    bindNode(\n                        object, keyObjKey, keyObjValueItem.node,\n                        keyObjValueItem.binder || node, eventOptions\n                    );\n                });\n            } else {\n                // this.bindNode({ key: $() }, { on: 'evt' }, { silent: true });\n                bindNode(object, keyObjKey, keyObjValue, node, eventOptions);\n            }\n        });\n\n        return object;\n    }\n\n    const {\n        optional = temporaryOptionalFlag || false, // check out bindOptionalNode\n        exactKey = false\n    } = eventOptions;\n    const $nodes = getNodes(object, node);\n\n    // check node existence\n    if (!$nodes.length) {\n        if (optional) {\n            return object;\n        }\n\n        throw defiError('binding:node_missing', { key, node });\n    }\n\n    if (!exactKey) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            // handle binding when key arg includes dots (eg \"a.b.c.d\")\n            const bindingSwitcher = createBindingSwitcher({\n                object,\n                deepPath,\n                $nodes,\n                binder,\n                eventOptions,\n                bindNode\n            });\n\n            addTreeListener(object, deepPath.slice(0, deepPathLength - 1), bindingSwitcher);\n\n            bindingSwitcher();\n\n            return object;\n        }\n    }\n\n    const propDef = defineProp(object, key);\n\n    // handle binding for every node separately\n    nofn.forEach($nodes, oneNode => bindSingleNode(object, {\n        $nodes,\n        node: oneNode,\n        key,\n        eventOptions,\n        binder,\n        propDef\n    }));\n\n    return object;\n}\n","import undelegateListener from './_undelegatelistener';\n\n// removes tree listener from all object tree of fiven path\n// TODO: Pass context to removeTreeListener\nexport default function removeTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over keys of the path and undelegate given handler (can be undefined)\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice is slow\n        const listenedPath = deepPath.slice(0, i);\n\n        undelegateListener(\n            object,\n            listenedPath,\n            `_change:tree:${deepPath[i]}`,\n            handler\n        );\n    }\n}\n","import delegateListener from './_delegatelistener';\nimport removeTreeListener from '../off/_removetreelistener';\n\n// creates tree listener\nfunction createTreeListener({ handler, restPath }) {\n    const newHandler = function treeListener(changeEvent) {\n        const extendedChangeEvent = {\n            restPath,\n            ...changeEvent\n        };\n        const { previousValue, value } = changeEvent;\n\n        // removes listener for all branches of the path on old object\n        if (previousValue && typeof previousValue === 'object') {\n            removeTreeListener(previousValue, restPath, handler);\n        }\n\n        // adds listener for all branches of \"restPath\" path on newly assigned object\n        if (value && typeof value === 'object') {\n            addTreeListener(value, restPath, handler);\n        }\n\n        // call original handler\n        handler.call(this, extendedChangeEvent);\n    };\n\n    newHandler._callback = handler;\n\n    return newHandler;\n}\n\n// listens changes for all branches of given path\n// TODO: Pass context to addTreeListener\n// one of the most hard functions to understand\nexport default function addTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over all keys and delegate listener for all objects of given branch\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice method is slow\n        const listenPath = deepPath.slice(0, i);\n        const restPath = deepPath.slice(i + 1);\n\n        delegateListener(\n            object,\n            listenPath,\n            `_change:tree:${deepPath[i]}`,\n            createTreeListener({\n                handler,\n                restPath\n            })\n        );\n    }\n}\n","// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds.\n// (c) https://davidwalsh.name/javascript-debounce-function\n\nexport default function debounce(func, givenDelay, thisArg) {\n    let timeout;\n    let delay;\n    if (typeof givenDelay !== 'number') {\n        thisArg = givenDelay; // eslint-disable-line no-param-reassign\n        delay = 0;\n    } else {\n        delay = givenDelay || 0;\n    }\n\n    return function debounced() {\n        const args = arguments;\n        const callContext = thisArg || this;\n\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => func.apply(callContext, args), delay);\n    };\n}\n","// converts HTML string to NodeList instance\nexport default function html2nodeList(givenHTML) {\n    // wrapMap is taken from jQuery\n    const wrapMap = {\n        option: [1, '<select multiple=\"multiple\">', '</select>'],\n        legend: [1, '<fieldset>', '</fieldset>'],\n        thead: [1, '<table>', '</table>'],\n        tr: [2, '<table><tbody>', '</tbody></table>'],\n        td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n        area: [1, '<map>', '</map>'],\n        _: [0, '', '']\n    };\n\n    const html = givenHTML.replace(/^\\s+|\\s+$/g, '');\n    let node = window.document.createElement('div');\n    let i;\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    const ex = /<([\\w:]+)/.exec(html);\n    const wrapper = (ex && wrapMap[ex[1]]) || wrapMap._;\n\n    node.innerHTML = wrapper[1] + html + wrapper[2];\n\n    i = wrapper[0];\n\n    while (i) {\n        i -= 1;\n        node = node.children[0];\n    }\n\n    return node.childNodes;\n}\n","// determines whether two values are the same value\n/* istanbul ignore next */\n// eslint-disable-next-line\nconst isPolyfill = (v1, v2) => v1 === 0 && v2 === 0 ? 1 / v1 === 1 / v2 : v1 !== v1 && v2 !== v2 || v1 === v2;\n\nexport default Object.is || isPolyfill;\n","import initMK from './_core/init';\nimport defineProp from './_core/defineprop';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport set from './set';\nimport defiError from './_helpers/defierror';\n\n// creates property mediator\nfunction createMediator({\n    object,\n    propDef,\n    key,\n    mediator\n}) {\n    return function propMediator(value) {\n        // args: value, previousValue, key, object itself\n        return mediator.call(object, value, propDef.value, key, object);\n    };\n}\n\n// transforms property value on its changing\nexport default function mediate(object, givenKeys, mediator) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'mediate');\n\n    const isKeysArray = givenKeys instanceof Array;\n\n    // allow to use key-mediator object as another method variation\n    if (typeof givenKeys === 'object' && !isKeysArray) {\n        nofn.forOwn(givenKeys, (objVal, objKey) => mediate(object, objKey, objVal));\n        return object;\n    }\n\n    initMK(object);\n\n    // allow to use both single key and an array of keys\n    const keys = isKeysArray ? givenKeys : [givenKeys];\n\n    nofn.forEach(keys, (key) => {\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('mediate:key_type', { key });\n        }\n\n        const propDef = defineProp(object, key);\n\n        const propMediator = propDef.mediator = createMediator({\n            object,\n            propDef,\n            key,\n            mediator\n        });\n\n        // set new value\n        set(object, key, propMediator(propDef.value), {\n            fromMediator: true\n        });\n    });\n\n    return object;\n}\n","import unbindNode from './unbindnode';\nimport triggerOne from './trigger/_triggerone';\nimport removeListener from './off/_removelistener';\nimport defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport defiError from './_helpers/defierror';\n\n// removes a property, its bindings and its events\n// TODO: remove function does not correctly removes delegated events, bindings, tree listeners etc\nexport default function remove(object, givenKey, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'remove');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n    const { silent } = eventOptions;\n    // allow to pass single key or an array of keys\n    const keys = givenKey instanceof Array ? givenKey : [givenKey];\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('remove:key_type', { key });\n        }\n\n        const props = def && def.props;\n        const propDef = props && props[key];\n\n        // if no object definition then simply delete the property\n        if (!propDef) {\n            delete object[key];\n            continue;\n        }\n\n        const { value } = propDef;\n\n        // remove all bindings\n        unbindNode(object, key);\n\n        // TODO: Manual listing of event prefixes may cause problems in future\n        const removeEventPrefies = [\n            '_change:deps',\n            '_change:bindings',\n            '_change:delegated',\n            '_change:tree',\n            'change',\n            'beforechange',\n            'bind',\n            'unbind'\n        ];\n\n        // remove all events\n        nofn.forEach(removeEventPrefies, prefix => removeListener(object, `${prefix}:${key}`));\n\n        // delete property definition\n        delete props[key];\n\n        // delete the property itself\n        delete object[key];\n\n        const extendedEventOptions = {\n            key,\n            value,\n            ...eventOptions\n        };\n\n        // trigger delegated events logic removal for asterisk events (*.*.*@foo)\n        triggerOne(object, '_delete:delegated', extendedEventOptions);\n\n        // fire events if \"silent\" is not true\n        if (!silent) {\n            triggerOne(object, 'delete', extendedEventOptions);\n            triggerOne(object, `delete:${key}`, extendedEventOptions);\n        }\n    }\n}\n","import bindNode from './bindnode';\n\n// TODO: Adds a binding, not throwing an error when a node is missing\nexport default function bindOptionalNode() {\n    // this hack allows to keep bindOptionalNode as compact as possible\n    // and doesn't require to flip args and support all bindNode variations\n    bindNode.temporaryOptionalFlag = true;\n    return bindNode.apply(this, arguments);\n}\n","import defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\n\n// the function returns bound node(s)\nexport default function bound(object, key, { all } = { all: false }) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bound');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return all ? [] : null;\n    }\n\n    const def = defs.get(object);\n    const propDef = def.props[key];\n\n    let nodes;\n\n    if (propDef) {\n        const { bindings } = propDef;\n        nodes = (bindings && bindings.map(({ node }) => node)) || [];\n    } else {\n        nodes = [];\n    }\n\n    return all ? nodes : nodes[0] || null;\n}\n","// returns a function which is called when property value is changed\nexport default function createObjectHandler({\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function objectHandler(eventOptions = {}) {\n        const { value } = propDef;\n        const { onChangeValue, changedNode, binder: evtBinder } = eventOptions;\n        const { setValue } = binder;\n        // dirty hack for https://github.com/matreshkajs/matreshka/issues/19\n        const dirtyHackValue = onChangeValue === 'string' && typeof value === 'number'\n            ? `${value}` : value;\n\n        // don't call setValue if a property is changed via getValue of the same binder\n        if (changedNode === node && onChangeValue === dirtyHackValue && evtBinder === binder) {\n            return;\n        }\n\n        setValue.call(node, value, {\n            value,\n            ...bindingOptions\n        });\n    };\n}\n","import is from '../_helpers/is';\nimport set from '../set';\n\n// returns a function which called when bound node state is changed (eg DOM event is fired)\nexport default function createNodeHandler({\n    object,\n    key,\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function nodeHandler(domEvent = {}) {\n        // nodeHandler.disabled = true is set in unbindNode\n        // we cannot \"turn off\" binder.on when its value is a function\n        // developer needs to clean memory (\"turn off\" callback) manualy in binder.destroy\n        if (nodeHandler.disabled) {\n            return;\n        }\n\n        const previousValue = propDef.value;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n        const { getValue } = binder;\n        const value = getValue.call(node, {\n            previousValue,\n            domEvent,\n            originalEvent: domEvent.originalEvent || domEvent, // jQuery thing\n            // will throw \"preventDefault is not a function\" when domEvent is empty object\n            preventDefault: () => domEvent.preventDefault(),\n            // will throw \"stopPropagation is not a function\" when domEvent is empty object\n            stopPropagation: () => domEvent.stopPropagation(),\n            which,\n            target,\n            ctrlKey,\n            altKey,\n            ...bindingOptions\n        });\n\n        if (!is(value, previousValue)) {\n            set(object, key, value, {\n                fromNode: true,\n                // the following properties are needed to avoid circular changes\n                // they are used at objectHandler\n                changedNode: node,\n                onChangeValue: value,\n                binder\n            });\n        }\n    };\n}\n","// returns a binder for output element\nexport default function output() {\n    return {\n        on: null,\n        getValue() {\n            return this.value || this.textContent;\n        },\n        setValue(value) {\n            const property = 'form' in this ? 'value' : 'textContent';\n            this[property] = value === null ? '' : `${value}`;\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function progress() {\n    return input();\n}\n","// returns a binder for select element\nexport default function select(multiple) {\n    if (multiple) {\n        return {\n            on: 'change',\n            getValue() {\n                const { options } = this;\n                const result = [];\n\n                for (let i = 0; options.length > i; i++) {\n                    if (options[i].selected) {\n                        result.push(options[i].value);\n                    }\n                }\n\n                return result;\n            },\n            setValue(givenValue) {\n                const { options } = this;\n                const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    options[i].selected = ~value.indexOf(options[i].value);\n                }\n            }\n        };\n    }\n\n    return {\n        on: 'change',\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n\n            if (!value) {\n                const { options } = this;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    if (!options[i].value) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function textarea() {\n    // textarea behaves just like text input\n    return input('text');\n}\n","import input from './binders/input';\nimport textarea from './binders/textarea';\nimport select from './binders/select';\nimport progress from './binders/progress';\nimport output from './binders/output';\n\n// defaultBinders collection by default contains only one function-checker\nexport default [(node) => {\n    switch (node.tagName) {\n        case 'INPUT':\n            return input(node.type);\n        case 'TEXTAREA':\n            return textarea();\n        case 'SELECT':\n            return select(node.multiple);\n        case 'PROGRESS':\n            return progress();\n        case 'OUTPUT':\n            return output();\n        default:\n            return null;\n    }\n}];\n","import defaultBinders from './defaultbinders';\n\n// tries to find a binder for given node\nexport default function lookForBinder(node) {\n    for (let i = 0; i < defaultBinders.length; i++) {\n        const binder = defaultBinders[i].call(node, node);\n        if (binder) {\n            return binder;\n        }\n    }\n\n    return undefined;\n}\n","import lookForBinder from '../lookforbinder';\nimport createNodeHandler from './_createnodehandler';\nimport createObjectHandler from './_createobjecthandler';\nimport triggerOne from '../trigger/_triggerone';\nimport addListener from '../on/_addlistener';\nimport debounce from '../_helpers/debounce';\n\nconst spaceReg = /\\s+/;\n\n// handles binding for single property & node\n// the function is used at bindNode\nexport default function bindSingleNode(object, {\n    binder: givenBinder,\n    key,\n    $nodes,\n    node,\n    eventOptions,\n    propDef\n}) {\n    const {\n        silent,\n        getValueOnBind,\n        setValueOnBind,\n        // TODO: We probably need some general flag to cancel or force debouncing\n        // ... which overrides the following flags (something like debounceBinding)\n        debounceSetValue = true,\n        debounceGetValue = true,\n        debounceSetValueOnBind = false,\n        debounceGetValueOnBind = false,\n        debounceSetValueDelay = 0,\n        debounceGetValueDelay = 0,\n        useExactBinder = false\n    } = eventOptions;\n    // create bindings array in property definition object\n    const bindings = propDef.bindings = propDef.bindings || [];\n    const { value } = propDef;\n    const bindingOptions = {\n        self: object,\n        key,\n        value,\n        $nodes,\n        node\n    };\n    let isUndefined = typeof value === 'undefined';\n    let binder;\n    let objectHandler;\n    let nodeHandler;\n\n    // get actual binder\n    if (givenBinder !== null) {\n        // by default binder passed to bindNode is extended by default binder\n        // useExactBinder turns this behavior off\n        if (useExactBinder) {\n            binder = givenBinder;\n        } else {\n            // getting default binder\n            const foundBinder = lookForBinder(node);\n\n            // if default binder is found\n            if (foundBinder) {\n                // extend found binder by given binder\n                if (givenBinder) {\n                    nofn.assign(foundBinder, givenBinder);\n                }\n\n                binder = foundBinder;\n            } else {\n                // default binder is not found\n                binder = givenBinder || {};\n            }\n        }\n    }\n\n    const {\n        getValue, setValue, on, initialize\n    } = binder;\n\n    // call binder.initialize\n    if (initialize) {\n        initialize.call(node, bindingOptions);\n    }\n\n    // add needed event handlers to given node when getValue is given\n    if (getValue) {\n        const syncNodeHandler = createNodeHandler({\n            object,\n            key,\n            node,\n            propDef,\n            binder,\n            bindingOptions\n        });\n\n        let debouncedNodeHandler;\n\n        if (debounceGetValue || debounceGetValueOnBind) {\n            debouncedNodeHandler = debounce(syncNodeHandler, debounceGetValueDelay);\n        }\n\n        if (debounceGetValue) {\n            nodeHandler = debouncedNodeHandler;\n        } else {\n            nodeHandler = syncNodeHandler;\n        }\n\n        // TODO: Throw error when \"on\" and maybe other binder properties has wrong type\n        if (typeof on === 'function') {\n            on.call(node, nodeHandler, bindingOptions);\n        } else if (typeof on === 'string') {\n            // addEventListener is faster than \"on\" method from any DOM library\n            nofn.forEach(\n                on.split(spaceReg),\n                evtName => node.addEventListener(evtName, nodeHandler)\n            );\n        }\n\n        if ((isUndefined && getValueOnBind !== false) || getValueOnBind === true) {\n            if (debounceGetValueOnBind) {\n                debouncedNodeHandler();\n            } else {\n                syncNodeHandler();\n            }\n        }\n\n        isUndefined = typeof propDef.value === 'undefined';\n    }\n\n    // add needed event handlers to the object when setValue is given\n    if (setValue) {\n        const syncObjectHandler = createObjectHandler({\n            node,\n            propDef,\n            binder,\n            bindingOptions,\n            eventOptions\n        });\n\n        let debouncedObjectHandler;\n\n        if (debounceSetValue || debounceSetValueOnBind) {\n            debouncedObjectHandler = debounce(syncObjectHandler, debounceSetValueDelay);\n        }\n\n        if (debounceSetValue) {\n            objectHandler = debouncedObjectHandler;\n        } else {\n            objectHandler = syncObjectHandler;\n        }\n\n        // TODO: Is it possible to get previous value of a property?\n        addListener(object, `_change:bindings:${key}`, objectHandler, null, { skipChecks: true });\n\n        if ((!isUndefined && setValueOnBind !== false) || setValueOnBind === true) {\n            if (debounceSetValueOnBind) {\n                debouncedObjectHandler();\n            } else {\n                syncObjectHandler();\n            }\n        }\n    }\n\n    // add binding data to bindings array\n    bindings.push({\n        on,\n        node,\n        binder,\n        objectHandler,\n        nodeHandler,\n        bindingOptions\n    });\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `bind:${key}`, extendedEventOptions);\n        triggerOne(object, 'bind', extendedEventOptions);\n    }\n}\n","import removeListener from '../off/_removelistener';\nimport triggerOne from '../trigger/_triggerone';\n\nconst spaceReg = /\\s+/;\n\n// the function removes single binding for single object\n// called by unbindNode\nexport default function removeBinding({\n    object,\n    key,\n    eventOptions,\n    binding\n}) {\n    const {\n        bindingOptions,\n        binder,\n        node,\n        nodeHandler,\n        objectHandler\n    } = binding;\n    const { destroy, on } = binder;\n    const { silent } = eventOptions;\n\n    // if \"on\" is a function then disable it\n    // we cannot \"turn off\" custom listener defined by a programmer\n    // programmer needs to remove custom listener maually inside binder.destroy\n    if (typeof on === 'function') {\n        nodeHandler.disabled = true;\n    } else if (typeof on === 'string') {\n        // remove DOM event listener\n        // removeEventListener is faster than \"on\" method from any DOM library\n        nofn.forEach(\n            on.split(spaceReg),\n            evtName => node.removeEventListener(evtName, nodeHandler)\n        );\n    }\n\n    // remove object event listener\n    removeListener(object, `_change:bindings:${key}`, objectHandler);\n\n    // if binder.destroy is given call it\n    if (destroy) {\n        destroy.call(node, bindingOptions);\n    }\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `unbind:${key}`, extendedEventOptions);\n        triggerOne(object, 'unbind', extendedEventOptions);\n    }\n}\n","import unbindNode from '../unbindnode';\n\n// returns a function which re-adds binding when object branch is changed\n// the function is called by bindNode when something like\n// 'foo.bar.baz' is passed to it as key argument value\n// this is one of the hardest things in the framework to understand\nexport default function createBindingSwitcher({\n    object,\n    deepPath,\n    $nodes,\n    binder,\n    eventOptions,\n    bindNode\n}) {\n    return function bindingSwitcher(changeEvent = {}) {\n        const deepPathLength = deepPath.length;\n        const lastDeepPathItem = deepPath[deepPathLength - 1];\n        const {\n            value, // new value of a branch\n            previousValue, // previous value of a branch\n            restPath // path starting currently changed branch (passed by addTreeListener)\n        } = changeEvent;\n        let target; // an object to call bindNode\n        let previousTarget; // an object to call unbindNode\n\n\n        if (value && typeof value === 'object' && restPath) {\n            // if rest path is given and new value is an object\n            target = value;\n            for (let i = 0; i < restPath.length; i++) {\n                target = target[restPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        } else {\n            // if rest path is not given\n            target = object;\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                target = target[deepPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        }\n\n        // if rest path is given and previous value is an object\n        if (previousValue && typeof previousValue === 'object' && restPath) {\n            previousTarget = previousValue;\n            for (let i = 0; i < restPath.length; i++) {\n                previousTarget = previousTarget[restPath[i]];\n                if (!previousTarget) {\n                    break;\n                }\n            }\n        }\n\n        // add binding for new target\n        if (target && typeof target === 'object') {\n            bindNode(target, lastDeepPathItem, $nodes, binder, eventOptions);\n        }\n\n        // remove binding for previously used object\n        if (previousTarget && typeof previousTarget === 'object') {\n            unbindNode(previousTarget, lastDeepPathItem, $nodes);\n        }\n    };\n}\n","// cheap conversion of an array-like object to Array instance\nexport default function toArray(object, start = 0) {\n    const { length } = object;\n    const array = Array(length);\n\n    for (let i = start; i < length; i++) {\n        array[i - start] = object[i];\n    }\n\n    return array;\n}\n","import defs from '../_core/defs';\nimport toArray from '../_helpers/toarray';\nimport $ from '../_mq';\n\nconst customSelectorReg = /\\s*:bound\\(([^(]*)\\)\\s*([\\S\\s]*)\\s*/;\nconst randomAttr = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// the function selects nodes based on a selector (including custom values, eg :bound)\n// TODO: selectNodes looks not good, it needs to be refactored and accelerated if possible\nexport default function selectNodes(object, givenSelector) {\n    const { props } = defs.get(object);\n    const selectors = givenSelector.split(',');\n    let result = $();\n\n    nofn.forEach(selectors, (selector) => {\n        const execResult = customSelectorReg.exec(selector);\n        if (execResult) {\n            const boundKey = execResult[1];\n            const subSelector = execResult[2];\n            const propDef = props[boundKey];\n\n            if (propDef) {\n                const { bindings } = propDef;\n                if (bindings) {\n                    const boundNodes = Array(bindings.length);\n                    nofn.forEach(bindings, (binding, i) => {\n                        boundNodes[i] = binding.node;\n                    });\n\n                    // if native selector passed after :bound(KEY) is not empty string\n                    // for example \":bound(KEY) .my-selector\"\n                    if (subSelector) {\n                        // if native selector contains children selector\n                        // for example \":bound(KEY) > .my-selector\"\n                        if (subSelector.indexOf('>') === 0) {\n                            // selecting children\n                            nofn.forEach(boundNodes, (node) => {\n                                node.setAttribute(randomAttr, randomAttr);\n                                const selected = node.querySelectorAll(`[${randomAttr}=\"${randomAttr}\"] ${subSelector}`);\n                                result = result.add(toArray(selected));\n                                node.removeAttribute(randomAttr);\n                            });\n                        } else {\n                            // if native selector doesn't contain children selector\n                            nofn.forEach(boundNodes, (node) => {\n                                const selected = node.querySelectorAll(subSelector);\n                                result = result.add(toArray(selected));\n                            });\n                        }\n                    } else {\n                        // if native selector is empty string just add bound nodes to result\n                        result = result.add(boundNodes);\n                    }\n                }\n            }\n        } else {\n            // if it's native selector (no custom things)\n            result = result.add(selector);\n        }\n    });\n\n    return result;\n}\n","// gets value of a property in nested object\n// eg \"d\" from a.b.c.d\nexport default function deepFind(obj, givenPath) {\n    const paths = typeof givenPath === 'string' ? givenPath.split('.') : givenPath;\n    let current = obj;\n\n    for (let i = 0; i < paths.length; ++i) {\n        if (typeof current[paths[i]] === 'undefined') {\n            return undefined;\n        }\n\n        current = current[paths[i]];\n    }\n\n    return current;\n}\n","import set from '../set';\nimport deepFind from '../_helpers/deepfind';\n\n// creates event handler for target object which will be fired when a source is changed\nexport default function createCalcHandler({\n    object,\n    eventOptions,\n    allSources,\n    target,\n    def,\n    handler\n}) {\n    return function calcHandler(changeEvent = {}) {\n        const values = [];\n        const { protector = {} } = changeEvent;\n        const protectKey = target + def.id;\n        const { promiseCalc } = eventOptions;\n        const setEventOptions = {\n            protector,\n            ...eventOptions,\n            ...changeEvent\n        };\n\n        if (protectKey in protector) {\n            return;\n        }\n\n        protector[protectKey] = true;\n\n        nofn.forEach(allSources, ({\n            sourceObject,\n            sourceKey,\n            isDelegated\n        }) => {\n            const value = isDelegated ? deepFind(sourceObject, sourceKey) : sourceObject[sourceKey];\n            values.push(value);\n        });\n\n        let targetValue = handler.apply(object, values);\n\n        if (promiseCalc) {\n            if (!(targetValue instanceof Promise)) {\n                targetValue = Promise.resolve(targetValue);\n            }\n\n            targetValue\n                .then(promiseResult => set(object, target, promiseResult, setEventOptions))\n                .catch((e) => {\n                    throw Error(e);\n                });\n        } else {\n            set(object, target, targetValue, setEventOptions);\n        }\n    };\n}\n","import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport defiError from '../_helpers/defierror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n    calcHandler,\n    allSources,\n    sourceKey,\n    sourceObject,\n    eventOptions\n}) {\n    let { exactKey = false } = eventOptions;\n    let isDelegated = false;\n\n    // source key must be a string\n    if (typeof sourceKey !== 'string') {\n        throw defiError('calc:source_key_type', { sourceKey });\n    }\n\n    // source object must be an object\n    if (!sourceObject || typeof sourceObject !== 'object') {\n        throw defiError('calc:source_object_type', { sourceObject });\n    }\n\n    if (!exactKey) {\n        const deepPath = sourceKey.split('.');\n\n        // if something like a.b.c is used as a key\n        if (deepPath.length > 1) {\n            isDelegated = true;\n            // TODO: Avoid collisions with bindings by using another event name\n            // ... instead of _change:tree:xxx\n            addTreeListener(sourceObject, deepPath, calcHandler);\n        } else {\n            exactKey = true;\n        }\n    }\n\n\n    if (exactKey) {\n        // normal handler\n        addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n    }\n\n    allSources.push({\n        sourceKey,\n        sourceObject,\n        isDelegated\n    });\n}\n","import initMK from '../_core/init';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport debounce from '../_helpers/debounce';\nimport addSource from './_addsource';\nimport createCalcHandler from './_createcalchandler';\nimport defineProp from '../_core/defineprop';\n\n// defines a property which is dependend on other properties\nexport default function calc(object, target, sources, givenHandler, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'calc');\n\n    if (target instanceof Object) {\n        /*\n         * accept an object\n         * this.calc({target: { source, handler, event } }, commonEventOptions);\n         */\n        nofn.forOwn(target, ({\n            source: itemSource,\n            handler: itemHandler,\n            event: itemEventOptions\n        }, itemTarget) => {\n            const commonEventOptions = sources;\n            const mergedEventOptions = {};\n\n            if (commonEventOptions) {\n                // extend event object by \"global\" event\n                nofn.assign(mergedEventOptions, commonEventOptions);\n            }\n\n            if (itemEventOptions) {\n                // extend event object by \"local\" event (\"event\" key of an object)\n                nofn.assign(mergedEventOptions, itemEventOptions);\n            }\n\n            calc(object, itemTarget, itemSource, itemHandler, mergedEventOptions);\n        });\n\n        return object;\n    }\n\n    if (typeof target !== 'string') {\n        throw defiError('calc:target_type', { target });\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = initMK(object);\n    const {\n        setOnInit = true,\n        debounceCalcOnInit = false,\n        debounceCalc = true,\n        debounceCalcDelay = 0,\n        // the next option is used to hide a property for internal use (eg in bindings parser)\n        // hidden property means no accessors\n        isTargetPropertyHidden = false\n    } = eventOptions;\n    const defaultHandler = value => value;\n    const handler = givenHandler || defaultHandler;\n    const allSources = [];\n    const syncCalcHandler = createCalcHandler({\n        object,\n        eventOptions,\n        allSources,\n        target,\n        def,\n        handler\n    });\n\n    let debouncedCalcHandler;\n    let calcHandler;\n\n    if (debounceCalcOnInit || debounceCalc) {\n        debouncedCalcHandler = debounce(syncCalcHandler, debounceCalcDelay);\n    }\n\n    defineProp(object, target, isTargetPropertyHidden);\n\n    if (!(sources instanceof Array)) {\n        sources = [sources]; // eslint-disable-line no-param-reassign\n    }\n\n    if (debounceCalc) {\n        calcHandler = debouncedCalcHandler;\n    } else {\n        calcHandler = syncCalcHandler;\n    }\n\n    nofn.forEach(sources, (source) => {\n        if (typeof source === 'string') {\n            // source object is current object\n            addSource({\n                calcHandler,\n                allSources,\n                sourceKey: source,\n                sourceObject: object,\n                eventOptions\n            });\n        } else {\n            // source object is external object\n            if (!source || typeof source !== 'object') {\n                throw defiError('calc:source_type', { source });\n            }\n\n            const sourceKey = source.key;\n            const sourceObject = source.object;\n            if (sourceKey instanceof Array) {\n                // many keys are passed\n                nofn.forEach(sourceKey, (sourceKeyItem) => {\n                    addSource({\n                        calcHandler,\n                        allSources,\n                        sourceKey: sourceKeyItem,\n                        sourceObject,\n                        eventOptions\n                    });\n                });\n            } else {\n                // one key is passed\n                addSource({\n                    calcHandler,\n                    allSources,\n                    sourceKey,\n                    sourceObject,\n                    eventOptions\n                });\n            }\n        }\n    });\n\n    if (setOnInit) {\n        if (debounceCalcOnInit) {\n            debouncedCalcHandler();\n        } else {\n            syncCalcHandler();\n        }\n    }\n\n    return object;\n}\n","// triggers given DOM event on given node\nexport default function triggerOneDOMEvent({\n    node,\n    eventName,\n    triggerArgs\n}) {\n    const { document, Event } = window;\n    let event;\n\n    // polyfill for older browsers\n    if (document.createEvent) {\n        /* istanbul ignore next */\n        event = document.createEvent('Event');\n        event.initEvent(eventName, true, true);\n    } else if (typeof Event !== 'undefined') {\n        event = new Event(eventName, {\n            bubbles: true,\n            cancelable: true\n        });\n    }\n\n    // matreshkaTriggerArgs will be used in a handler created by addDOMListener\n    event.matreshkaTriggerArgs = triggerArgs;\n\n    node.dispatchEvent(event);\n}\n","import triggerOneDOMEvent from './_triggeronedomevent';\nimport defs from '../_core/defs';\n\n// triggers DOM event on bound nodes\nexport default function triggerDOMEvent(object, key, eventName, selector, triggerArgs) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return;\n    }\n\n    const { bindings } = propDef;\n\n    if (!bindings) {\n        return;\n    }\n\n    nofn.forEach(bindings, ({ node }) => {\n        if (selector) {\n            // if selector is given trigger an event on all node descendants\n            const descendants = node.querySelectorAll(selector);\n            nofn.forEach(descendants, (descendant) => {\n                triggerOneDOMEvent({\n                    node: descendant,\n                    eventName,\n                    triggerArgs\n                });\n            });\n        } else {\n            // trigger an event for single node\n            triggerOneDOMEvent({\n                node,\n                eventName,\n                triggerArgs\n            });\n        }\n    });\n}\n","import domEventReg from '../on/_domeventregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport defs from '../_core/defs';\nimport triggerOne from './_triggerone';\nimport triggerDomEvent from './_triggerdomevent';\n\n// triggers an event\nexport default function trigger(object, givenNames, ...triggerArgs) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'trigger');\n    let names;\n\n    // allow to use strings only as event name\n    if (typeof givenNames === 'string') {\n        names = givenNames.split(splitBySpaceReg);\n    } else {\n        throw defiError('trigger:names_type', { names: givenNames });\n    }\n\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return object;\n    }\n\n    const { events: allEvents } = def;\n\n    if (!allEvents) {\n        return object;\n    }\n\n    nofn.forEach(names, (name) => {\n        const domEvtExecResult = domEventReg.exec(name);\n\n        if (domEvtExecResult) {\n            // if EVT::KEY(SELECTOR) ia passed as event name then trigger DOM event\n            const [, eventName, key, selector] = domEvtExecResult;\n            triggerDomEvent(object, key, eventName, selector, triggerArgs);\n        } else {\n            // trigger ordinary event\n            triggerOne(object, name, triggerArgs);\n        }\n    });\n\n    return object;\n}\n","import splitBySpaceReg from '../on/_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport undelegateListener from './_undelegatelistener';\nimport $ from '../_mq';\n\n// removes event listener\nexport default function off(object, givenNames, callback, context) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'off');\n\n    const isNamesVarArray = givenNames instanceof Array;\n    const def = defs.get(object);\n\n    // allow to pass name-handler object\n    // TODO: Name-handler object passed to off method is non-documented feature\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        nofn.forOwn(givenNames, (namesObjCallback, namesObjName) =>\n            off(object, namesObjName, namesObjCallback, callback));\n        return object;\n    }\n\n\n    if (!givenNames && !callback && !context) {\n        def.events = {};\n\n        nofn.forOwn(def.props, ({ bindings }, propName) => {\n            if (bindings) {\n                nofn.forEach(bindings, ({ node }) => {\n                    const eventNamespace = def.id + propName;\n                    $(node).off(`.${eventNamespace}`);\n                });\n            }\n        });\n\n        return object;\n    }\n\n    // TODO: Array of names passed to off method is non-documented feature\n    // split by spaces\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    nofn.forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n        if (delegatedEventParts.length > 1) {\n            const [path, delegatedName] = delegatedEventParts;\n            undelegateListener(object, path, delegatedName, callback, context);\n        } else {\n            removeListener(object, name, callback, context);\n        }\n    });\n\n    return object;\n}\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport $ from '../_mq';\n\n// removes dom listener from nodes bound to given key\nexport default function removeDomListener(\n    object,\n    key,\n    eventName,\n    selector,\n    callback,\n    context,\n    info\n) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // collect bound nodes and remove DOM event listener\n        const nodes = Array(bindings.length);\n        const eventNamespace = def.id + key;\n\n        nofn.forEach(bindings, (binding, index) => {\n            nodes[index] = binding.node;\n        });\n\n        $(nodes).off(`${eventName}.${eventNamespace}`, selector, callback);\n    }\n\n    // remove bind and unbind listeners from given key\n    removeListener(object, `bind:${key}`, callback, context, info);\n    removeListener(object, `unbind:${key}`, callback, context, info);\n\n    return object;\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\n\n// the function is called when some part of a path is changed\n// it delegates event listener for new branch of an object and undelegates it for old one\n// used for non-asterisk events\nexport default function changeHandler({\n    previousValue,\n    value\n}, {\n    path,\n    name,\n    callback,\n    context,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (value && typeof value === 'object') {\n        const delegateListener = require('./'); // fixing circular ref\n\n        delegateListener(value, path, name, callback, context, info);\n    }\n\n    if (previousValue && typeof previousValue === 'object') {\n        undelegateListener(previousValue, path, name, callback, context, info);\n    }\n}\n","// returns DOM event handler\nexport default function createDomEventHandler({\n    key,\n    object,\n    callback,\n    context\n}) {\n    return function domEventHandler(domEvent) {\n        const originalEvent = domEvent.originalEvent || domEvent;\n        // matreshkaTriggerArgs are created when DOM event is triggered by trigger method\n        const triggerArgs = originalEvent.matreshkaTriggerArgs;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n\n        if (triggerArgs) {\n            // if args are passed to trigger method then pass them to an event handler\n            callback.apply(context, triggerArgs);\n        } else {\n            // use the following object as an arg for event handler\n            callback.call(context, {\n                self: object,\n                node: this,\n                preventDefault: () => domEvent.preventDefault(),\n                stopPropagation: () => domEvent.stopPropagation(),\n                key,\n                domEvent,\n                originalEvent,\n                which,\n                target,\n                ctrlKey,\n                altKey\n            });\n        }\n    };\n}\n","// Object.assign polyfyll\n/* istanbul ignore next */\nconst assign = Object.assign || function assign(target) {\n    /* istanbul ignore next */\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert variable to object');\n    }\n\n    const output = Object(target);\n\n    for (let index = 1; index < arguments.length; index++) {\n        const source = arguments[index];\n        if (source !== undefined && source !== null) {\n            nofn.forOwn(source, (nextValue, nextKey) => {\n                output[nextKey] = nextValue;\n            });\n        }\n    }\n\n    return output;\n};\n\nexport default assign;\n","import Init from './_init';\nimport data from './_data';\n\n// adds unique nodes to mq collection\nexport default function add(selector) {\n    const idMap = {};\n\n    let result;\n\n    const nodes = new Init(selector);\n\n    if (this.length) {\n        result = new Init();\n        for (let i = 0; i < this.length; i++) {\n            const node = this[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            idMap[nodeID] = 1;\n            result.push(node);\n        }\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            if (!idMap[nodeID]) {\n                idMap[nodeID] = 1;\n                result.push(node);\n            }\n        }\n    } else {\n        result = nodes;\n    }\n\n    return result;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\n\n// removes event handler from a set of elements\nexport default function off(namesStr, selector, handler) {\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    const names = namesStr.split(splitBySpaceReg);\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n\n            if (!name && namespace) {\n                for (let k = 0, keys = Object.keys(data.allEvents); k < keys.length; k++) {\n                    const events = data.allEvents[keys[k]];\n\n                    for (let l = 0; l < events.length; l++) {\n                        const event = events[i];\n                        if (event.namespace === namespace && event.nodeID === node.b$) {\n                            node.removeEventListener(event.name, event.delegate || event.handler);\n                            events.splice(l, 1);\n                            l -= 1;\n                        }\n                    }\n                }\n\n                continue;\n            }\n\n            const events = data.allEvents[name + node.b$];\n            if (events) {\n                for (let k = 0; k < events.length; k++) {\n                    const event = events[k];\n                    if (\n                        (!handler || handler === event.handler || handler === event.delegate)\n                        && (!namespace || namespace === event.namespace)\n                        && (!selector || selector === event.selector)\n                    ) {\n                        node.removeEventListener(name, event.delegate || event.handler);\n                        events.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n            } else if (!namespace && !selector) {\n                node.removeEventListener(name, handler);\n            }\n        }\n    }\n\n    return this;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n    return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n    const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n    const splittedSelector = selector.split(',');\n\n    let matching = '';\n\n    for (let i = 0; i < splittedSelector.length; i++) {\n        const sel = splittedSelector[i];\n        matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n    }\n\n\n    this.setAttribute(randomID, randomID);\n\n    if (is(evt.target, matching)) {\n        handler.call(this, evt);\n    }\n\n    this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n    const names = namesStr.split(splitBySpaceReg);\n    let delegate;\n\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (selector) {\n        delegate = function uniqueDelegateHandler(evt) {\n            delegateHandler.call(this, evt, selector, handler);\n        };\n    }\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n            let exist = false;\n\n            for (let k = 0; k < events.length; k++) {\n                const event = events[k];\n\n                if (handler === event.handler && (!selector || selector === event.selector)) {\n                    exist = true;\n                    break;\n                }\n            }\n\n            if (!exist) {\n                events.push({\n                    delegate,\n                    handler,\n                    namespace,\n                    selector,\n                    nodeID,\n                    name\n                });\n\n                node.addEventListener(name, delegate || handler, false);\n            }\n        }\n    }\n\n    return this;\n}\n","import html2nodeList from './_html2nodelist';\nimport Init from './_init';\n\n// parses given HTML and returns mq instance\nexport default function parseHTML(html) {\n    return new Init(html2nodeList(html));\n}\n","import initMK from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport addListener from './_addlistener';\nimport $ from '../_mq';\nimport createDomEventHandler from './_createdomeventhandler';\n\n// returns an object with event handlers used at addDomListener\nfunction createBindingHandlers({\n    fullEventName,\n    domEventHandler,\n    selector\n}) {\n    return {\n        bindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).on(fullEventName, selector, domEventHandler);\n            }\n        },\n        unbindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).off(fullEventName, selector, domEventHandler);\n            }\n        }\n    };\n}\n\n// adds DOM event listener for nodes bound to given property\nexport default function addDomListener(object, key, eventName, selector, callback, context, info) {\n    const def = initMK(object);\n    const propDef = defineProp(object, key);\n\n    const domEventHandler = createDomEventHandler({\n        key,\n        object,\n        callback,\n        context: context || object\n    });\n\n    // making possible to remove this event listener\n    domEventHandler._callback = callback;\n\n    const eventNamespace = def.id + key;\n    const fullEventName = `${eventName}.${eventNamespace}`;\n    const { bindHandler, unbindHandler } = createBindingHandlers({\n        fullEventName,\n        domEventHandler,\n        selector\n    });\n    const addBindListenerResult\n        = addListener(object, `bind:${key}`, bindHandler, context, info);\n    const addUnbindListenerResult\n        = addListener(object, `unbind:${key}`, unbindHandler, context, info);\n\n    // if events are added successfully then run bindHandler for every node immediately\n    // TODO: Describe why do we need addBindListenerResult and addUnbindListenerResult\n    if (addBindListenerResult && addUnbindListenerResult) {\n        const { bindings } = propDef;\n        if (bindings) {\n            nofn.forEach(bindings, ({ node }) => bindHandler({ node }));\n        }\n    }\n\n    return object;\n}\n","import splitBySpaceReg from './_splitbyspaceregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport addListener from './_addlistener';\nimport delegateListener from './_delegatelistener';\n\n// adds event listener\nexport default function on(object, givenNames, callback, triggerOnInit, context) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'on');\n\n    const isNamesVarArray = givenNames instanceof Array;\n\n    // allow to pass name-handler object\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        nofn.forOwn(givenNames, (namesObjCallback, namesObjName) =>\n            on(object, namesObjName, namesObjCallback, callback, triggerOnInit));\n        return object;\n    }\n\n    if (typeof givenNames !== 'string' && !isNamesVarArray) {\n        throw defiError('on:names_type', { names: givenNames });\n    }\n\n    // split by spaces\n    // TODO: Array of names passed to on method is non-documented feature\n    const names = isNamesVarArray ? givenNames : givenNames.split(splitBySpaceReg);\n\n    // flip triggerOnInit and context when triggerOnInit is not boolean\n    if (typeof triggerOnInit !== 'boolean' && typeof triggerOnInit !== 'undefined') {\n        // eslint-disable-next-line no-param-reassign\n        [context, triggerOnInit] = [triggerOnInit, context];\n    }\n\n    nofn.forEach(names, (name) => {\n        const delegatedEventParts = name.split('@');\n\n        if (delegatedEventParts.length > 1) {\n            // if @ exists in event name then this is delegated event\n            const [path, delegatedName] = delegatedEventParts;\n            delegateListener(object, path, delegatedName, callback, context || object);\n        } else {\n            // if not, this is simple event\n            addListener(object, name, callback, context);\n        }\n    });\n\n    // call callback immediatelly if triggerOnInit is true\n    if (triggerOnInit === true) {\n        callback.call(context || object, { triggerOnInit });\n    }\n\n    return object;\n}\n","import on from './on';\nimport off from './off';\nimport trigger from './trigger';\nimport calc from './calc';\nimport bindNode from './bindnode';\nimport bound from './bound';\nimport unbindNode from './unbindnode';\nimport bindOptionalNode from './bindoptionalnode';\nimport set from './set';\nimport remove from './remove';\nimport mediate from './mediate';\n\n// the following methods can be used as static methods and as instance methods\nexport {\n    on,\n    off,\n    trigger,\n    calc,\n    bindNode,\n    bound,\n    unbindNode,\n    bindOptionalNode,\n    set,\n    remove,\n    mediate\n};\n","import * as functions from './_lib';\n\nmodule.exports = functions;\n"],"sourceRoot":""}