{"version":3,"sources":["webpack://defi/webpack/universalModuleDefinition","webpack://defi/webpack/bootstrap","webpack://defi/./src/_helpers/foreach.js","webpack://defi//Users/finom/Work/defi/node_modules/@babel/runtime/helpers/typeof.js","webpack://defi/./src/trigger/_triggerone.js","webpack://defi/./src/_core/defs.js","webpack://defi/./src/_helpers/checkobjecttype.js","webpack://defi//Users/finom/Work/defi/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://defi/./src/_helpers/forown.js","webpack://defi/./src/_helpers/defierror.js","webpack://defi//Users/finom/Work/defi/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://defi/./src/_core/init.js","webpack://defi/./src/on/_addlistener.js","webpack://defi/./src/_core/defineprop.js","webpack://defi/./src/set.js","webpack://defi/./src/off/_removelistener.js","webpack://defi/./src/_mq/_html2nodelist.js","webpack://defi/./src/_mq/_init.js","webpack://defi/./src/_mq/_data.js","webpack://defi/./src/_mq/on.js","webpack://defi/./src/_mq/off.js","webpack://defi/./src/_mq/index.js","webpack://defi/./src/_mq/parsehtml.js","webpack://defi/./src/_mq/add.js","webpack://defi/./src/_helpers/assign.js","webpack://defi/./src/on/_domeventregexp.js","webpack://defi/./src/off/_undelegatelistener.js","webpack://defi/./src/on/_delegatelistener/changehandler.js","webpack://defi/./src/on/_delegatelistener/index.js","webpack://defi/./src/_helpers/is.js","webpack://defi/./src/_helpers/slice.js","webpack://defi/./src/index.js","webpack://defi//Users/finom/Work/defi/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://defi//Users/finom/Work/defi/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://defi//Users/finom/Work/defi/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://defi//Users/finom/Work/defi/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://defi//Users/finom/Work/defi/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://defi/./src/off/_removedomlistener.js","webpack://defi/./src/off/index.js","webpack://defi/./src/_helpers/debounce.js","webpack://defi/./src/on/index.js","webpack://defi/./src/trigger/_triggeronedomevent.js","webpack://defi/./src/trigger/index.js","webpack://defi/./src/trigger/_triggerdomevent.js","webpack://defi/./src/off/_removetreelistener.js","webpack://defi/./src/on/_addtreelistener.js","webpack://defi/./src/calc/_addsource.js","webpack://defi/./src/calc/index.js","webpack://defi/./src/calc/_createcalchandler.js","webpack://defi/./src/_helpers/deepfind.js","webpack://defi/./src/bindnode/_selectnodes.js","webpack://defi/./src/bindnode/_getnodes.js","webpack://defi/./src/unbindnode/_removebinding.js","webpack://defi/./src/unbindnode/index.js","webpack://defi/./src/binders/input.js","webpack://defi/./src/defaultbinders.js","webpack://defi/./src/binders/textarea.js","webpack://defi/./src/binders/select.js","webpack://defi/./src/binders/progress.js","webpack://defi/./src/binders/output.js","webpack://defi/./src/lookforbinder.js","webpack://defi/./src/bindnode/_createnodehandler.js","webpack://defi/./src/bindnode/_bindsinglenode.js","webpack://defi/./src/bindnode/_createobjecthandler.js","webpack://defi/./src/bindnode/index.js","webpack://defi/./src/bindnode/_createbindingswitcher.js","webpack://defi/./src/bound.js","webpack://defi/./src/remove.js","webpack://defi/./src/mediate.js","webpack://defi/./src/chain.js","webpack://defi/./src/defi.js","webpack://defi/./src/on/_adddomlistener.js","webpack://defi/./src/on/_createdomeventhandler.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","m","forEach","arr","callback","i","l","length","_typeof","obj","Symbol","iterator","constructor","prototype","triggerOne","object","name","triggerArgs","def","defs","get","events","Array","latestEvent","apply","call","info","WeakMap","checkObjectType","method","typeofObject","o","defiError","key","value","Object","defineProperty","enumerable","configurable","writable","forOwn","keys","getTypeError","variable","variableName","expectedType","bindingErrorPrefix","calcErrorPrefix","errors","node","selectorInfo","target","sourceKey","sourceObject","source","data","getError","Error","arrayWithHoles","require","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","objectId","initDefi","props","id","set","propModEventReg","addListener","allEvents","event","nameIsString","skipChecks","domEventExecResult","domEventReg","exec","eventName","selector","existingEvent","_callback","push","test","defineProp","replace","propDef","mediator","bindings","v","fromSetter","eventOptions","objVal","objKey","skipMediator","fromMediator","force","forceHTML","silent","silentHTML","skipCalc","beforechangeStr","beforechangeEventName","changeBindingsEventName","changeStr","changeEventName","changeDepsEventName","changeDelegatedKeyEventName","changeTreeEventName","changeCommonEventName","previousValue","newValue","is","isChanged","extendedEventOptions","self","triggerChange","removeListener","retain","noTrigger","allEventsItem","allEventsName","removeEventData","argCallback","eventCallback","html2nodeList","givenHTML","wrapMap","option","legend","thead","tr","td","col","area","_","html","document","createElement","optgroup","tbody","tfoot","colgroup","caption","th","ex","wrapper","innerHTML","children","childNodes","MQInit","context","result","newContext","win","nodeType","querySelectorAll","this","nodeIndex","splitBySpaceReg","splitByDotReg","randomID","Math","random","toString","mq","Init","parseHTML","assign","on","namesStr","handler","delegate","names","split","evt","scopeSelector","splittedSelector","matching","sel","setAttribute","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","removeAttribute","namespace","j","nodeID","b$","exist","k","addEventListener","off","removeEventListener","splice","add","idMap","nodes","undelegateListener","givenPath","path","pathStr","delegatedChangeEvtName","delegatedEventName","slice","join","changeHandler","delegatedData","delegateListener","v1","v2","arrLike","start","end","_end","isArray","_arr","_n","_d","_e","_s","_i","next","done","err","arrayLikeToArray","minLen","n","from","len","arr2","TypeError","removeDomListener","eventNamespace","binding","index","$","givenNames","isNamesVarArray","namesObjCallback","namesObjName","propName","delegatedName","delegatedEventParts","debounce","func","givenDelay","thisArg","timeout","delay","args","arguments","callContext","clearTimeout","setTimeout","givenCallback","options","triggerOnInit","debounceOption","once","onceCallback","triggerOneDOMEvent","Event","bubbles","cancelable","defiTriggerArgs","dispatchEvent","trigger","domEvtExecResult","descendants","descendant","removeTreeListener","deepPath","listenedPath","createTreeListener","newHandler","changeEvent","extendedChangeEvent","restPath","addTreeListener","listenPath","addSource","calcHandler","allSources","exactKey","isDelegated","calc","sources","givenHandler","itemTarget","itemSource","itemHandler","itemEventOptions","commonEventOptions","mergedEventOptions","debouncedCalcHandler","setOnInit","debounceCalcOnInit","debounceCalc","debounceCalcDelay","syncCalcHandler","targetValue","values","protector","protectKey","promiseCalc","setEventOptions","paths","current","Promise","resolve","then","promiseResult","e","createCalcHandler","sourceKeyItem","customSelectorReg","randomAttr","htmlReg","getNodes","givenSelector","selectors","boundKey","subSelector","boundNodes","execResult","indexOf","selected","spaceReg","removeBinding","bindingOptions","binder","nodeHandler","objectHandler","destroy","disabled","evtName","unbindNode","itemKey","keyObjValue","keyObjKey","keyObjValueItem","deep","propsItem","propsKey","deepPathLength","$nodes","retainBindings","retainNodes","nodesItem","input","type","getValue","checked","setValue","tagName","multiple","givenValue","textContent","lookForBinder","defaultBinders","createNodeHandler","which","ctrlKey","altKey","domEvent","originalEvent","preventDefault","stopPropagation","fromNode","changedNode","onChangeValue","bindSingleNode","foundBinder","givenBinder","getValueOnBind","setValueOnBind","debounceSetValue","debounceGetValue","debounceSetValueOnBind","debounceGetValueOnBind","debounceSetValueDelay","debounceGetValueDelay","useExactBinder","isUndefined","syncNodeHandler","debouncedNodeHandler","syncObjectHandler","debouncedObjectHandler","initialize","evtBinder","dirtyHackValue","createObjectHandler","bindNode","optional","bindingSwitcher","previousTarget","lastDeepPathItem","oneNode","bound","all","map","remove","givenKey","prefix","mediate","givenKeys","isKeysArray","propMediator","funcNames","functions","funcName","argument","ChainClass","chain","addDomListener","domEventHandler","fullEventName","bindHandler","unbindHandler","addBindListenerResult","addUnbindListenerResult","c","d","getter","r","toStringTag","t","mode","__esModule","ns","create","bind","property","hasOwnProperty","p","s","moduleId","modules"],"mappings":"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","file":"defi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"defi\"] = factory();\n\telse\n\t\troot[\"defi\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","export default function forEach(arr, callback) {\n    let i = 0;\n    const l = arr.length;\n\n    for (; i < l; i++) {\n        callback(arr[i], i);\n    }\n}\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","import defs from '../_core/defs';\n\n// triggers one event\nexport default function triggerOne(object, name, triggerArgs) {\n    const def = defs.get(object);\n    const events = def && def.events[name];\n\n    if (events) {\n        const l = events.length;\n        let i = 0;\n\n        // allow to pass both array of args and single arg as triggerArgs\n        if (triggerArgs instanceof Array) {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.apply(object, triggerArgs);\n                i += 1;\n            }\n        } else {\n            while (i < l) {\n                const event = triggerOne.latestEvent = events[i];\n                const { callback } = event;\n                callback.call(object, triggerArgs);\n                i += 1;\n            }\n        }\n    }\n}\n\n// latestEvent is used as required hack in somemethods\ntriggerOne.latestEvent = {\n    info: {},\n    name: null\n};\n","// object definitions\nexport default new WeakMap();\n","import defiError from './defierror';\n\n// checks type of a variable and throws an error if its type is not an object\nexport default function checkObjectType(object, method) {\n    const typeofObject = object === null ? 'null' : typeof object;\n\n    if (typeofObject !== 'object' && typeofObject !== 'function') {\n        throw defiError('common:object_type', {\n            object,\n            method\n        });\n    }\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","export default function forOwn(obj, callback) {\n    const keys = Object.keys(obj);\n    const l = keys.length;\n    let i = 0;\n    let key;\n\n    while (i < l) {\n        key = keys[i++];\n        callback(obj[key], key);\n    }\n}\n","/* eslint-disable prefer-template, max-len */\nconst bindingErrorPrefix = 'Binding error:';\nconst calcErrorPrefix = 'Calc error:';\n\nconst getType = (variable) => {\n    if (variable === null) {\n        return 'null';\n    }\n\n    return typeof variable;\n};\nconst getTypeError = (variable, variableName, expectedType) => `${variableName} must have type \"${expectedType}\" but got \"${getType(variable)}\" instead.`;\n\nconst errors = {\n    'common:object_type': ({ object, method }) => `Error in ${method}: `\n        + getTypeError(object, 'object', 'object'),\n\n    'binding:node_missing': ({ key, node }) => {\n        const selectorInfo = typeof node === 'string' ? ` (given selector is \"${node}\")` : '';\n        return `${bindingErrorPrefix} node is missing for key \"${key}\"${selectorInfo}.`;\n    },\n    'binding:falsy_key': () => `${bindingErrorPrefix} \"key\" arg cannot be falsy`,\n    'calc:target_type': ({ target }) => `${calcErrorPrefix} ${getTypeError(target, 'target key', 'string')}`,\n    'calc:source_key_type': ({ sourceKey }) => `${calcErrorPrefix} ${getTypeError(sourceKey, 'source key', 'string')}`,\n    'calc:source_object_type': ({ sourceObject }) => `${calcErrorPrefix} ${getTypeError(sourceObject, 'source object', 'object')}`,\n    'calc:source_type': ({ source }) => `${calcErrorPrefix} ${getTypeError(source, 'source', 'object')}`,\n\n    'remove:key_type': ({ key }) => `Error in remove: ${getTypeError(key, 'key', 'string')}`,\n\n    'mediate:key_type': ({ key }) => `Error in mediate: ${getTypeError(key, 'key', 'string')}`\n};\n\nexport default function defiError(key, data) {\n    const getError = errors[key];\n    if (!getError) {\n        /* istanbul ignore next */\n        throw Error(`Unknown error \"${key}\". Please report about this on Github.`);\n    }\n\n    return new Error(getError(data));\n}\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import defs from './defs';\n\nlet objectId = 0;\n\n// this is a common function which associates an object with its defi definition\nexport default function initDefi(object) {\n    let def = defs.get(object);\n    if (!def) {\n        def = {\n            // a property name of \"events\" object is an event name\n            // and a value is an array of event handlers\n            events: {\n                /* example: {\n                    callback: function,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n            },\n            // \"props\" contains special information about properties (getters, setters etc)\n            props: {\n                /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                } */\n            },\n            id: objectId\n        };\n\n        objectId += 1;\n\n        defs.set(object, def);\n    }\n\n    return def;\n}\n","import initDefi from '../_core/init';\nimport triggerOne from '../trigger/_triggerone';\nimport defineProp from '../_core/defineprop';\nimport domEventReg from './_domeventregexp';\n\n// property modifier event regexp\n// eslint-disable-next-line max-len\nconst propModEventReg = /^_change:deps:|^_change:bindings:|^_change:delegated:|^_change:common:|^_change:tree:|^change:|^beforechange:/;\n\n// adds simple event listener\n// used as core of event engine\nexport default function addListener(object, name, callback, info = {}) {\n    const { events: allEvents } = initDefi(object);\n    const events = allEvents[name];\n    const event = {\n        callback, name, info\n    };\n    const nameIsString = typeof name === 'string';\n\n    // skipChecks is used by internal methods for better performance\n    const { skipChecks = false } = info;\n\n    if (!skipChecks) {\n        const domEventExecResult = nameIsString && domEventReg.exec(name);\n\n        if (domEventExecResult) {\n            const [, eventName, key, selector] = domEventExecResult;\n            // fixing circular reference issue\n            const { default: addDomListener } = require('./_adddomlistener');\n\n            addDomListener(object, key, eventName, selector, callback, info);\n\n            return true;\n        }\n    }\n\n    // if there are events with the same name\n    if (events) {\n        if (!skipChecks) {\n            // if there are events with the same data, return false\n            for (let i = 0; i < events.length; i++) {\n                const existingEvent = events[i];\n                const argCallback = (callback && callback._callback) || callback;\n                const eventCallback = existingEvent.callback._callback || existingEvent.callback;\n                if (argCallback === eventCallback) {\n                    return false;\n                }\n            }\n        }\n\n        // if the event isn't found add it to the event list\n        events.push(event);\n    } else {\n        // if there are no events with the same name, create an array with only  one event\n        allEvents[name] = [event];\n    }\n\n    if (nameIsString && propModEventReg.test(name)) {\n        // define needed accessors for KEY\n        defineProp(object, name.replace(propModEventReg, ''));\n    }\n\n    // names prefixed by underscore mean \"private\" events\n    if (!skipChecks && name[0] !== '_') {\n        if (nameIsString) {\n            triggerOne(object, `addevent:${name}`, event);\n        }\n\n        triggerOne(object, 'addevent', event);\n    }\n\n    // if event is added successfully return true\n    return true;\n}\n","import defs from './defs';\nimport set from '../set';\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key) {\n    const def = defs.get(object);\n\n    // if no object definition do nothing\n    if (!def) {\n        return null;\n    }\n\n    if (!def.props[key]) {\n        const propDef = def.props[key] = {\n            value: object[key],\n            mediator: null,\n            bindings: null\n        };\n\n        Object.defineProperty(object, key, {\n            configurable: true,\n            enumerable: true,\n            get() {\n                return propDef.value;\n            },\n            set(v) {\n                return set(object, key, v, {\n                    fromSetter: true\n                });\n            }\n        });\n    }\n\n    return def.props[key];\n}\n","import initDefi from './_core/init';\n\nimport defs from './_core/defs';\nimport triggerOne from './trigger/_triggerone';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport is from './_helpers/is';\nimport forOwn from './_helpers/forown';\n\n// the function sets new value for a property\n// since its performance is very critical we're checking events existence manually\nexport default function set(object, key, value, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'set');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return object;\n    }\n\n    // allow to use key-value object as another method variation\n    if (typeof key === 'object') {\n        forOwn(key, (objVal, objKey) => set(object, objKey, objVal, value));\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    // possible flags, all of them are falsy by default\n    const {\n        skipMediator,\n        fromMediator,\n        define,\n        force,\n        forceHTML,\n        silent,\n        silentHTML,\n        skipCalc\n    } = eventOptions;\n\n    if (define) {\n        // fixing circular ref\n        const { default: defineProp } = require('./_core/defineprop');\n        initDefi(object);\n        defineProp(object, key);\n    }\n\n    const def = defs.get(object);\n\n    // if no object definition then make simple assignment\n    if (!def) {\n        object[key] = value;\n        return object;\n    }\n\n    const { props, events } = def;\n    const propDef = props[key];\n\n    // if no property definition then make simple assignment\n    if (!propDef) {\n        object[key] = value;\n        return object;\n    }\n\n    const { value: previousValue, mediator } = propDef;\n\n    let newValue;\n\n    if (mediator && !is(value, previousValue) && !skipMediator && !fromMediator) {\n        newValue = mediator(value);\n    } else {\n        newValue = value;\n    }\n\n    const isChanged = !is(newValue, previousValue);\n\n    // add to eventOptions object some useful properties\n    // we override default eventOptions because some of the properties need to have actual values,\n    // not inherited ones (eg when calc is used)\n    const extendedEventOptions = {\n        ...eventOptions,\n        value: newValue,\n        self: object,\n        previousValue,\n        key,\n        isChanged\n    };\n\n    const triggerChange = (isChanged || force) && !silent;\n\n    // trigger beforechange:KEY and beforechange events\n    if (triggerChange) {\n        const beforechangeStr = 'beforechange';\n        const beforechangeEventName = `${beforechangeStr}:${key}`;\n\n        if (events[beforechangeEventName]) {\n            triggerOne(object, beforechangeEventName, extendedEventOptions);\n        }\n\n        if (events[beforechangeStr]) {\n            triggerOne(object, beforechangeStr, extendedEventOptions);\n        }\n    }\n\n    propDef.value = newValue;\n\n    // triger bindings\n    if (!silentHTML && (isChanged || forceHTML)) {\n        const changeBindingsEventName = `_change:bindings:${key}`;\n        if (events[changeBindingsEventName]) {\n            triggerOne(object, changeBindingsEventName, extendedEventOptions);\n        }\n    }\n\n    // trigger change:KEY and change events\n    if (triggerChange) {\n        const changeStr = 'change';\n        const changeEventName = `${changeStr}:${key}`;\n        if (events[changeEventName]) {\n            triggerOne(object, changeEventName, extendedEventOptions);\n        }\n\n        if (events[changeStr]) {\n            triggerOne(object, changeStr, extendedEventOptions);\n        }\n    }\n\n    // trigger dependencies made by calc method\n    if ((isChanged || force) && !skipCalc) {\n        const changeDepsEventName = `_change:deps:${key}`;\n        if (events[changeDepsEventName]) {\n            triggerOne(object, changeDepsEventName, extendedEventOptions);\n        }\n    }\n\n\n    if (isChanged) {\n        // trigger common delegated events logic\n        const changeDelegatedKeyEventName = `_change:delegated:${key}`;\n        if (events[changeDelegatedKeyEventName]) {\n            triggerOne(object, changeDelegatedKeyEventName, extendedEventOptions);\n        }\n\n        // trigger tree change events logic\n        const changeTreeEventName = `_change:tree:${key}`;\n        if (events[changeTreeEventName]) {\n            triggerOne(object, changeTreeEventName, extendedEventOptions);\n        }\n\n        // trigger other internal change events\n        const changeCommonEventName = `_change:common:${key}`;\n        if (events[changeCommonEventName]) {\n            triggerOne(object, changeCommonEventName, extendedEventOptions);\n        }\n\n        // trigger delegated logic for asterisk events (*.*.*@foo)\n        // TODO: Confusing events names (\"_change:delegated\", \"_change:common:KEY\" etc)\n        const changeDelegatedEventName = '_change:delegated';\n        if (events[changeDelegatedEventName]) {\n            triggerOne(object, changeDelegatedEventName, extendedEventOptions);\n        }\n    }\n\n    return object;\n}\n","import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport domEventReg from '../on/_domeventregexp';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\n\n// removes simple event listener from an object\nexport default function removeListener(object, name, callback, info) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return false;\n    }\n\n    const { events: allEvents } = def;\n    const events = allEvents[name];\n    const retain = [];\n    const noTrigger = name ? name[0] === '_' : false;\n    const nameIsString = typeof name === 'string';\n    const domEventExecResult = nameIsString ? domEventReg.exec(name) : null;\n\n    if (domEventExecResult) {\n        const [, eventName, key, selector] = domEventExecResult;\n        // fixing circular reference issue\n        const { default: removeDomListener } = require('./_removedomlistener');\n\n        removeDomListener(object, key, eventName, selector, callback, info);\n\n        return true;\n    }\n\n    // if all events need to be removed\n    if (typeof name === 'undefined') {\n        if (!noTrigger) {\n            forOwn(allEvents, (allEventsItem, allEventsName) => {\n                forEach(allEventsItem, (event) => {\n                    const removeEventData = {\n                        allEventsName,\n                        callback: event.callback\n                    };\n\n                    triggerOne(object, `removeevent:${name}`, removeEventData);\n                    triggerOne(object, 'removeevent', removeEventData);\n                });\n            });\n        }\n\n        // restore default value of \"events\"\n        def.events = {};\n    } else if (events) {\n        // if events with given name are found\n        forEach(events, (event) => {\n            const argCallback = (callback && callback._callback) || callback;\n            const eventCallback = event.callback._callback || event.callback;\n\n            if (argCallback && argCallback !== eventCallback) {\n                // keep event\n                retain.push(event);\n            } else {\n                const removeEventData = {\n                    name,\n                    callback: event.callback\n                };\n\n                if (!noTrigger) {\n                    if (nameIsString) {\n                        triggerOne(object, `removeevent:${name}`, removeEventData);\n                    }\n\n                    triggerOne(object, 'removeevent', removeEventData);\n                }\n            }\n        });\n\n        if (retain.length) {\n            allEvents[name] = retain;\n        } else {\n            delete def.events[name];\n        }\n    }\n\n    return false;\n}\n","// converts HTML string to NodeList instance\nexport default function html2nodeList(givenHTML) {\n    // wrapMap is taken from jQuery\n    const wrapMap = {\n        option: [1, '<select multiple=\"multiple\">', '</select>'],\n        legend: [1, '<fieldset>', '</fieldset>'],\n        thead: [1, '<table>', '</table>'],\n        tr: [2, '<table><tbody>', '</tbody></table>'],\n        td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n        area: [1, '<map>', '</map>'],\n        _: [0, '', '']\n    };\n\n    const html = givenHTML.replace(/^\\s+|\\s+$/g, '');\n    let node = window.document.createElement('div');\n    let i;\n\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n\n    const ex = /<([\\w:]+)/.exec(html);\n    const wrapper = (ex && wrapMap[ex[1]]) || wrapMap._;\n\n    node.innerHTML = wrapper[1] + html + wrapper[2];\n\n    i = wrapper[0];\n\n    while (i) {\n        i -= 1;\n        node = node.children[0];\n    }\n\n    return node.childNodes;\n}\n","import html2nodeList from './_html2nodelist';\n\n// function-constructor of mq library\n// accepts many kinds of arguments (selector, html, function)\nfunction MQInit(selector, context) {\n    const win = window;\n\n    let result;\n\n    if (selector) {\n        if (selector.nodeType || (typeof win === 'object' && selector === win)) {\n            result = [selector];\n        } else if (typeof selector === 'string') {\n            if (/</.test(selector)) {\n                result = html2nodeList(selector);\n            } else if (context) {\n                const newContext = (new MQInit(context))[0];\n\n                if (newContext) {\n                    result = newContext.querySelectorAll(selector);\n                }\n            } else {\n                result = win.document.querySelectorAll(selector);\n            }\n        } else if ('length' in selector) {\n            // if it's something array-like (eg NodeList)\n            result = selector;\n        } else {\n            // this is somethong another (eg Attr)\n            result = [selector];\n        }\n    }\n\n    const length = result && result.length;\n\n    if (length) {\n        for (let i = 0; i < length; i++) {\n            this.push(result[i]);\n        }\n    }\n}\n\nMQInit.prototype = [];\n\nexport default MQInit;\n","// an object allows to share data between modules; it's needed because we use\n// simplified ES modules there and cannot import and share a number\nexport default {\n    nodeIndex: 0,\n    allEvents: {}\n};\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n    return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n    const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n    const splittedSelector = selector.split(',');\n\n    let matching = '';\n\n    for (let i = 0; i < splittedSelector.length; i++) {\n        const sel = splittedSelector[i];\n        matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n    }\n\n\n    this.setAttribute(randomID, randomID);\n\n    if (is(evt.target, matching)) {\n        handler.call(this, evt);\n    }\n\n    this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n    const names = namesStr.split(splitBySpaceReg);\n    let delegate;\n\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (selector) {\n        delegate = function uniqueDelegateHandler(evt) {\n            delegateHandler.call(this, evt, selector, handler);\n        };\n    }\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n            let exist = false;\n\n            for (let k = 0; k < events.length; k++) {\n                const event = events[k];\n\n                if (handler === event.handler && (!selector || selector === event.selector)) {\n                    exist = true;\n                    break;\n                }\n            }\n\n            if (!exist) {\n                events.push({\n                    delegate,\n                    handler,\n                    namespace,\n                    selector,\n                    nodeID,\n                    name\n                });\n\n                node.addEventListener(name, delegate || handler, false);\n            }\n        }\n    }\n\n    return this;\n}\n","import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\n\n// removes event handler from a set of elements\nexport default function off(namesStr, selector, handler) {\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    const names = namesStr.split(splitBySpaceReg);\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n\n            if (!name && namespace) {\n                for (let k = 0, keys = Object.keys(data.allEvents); k < keys.length; k++) {\n                    const events = data.allEvents[keys[k]];\n\n                    for (let l = 0; l < events.length; l++) {\n                        const event = events[i];\n                        if (event.namespace === namespace && event.nodeID === node.b$) {\n                            node.removeEventListener(event.name, event.delegate || event.handler);\n                            events.splice(l, 1);\n                            l -= 1;\n                        }\n                    }\n                }\n\n                continue;\n            }\n\n            const events = data.allEvents[name + node.b$];\n            if (events) {\n                for (let k = 0; k < events.length; k++) {\n                    const event = events[k];\n                    if (\n                        (!handler || handler === event.handler || handler === event.delegate)\n                        && (!namespace || namespace === event.namespace)\n                        && (!selector || selector === event.selector)\n                    ) {\n                        node.removeEventListener(name, event.delegate || event.handler);\n                        events.splice(k, 1);\n                        k -= 1;\n                    }\n                }\n            } else if (!namespace && !selector) {\n                node.removeEventListener(name, handler);\n            }\n        }\n    }\n\n    return this;\n}\n","import Init from './_init';\nimport parseHTML from './parsehtml';\nimport on from './on';\nimport off from './off';\nimport add from './add';\nimport assign from '../_helpers/assign';\n\n// a tiny jQuery-like library\nexport default function mq(selector, context) {\n    return new Init(selector, context);\n}\n\nmq.parseHTML = parseHTML;\n\nassign(Init.prototype, {\n    on,\n    off,\n    add\n});\n","import html2nodeList from './_html2nodelist';\nimport Init from './_init';\n\n// parses given HTML and returns mq instance\nexport default function parseHTML(html) {\n    return new Init(html2nodeList(html));\n}\n","import Init from './_init';\nimport data from './_data';\n\n// adds unique nodes to mq collection\nexport default function add(selector) {\n    const idMap = {};\n\n    let result;\n\n    const nodes = new Init(selector);\n\n    if (this.length) {\n        result = new Init();\n        for (let i = 0; i < this.length; i++) {\n            const node = this[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            idMap[nodeID] = 1;\n            result.push(node);\n        }\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            if (!idMap[nodeID]) {\n                idMap[nodeID] = 1;\n                result.push(node);\n            }\n        }\n    } else {\n        result = nodes;\n    }\n\n    return result;\n}\n","export default function assign(target, source) {\n    const keys = Object.keys(source);\n    let i = keys.length;\n    let key;\n\n    while (--i >= 0) {\n        key = keys[i];\n        target[key] = source[key];\n    }\n\n    return target;\n}\n","// the regexp allows to parse things like \"click::x(.y)\"\n// it's shared between few modules\nexport default /([^::]+)::([^()]+)?(?:\\((.*)\\))?/;\n","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport slice from '../_helpers/slice';\nimport forEach from '../_helpers/foreach';\n\n// the function removes internally used events such as _asterisk:add\nfunction detatchDelegatedLogic({\n    delegatedEventName,\n    pathStr,\n    allEvents\n}) {\n    const retain = [];\n    const events = allEvents[delegatedEventName];\n\n    forEach(events, (event) => {\n        // pathStr is assigned to info in delegateListener\n        if (event.info.pathStr !== pathStr) {\n            retain.push(event);\n        }\n    });\n\n    if (retain.length) {\n        allEvents[delegatedEventName] = retain;\n    } else {\n        delete allEvents[delegatedEventName];\n    }\n}\n\n// removes delegated event listener from an object by given path\nexport default function undelegateListener(object, givenPath, name, callback, info = {}) {\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return;\n    }\n\n    const { events: allEvents } = def;\n\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then remove listener\n        removeListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr;\n\n        if (path.length > 1) {\n            path = slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n\n        const delegatedChangeEvtName = `_change:delegated:${key}`;\n        if (allEvents[delegatedChangeEvtName]) {\n            detatchDelegatedLogic({\n                delegatedEventName: delegatedChangeEvtName,\n                pathStr,\n                allEvents\n            });\n        }\n\n        if (typeof object[key] === 'object') {\n            undelegateListener(object[key], path, name, callback, info);\n        }\n    }\n}\n","import undelegateListener from '../../off/_undelegatelistener';\nimport triggerOne from '../../trigger/_triggerone';\n\n// the function is called when some part of a path is changed\n// it delegates event listener for new branch of an object and undelegates it for old one\n// used for non-asterisk events\nexport default function changeHandler({\n    previousValue,\n    value\n}, {\n    path,\n    name,\n    callback,\n    info\n} = triggerOne.latestEvent.info.delegatedData) {\n    if (value && typeof value === 'object') {\n        const { default: delegateListener } = require('.'); // fixing circular ref\n\n        delegateListener(value, path, name, callback, info);\n    }\n\n    if (previousValue && typeof previousValue === 'object') {\n        undelegateListener(previousValue, path, name, callback, info);\n    }\n}\n","import addListener from '../_addlistener';\nimport changeHandler from './changehandler';\nimport slice from '../../_helpers/slice';\n\n// adds delegated event listener to an object by given path\n// TODO Handler uses wrong context\nexport default function delegateListener(object, givenPath, name, callback, info = {}) {\n    // if typeof path is string and path is not empty string then split it\n    let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n    if (!path || !path.length) {\n        // if no path then add simple listener\n        addListener(object, name, callback, info);\n    } else {\n        // else do all magic\n        const key = path[0];\n        let pathStr; // needed for undelegation\n\n        if (path.length > 1) {\n            path = slice(path, 1);\n            pathStr = path.join('.');\n        } else {\n            path = [];\n            pathStr = path[0] || '';\n        }\n\n        const delegatedData = {\n            path,\n            name,\n            callback,\n            info,\n            object\n        };\n\n        // the event is triggered by \"set\";\n        // a new function is created as a handler to make possible\n        // to add the handler multiple times for one key\n        addListener(object, `_change:delegated:${key}`, (evt) => changeHandler(evt), {\n            delegatedData,\n            pathStr\n        });\n\n        // call handler manually\n        changeHandler({\n            value: object[key]\n        }, delegatedData);\n    }\n}\n","// determines whether two values are the same value\n/* istanbul ignore next */\nconst isPolyfill = (v1, v2) => v1 === 0 && v2 === 0 ? 1 / v1 === 1 / v2 : v1 !== v1 && v2 !== v2 || v1 === v2; // eslint-disable-line\n\nexport default Object.is || isPolyfill;\n","export default function slice(arrLike, start, end) {\n    const l = arrLike.length;\n    let i = start || 0;\n    const _end = end || l;\n    const arr = Array(_end - i);\n    let j = 0;\n\n    while (i < _end) {\n        arr[j++] = arrLike[i++];\n    }\n\n    return arr;\n}\n","module.exports = require('./defi').default;\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport $ from '../_mq';\nimport forEach from '../_helpers/foreach';\n\n// removes dom listener from nodes bound to given key\nexport default function removeDomListener(\n    object,\n    key,\n    eventName,\n    selector,\n    callback,\n    info\n) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // collect bound nodes and remove DOM event listener\n        const nodes = Array(bindings.length);\n        const eventNamespace = def.id + key;\n\n        forEach(bindings, (binding, index) => {\n            nodes[index] = binding.node;\n        });\n\n        $(nodes).off(`${eventName}.${eventNamespace}`, selector, callback);\n    }\n\n    // remove bind and unbind listeners from given key\n    removeListener(object, `bind:${key}`, callback, info);\n    removeListener(object, `unbind:${key}`, callback, info);\n\n    return object;\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport undelegateListener from './_undelegatelistener';\nimport $ from '../_mq';\n\n// removes event listener\nexport default function off(object, givenNames, callback) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'off');\n\n    const isNamesVarArray = givenNames instanceof Array;\n    const def = defs.get(object);\n\n    // allow to pass name-handler object\n    // TODO: Name-handler object passed to off method is non-documented feature\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        forOwn(givenNames, (namesObjCallback, namesObjName) => off(\n            object, namesObjName, namesObjCallback, callback\n        ));\n        return object;\n    }\n\n\n    if (!givenNames && !callback) {\n        def.events = {};\n\n        forOwn(def.props, ({ bindings }, propName) => {\n            if (bindings) {\n                forEach(bindings, ({ node }) => {\n                    const eventNamespace = def.id + propName;\n                    $(node).off(`.${eventNamespace}`);\n                });\n            }\n        });\n\n        return object;\n    }\n\n    // convert a single event name into array\n    const names = isNamesVarArray ? givenNames : [givenNames];\n\n    forEach(names, (name) => {\n        const delegatedEventParts = typeof name === 'string' && name.split('@');\n        if (delegatedEventParts.length > 1) {\n            const [path, delegatedName] = delegatedEventParts;\n            undelegateListener(object, path, delegatedName, callback);\n        } else {\n            removeListener(object, name, callback);\n        }\n    });\n\n    return object;\n}\n","// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds.\n// (c) https://davidwalsh.name/javascript-debounce-function\n\nexport default function debounce(func, givenDelay, thisArg) {\n    let timeout;\n    let delay;\n    if (typeof givenDelay !== 'number') {\n        thisArg = givenDelay; // eslint-disable-line no-param-reassign\n        delay = 0;\n    } else {\n        delay = givenDelay || 0;\n    }\n\n    return function debounced() {\n        const args = arguments;\n        const callContext = thisArg || this;\n\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => func.apply(callContext, args), delay);\n    };\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport off from '../off';\nimport debounce from '../_helpers/debounce';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport addListener from './_addlistener';\nimport delegateListener from './_delegatelistener';\n\n// adds event listener\nexport default function on(object, givenNames, givenCallback, options) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'on');\n\n    const isNamesVarArray = givenNames instanceof Array;\n\n    // allow to pass name-handler object\n    if (givenNames && typeof givenNames === 'object' && !isNamesVarArray) {\n        forOwn(givenNames, (namesObjCallback, namesObjName) => on(\n            object, namesObjName, namesObjCallback, givenCallback, options\n        ));\n        return object;\n    }\n\n    // convert a single event name into array\n    const names = isNamesVarArray ? givenNames : [givenNames];\n\n    const { triggerOnInit, once, debounce: debounceOption } = options || {};\n    let callback;\n    if (once) {\n        callback = function onceCallback() {\n            givenCallback.apply(this, arguments);\n            // remove event listener after its call\n            off(object, names, onceCallback);\n        };\n\n        // allow to remove event listener py passing original callback to \"off\"\n        callback._callback = givenCallback;\n    } else if (typeof debounceOption === 'number' || debounceOption === true) {\n        callback = debounce(givenCallback, debounceOption === true ? 0 : debounceOption, object);\n    } else {\n        callback = givenCallback;\n    }\n\n    forEach(names, (name) => {\n        const delegatedEventParts = typeof name === 'string' && name.split('@');\n\n        if (delegatedEventParts.length > 1) {\n            // if @ exists in event name then this is delegated event\n            const [path, delegatedName] = delegatedEventParts;\n            delegateListener(object, path, delegatedName, callback);\n        } else {\n            // if not, this is simple event\n            addListener(object, name, callback);\n        }\n    });\n\n    // call callback immediatelly if triggerOnInit is true\n    if (triggerOnInit) {\n        callback.call(object, options);\n    }\n\n    return object;\n}\n","// triggers given DOM event on given node\nexport default function triggerOneDOMEvent({\n    node,\n    eventName,\n    triggerArgs\n}) {\n    const { Event } = window;\n    const event = new Event(eventName, {\n        bubbles: true,\n        cancelable: true\n    });\n\n    // defiTriggerArgs will be used in a handler created by addDOMListener\n    event.defiTriggerArgs = triggerArgs;\n\n    node.dispatchEvent(event);\n}\n","import domEventReg from '../on/_domeventregexp';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport triggerOne from './_triggerone';\nimport triggerDomEvent from './_triggerdomevent';\nimport forEach from '../_helpers/foreach';\n\n// triggers an event\nexport default function trigger(object, givenNames, ...triggerArgs) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'trigger');\n\n    // allow to use either a string or an array of events\n    const names = givenNames instanceof Array ? givenNames : [givenNames];\n\n    const def = defs.get(object);\n\n    // if no definition do nothing\n    if (!def) {\n        return object;\n    }\n\n    const { events: allEvents } = def;\n\n    if (!allEvents) {\n        return object;\n    }\n\n    forEach(names, (name) => {\n        const domEvtExecResult = typeof name === 'string' && domEventReg.exec(name);\n\n        if (domEvtExecResult) {\n            // if EVT::KEY(SELECTOR) ia passed as event name then trigger DOM event\n            const [, eventName, key, selector] = domEvtExecResult;\n            triggerDomEvent(object, key, eventName, selector, triggerArgs);\n        } else {\n            // trigger ordinary event\n            triggerOne(object, name, triggerArgs);\n        }\n    });\n\n    return object;\n}\n","import triggerOneDOMEvent from './_triggeronedomevent';\nimport defs from '../_core/defs';\nimport forEach from '../_helpers/foreach';\n\n// triggers DOM event on bound nodes\nexport default function triggerDOMEvent(object, key, eventName, selector, triggerArgs) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return;\n    }\n\n    const { bindings } = propDef;\n\n    if (!bindings) {\n        return;\n    }\n\n    forEach(bindings, ({ node }) => {\n        if (selector) {\n            // if selector is given trigger an event on all node descendants\n            const descendants = node.querySelectorAll(selector);\n            forEach(descendants, (descendant) => {\n                triggerOneDOMEvent({\n                    node: descendant,\n                    eventName,\n                    triggerArgs\n                });\n            });\n        } else {\n            // trigger an event for single node\n            triggerOneDOMEvent({\n                node,\n                eventName,\n                triggerArgs\n            });\n        }\n    });\n}\n","import undelegateListener from './_undelegatelistener';\n\n// removes tree listener from all object tree of fiven path\nexport default function removeTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over keys of the path and undelegate given handler (can be undefined)\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice is slow\n        const listenedPath = deepPath.slice(0, i);\n\n        undelegateListener(\n            object,\n            listenedPath,\n            `_change:tree:${deepPath[i]}`,\n            handler\n        );\n    }\n}\n","import delegateListener from './_delegatelistener';\nimport removeTreeListener from '../off/_removetreelistener';\n\n// creates tree listener\nfunction createTreeListener({ handler, restPath }) {\n    const newHandler = function treeListener(changeEvent) {\n        const extendedChangeEvent = {\n            restPath,\n            ...changeEvent\n        };\n        const { previousValue, value } = changeEvent;\n\n        // removes listener for all branches of the path on old object\n        if (previousValue && typeof previousValue === 'object') {\n            removeTreeListener(previousValue, restPath, handler);\n        }\n\n        // adds listener for all branches of \"restPath\" path on newly assigned object\n        if (value && typeof value === 'object') {\n            addTreeListener(value, restPath, handler);\n        }\n\n        // call original handler\n        handler.call(this, extendedChangeEvent);\n    };\n\n    newHandler._callback = handler;\n\n    return newHandler;\n}\n\n// listens changes for all branches of given path\n// one of the most hard functions to understand\nexport default function addTreeListener(object, deepPath, handler) {\n    if (typeof deepPath === 'string') {\n        deepPath = deepPath.split('.'); // eslint-disable-line no-param-reassign\n    }\n\n    // iterate over all keys and delegate listener for all objects of given branch\n    for (let i = 0; i < deepPath.length; i++) {\n        // TODO: Array.prototype.slice method is slow\n        const listenPath = deepPath.slice(0, i);\n        const restPath = deepPath.slice(i + 1);\n\n        delegateListener(\n            object,\n            listenPath,\n            `_change:tree:${deepPath[i]}`,\n            createTreeListener({\n                handler,\n                restPath\n            })\n        );\n    }\n}\n","import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport defiError from '../_helpers/defierror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n    calcHandler,\n    allSources,\n    sourceKey,\n    sourceObject,\n    eventOptions\n}) {\n    let { exactKey = false } = eventOptions;\n    let isDelegated = false;\n\n    // source key must be a string\n    if (typeof sourceKey !== 'string') {\n        throw defiError('calc:source_key_type', { sourceKey });\n    }\n\n    // source object must be an object\n    if (!sourceObject || typeof sourceObject !== 'object') {\n        throw defiError('calc:source_object_type', { sourceObject });\n    }\n\n    if (!exactKey) {\n        const deepPath = sourceKey.split('.');\n\n        // if something like a.b.c is used as a key\n        if (deepPath.length > 1) {\n            isDelegated = true;\n            // TODO: Avoid collisions with bindings by using another event name\n            // ... instead of _change:tree:xxx\n            addTreeListener(sourceObject, deepPath, calcHandler);\n        } else {\n            exactKey = true;\n        }\n    }\n\n\n    if (exactKey) {\n        // normal handler\n        addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n    }\n\n    allSources.push({\n        sourceKey,\n        sourceObject,\n        isDelegated\n    });\n}\n","import initDefi from '../_core/init';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport debounce from '../_helpers/debounce';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport assign from '../_helpers/assign';\nimport addSource from './_addsource';\nimport createCalcHandler from './_createcalchandler';\nimport defineProp from '../_core/defineprop';\n\n// defines a property which is dependend on other properties\nexport default function calc(object, target, sources, givenHandler, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'calc');\n\n    if (target instanceof Object) {\n        /*\n         * accept an object\n         * this.calc({target: { source, handler, event } }, commonEventOptions);\n         */\n        forOwn(target, ({\n            source: itemSource,\n            handler: itemHandler,\n            options: itemEventOptions\n        }, itemTarget) => {\n            const commonEventOptions = sources;\n            const mergedEventOptions = {};\n\n            if (commonEventOptions) {\n                // extend event object by \"global\" event\n                assign(mergedEventOptions, commonEventOptions);\n            }\n\n            if (itemEventOptions) {\n                // extend event object by \"local\" event (\"event\" key of an object)\n                assign(mergedEventOptions, itemEventOptions);\n            }\n\n            calc(object, itemTarget, itemSource, itemHandler, mergedEventOptions);\n        });\n\n        return object;\n    }\n\n    if (typeof target !== 'string') {\n        throw defiError('calc:target_type', { target });\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = initDefi(object);\n    const {\n        setOnInit = true,\n        debounceCalcOnInit = false,\n        debounceCalc = true,\n        debounceCalcDelay = 0\n    } = eventOptions;\n    const defaultHandler = (value) => value;\n    const handler = givenHandler || defaultHandler;\n    const allSources = [];\n    const syncCalcHandler = createCalcHandler({\n        object,\n        eventOptions,\n        allSources,\n        target,\n        def,\n        handler\n    });\n\n    let debouncedCalcHandler;\n    let calcHandler;\n\n    if (debounceCalcOnInit || debounceCalc) {\n        debouncedCalcHandler = debounce(syncCalcHandler, debounceCalcDelay);\n    }\n\n    defineProp(object, target);\n\n    if (!(sources instanceof Array)) {\n        sources = [sources]; // eslint-disable-line no-param-reassign\n    }\n\n    if (debounceCalc) {\n        calcHandler = debouncedCalcHandler;\n    } else {\n        calcHandler = syncCalcHandler;\n    }\n\n    forEach(sources, (source) => {\n        if (typeof source === 'string') {\n            // source object is current object\n            addSource({\n                calcHandler,\n                allSources,\n                sourceKey: source,\n                sourceObject: object,\n                eventOptions\n            });\n        } else {\n            // source object is external object\n            if (!source || typeof source !== 'object') {\n                throw defiError('calc:source_type', { source });\n            }\n\n            const sourceKey = source.key;\n            const sourceObject = source.object;\n            if (sourceKey instanceof Array) {\n                // many keys are passed\n                forEach(sourceKey, (sourceKeyItem) => {\n                    addSource({\n                        calcHandler,\n                        allSources,\n                        sourceKey: sourceKeyItem,\n                        sourceObject,\n                        eventOptions\n                    });\n                });\n            } else {\n                // one key is passed\n                addSource({\n                    calcHandler,\n                    allSources,\n                    sourceKey,\n                    sourceObject,\n                    eventOptions\n                });\n            }\n        }\n    });\n\n    if (setOnInit) {\n        if (debounceCalcOnInit) {\n            debouncedCalcHandler();\n        } else {\n            syncCalcHandler();\n        }\n    }\n\n    return object;\n}\n","import set from '../set';\nimport deepFind from '../_helpers/deepfind';\nimport forEach from '../_helpers/foreach';\n\n// creates event handler for target object which will be fired when a source is changed\nexport default function createCalcHandler({\n    object,\n    eventOptions,\n    allSources,\n    target,\n    def,\n    handler\n}) {\n    return function calcHandler(changeEvent = {}) {\n        const values = [];\n        const { protector = {} } = changeEvent;\n        const protectKey = target + def.id;\n        const { promiseCalc } = eventOptions;\n        const setEventOptions = {\n            protector,\n            ...eventOptions,\n            ...changeEvent\n        };\n\n        if (protectKey in protector) {\n            return;\n        }\n\n        protector[protectKey] = true;\n\n        forEach(allSources, ({\n            sourceObject,\n            sourceKey,\n            isDelegated\n        }) => {\n            const value = isDelegated ? deepFind(sourceObject, sourceKey) : sourceObject[sourceKey];\n            values.push(value);\n        });\n\n        let targetValue = handler.apply(object, values);\n\n        if (promiseCalc) {\n            if (!(targetValue instanceof Promise)) {\n                targetValue = Promise.resolve(targetValue);\n            }\n\n            targetValue\n                .then((promiseResult) => set(object, target, promiseResult, setEventOptions))\n                .catch((e) => {\n                    throw Error(e);\n                });\n        } else {\n            set(object, target, targetValue, setEventOptions);\n        }\n    };\n}\n","// gets value of a property in nested object\n// eg \"d\" from a.b.c.d\nexport default function deepFind(obj, givenPath) {\n    const paths = typeof givenPath === 'string' ? givenPath.split('.') : givenPath;\n    let current = obj;\n\n    for (let i = 0; i < paths.length; ++i) {\n        if (typeof current[paths[i]] === 'undefined') {\n            return undefined;\n        }\n\n        current = current[paths[i]];\n    }\n\n    return current;\n}\n","import defs from '../_core/defs';\nimport $ from '../_mq';\nimport forEach from '../_helpers/foreach';\n\nconst customSelectorReg = /\\s*:bound\\(([^(]*)\\)\\s*([\\S\\s]*)\\s*/;\nconst randomAttr = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// the function selects nodes based on a selector (including custom values, eg :bound)\n// TODO: selectNodes looks not good, it needs to be refactored and accelerated if possible\nexport default function selectNodes(object, givenSelector) {\n    const { props } = defs.get(object);\n    const selectors = givenSelector.split(',');\n    let result = $();\n\n    forEach(selectors, (selector) => {\n        const execResult = customSelectorReg.exec(selector);\n        if (execResult) {\n            const boundKey = execResult[1];\n            const subSelector = execResult[2];\n            const propDef = props[boundKey];\n\n            if (propDef) {\n                const { bindings } = propDef;\n                if (bindings) {\n                    const boundNodes = Array(bindings.length);\n                    forEach(bindings, (binding, i) => {\n                        boundNodes[i] = binding.node;\n                    });\n\n                    // if native selector passed after :bound(KEY) is not empty string\n                    // for example \":bound(KEY) .my-selector\"\n                    if (subSelector) {\n                        // if native selector contains children selector\n                        // for example \":bound(KEY) > .my-selector\"\n                        if (subSelector.indexOf('>') === 0) {\n                            // selecting children\n                            forEach(boundNodes, (node) => {\n                                node.setAttribute(randomAttr, randomAttr);\n                                const selected = node.querySelectorAll(`[${randomAttr}=\"${randomAttr}\"] ${subSelector}`);\n                                result = result.add(selected);\n                                node.removeAttribute(randomAttr);\n                            });\n                        } else {\n                            // if native selector doesn't contain children selector\n                            forEach(boundNodes, (node) => {\n                                const selected = node.querySelectorAll(subSelector);\n                                result = result.add(selected);\n                            });\n                        }\n                    } else {\n                        // if native selector is empty string just add bound nodes to result\n                        result = result.add(boundNodes);\n                    }\n                }\n            }\n        } else {\n            // if it's native selector (no custom things)\n            result = result.add(selector);\n        }\n    });\n\n    return result;\n}\n","import selectNodes from './_selectnodes';\nimport $ from '../_mq';\n\nconst htmlReg = /</;\nconst customSelectorReg = /:bound\\(([^(]*)\\)/;\n\n// the function works just like DOM library accepting any kind of arg\n// (HTML string, Node, NodeList etc) bu allows to pass custom selector\n// eg :bound(KEY)\nexport default function getNodes(object, selector) {\n    let nodes;\n\n    if (\n        typeof selector === 'string'\n        && !htmlReg.test(selector)\n        && customSelectorReg.test(selector)\n    ) {\n        nodes = selectNodes(object, selector);\n    } else {\n        nodes = $(selector);\n    }\n\n    return nodes;\n}\n","import removeListener from '../off/_removelistener';\nimport triggerOne from '../trigger/_triggerone';\nimport forEach from '../_helpers/foreach';\n\nconst spaceReg = /\\s+/;\n\n// the function removes single binding for single object\n// called by unbindNode\nexport default function removeBinding({\n    object,\n    key,\n    eventOptions,\n    binding\n}) {\n    const {\n        bindingOptions,\n        binder,\n        node,\n        nodeHandler,\n        objectHandler\n    } = binding;\n    const { destroy, on } = binder;\n    const { silent } = eventOptions;\n\n    // if \"on\" is a function then disable it\n    // we cannot \"turn off\" custom listener defined by a programmer\n    // programmer needs to remove custom listener maually inside binder.destroy\n    if (typeof on === 'function') {\n        nodeHandler.disabled = true;\n    } else if (typeof on === 'string') {\n        // remove DOM event listener\n        // removeEventListener is faster than \"on\" method from any DOM library\n        forEach(\n            on.split(spaceReg),\n            (evtName) => node.removeEventListener(evtName, nodeHandler)\n        );\n    }\n\n    // remove object event listener\n    removeListener(object, `_change:bindings:${key}`, objectHandler);\n\n    // if binder.destroy is given call it\n    if (destroy) {\n        destroy.call(node, bindingOptions);\n    }\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `unbind:${key}`, extendedEventOptions);\n        triggerOne(object, 'unbind', extendedEventOptions);\n    }\n}\n","import checkObjectType from '../_helpers/checkobjecttype';\nimport defs from '../_core/defs';\nimport getNodes from '../bindnode/_getnodes';\nimport removeTreeListener from '../off/_removetreelistener';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport removeBinding from './_removebinding';\n\n// unbinds a node\nexport default function unbindNode(object, key, node, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'unbindNode');\n\n    if (key instanceof Array) {\n        /*\n         * accept array of keys\n         * this.unbindNode(['a', 'b', 'c'], node)\n         */\n        forEach(key, (itemKey) => unbindNode(object, itemKey, node, eventOptions));\n\n        return object;\n    }\n\n    if (key && typeof key === 'object') {\n        forOwn(key, (keyObjValue, keyObjKey) => {\n            if (keyObjValue.constructor === Object && 'node' in keyObjValue) {\n                // this.unbindNode({ key: { node: $(), binder } ) }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue.node, node);\n            } else if (\n                keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.unbindNode({ key: [{ node: $(), binder }] ) }, { silent: true });\n                forEach(keyObjValue, (keyObjValueItem) => {\n                    unbindNode(object, keyObjKey, keyObjValueItem.node, node);\n                });\n            } else {\n                // this.unbindNode({ key: $() }, { silent: true });\n                unbindNode(object, keyObjKey, keyObjValue, node);\n            }\n        });\n        return object;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const { deep } = eventOptions;\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n\n    // allow to pass null or undefined as key\n    // if passed then remove bindings of all keys for given object\n    if (key === null || typeof key === 'undefined') {\n        forOwn(props, (propsItem, propsKey) => {\n            unbindNode(object, propsKey, null, eventOptions);\n        });\n\n        return object;\n    }\n\n    // remove delegated binding\n    if (deep !== false) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            let target = object;\n\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                // TODO: Do we need to throw an error when a target is falsy?\n                target = target[deepPath[i]];\n            }\n\n            // TODO: Potential bug! This may undelegate listener for all bindings with the same path\n            // ...(cannot reproduce)\n            removeTreeListener(object, deepPath.slice(0, deepPathLength - 2));\n\n            unbindNode(target, deepPath[deepPathLength - 1], node, eventOptions);\n\n            return object;\n        }\n    }\n\n    const propDef = props[key];\n\n    // when no propdef do nothing\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    // if the property doesn't have any bindings do nothing\n    if (!bindings) {\n        return object;\n    }\n\n    // if no node is pased remove all bindings for given key\n    if (!node) {\n        forEach(bindings, (binding) => {\n            removeBinding({\n                object, key, eventOptions, binding\n            });\n        });\n\n        propDef.bindings = null;\n\n        return object;\n    }\n\n    const $nodes = getNodes(object, node);\n    const retainBindings = [];\n    const retainNodes = [];\n\n    // iterate over all bindngs and compare their node with given nodes\n    forEach($nodes, (nodesItem) => {\n        forEach(bindings, (binding) => {\n            if (binding.node === nodesItem) {\n                removeBinding({\n                    object, key, eventOptions, binding\n                });\n            } else {\n                retainBindings.push(binding);\n                retainNodes.push(nodesItem);\n            }\n        });\n    });\n\n    // update bindings object\n    if (retainBindings.length) {\n        propDef.bindings = retainBindings;\n    } else {\n        propDef.bindings = null;\n    }\n\n    return object;\n}\n","// returns a binder for input element based on its type\nexport default function input(type) {\n    let on;\n    switch (type) {\n        case 'checkbox':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.checked;\n                },\n                setValue(value) {\n                    this.checked = value;\n                }\n            };\n        case 'radio':\n            return {\n                on: 'click keyup',\n                getValue() {\n                    return this.value;\n                },\n                setValue(value) {\n                    this.checked = typeof value !== 'undefined' && this.value === value;\n                }\n            };\n        case 'submit':\n        case 'button':\n        case 'image':\n        case 'reset':\n            return {};\n        case 'hidden':\n            on = null;\n            break;\n        case 'file':\n            on = 'change';\n            break;\n\n            /*\n            case 'text':\n            case 'password':\n            case 'date':\n            case 'datetime':\n            case 'datetime-local':\n            case 'month':\n            case 'time':\n            case 'week':\n            case 'range':\n            case 'color':\n            case 'search':\n            case 'email':\n            case 'tel':\n            case 'url':\n            case 'file':\n            case 'number': */\n        default: // other future (HTML6+) inputs\n            on = 'input';\n    }\n\n    return {\n        on,\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n        }\n    };\n}\n","import input from './binders/input';\nimport textarea from './binders/textarea';\nimport select from './binders/select';\nimport progress from './binders/progress';\nimport output from './binders/output';\n\n// defaultBinders collection by default contains only one function-checker\nexport default [(node) => {\n    switch (node.tagName) {\n        case 'INPUT':\n            return input(node.type);\n        case 'TEXTAREA':\n            return textarea();\n        case 'SELECT':\n            return select(node.multiple);\n        case 'PROGRESS':\n            return progress();\n        case 'OUTPUT':\n            return output();\n        default:\n            return null;\n    }\n}];\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function textarea() {\n    // textarea behaves just like text input\n    return input('text');\n}\n","// returns a binder for select element\nexport default function select(multiple) {\n    if (multiple) {\n        return {\n            on: 'change',\n            getValue() {\n                const { options } = this;\n                const result = [];\n\n                for (let i = 0; options.length > i; i++) {\n                    if (options[i].selected) {\n                        result.push(options[i].value);\n                    }\n                }\n\n                return result;\n            },\n            setValue(givenValue) {\n                const { options } = this;\n                const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    options[i].selected = ~value.indexOf(options[i].value);\n                }\n            }\n        };\n    }\n\n    return {\n        on: 'change',\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n\n            if (!value) {\n                const { options } = this;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    if (!options[i].value) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n}\n","import input from './input';\n\n// returns a binder for textarea element\nexport default function progress() {\n    return input();\n}\n","// returns a binder for output element\nexport default function output() {\n    return {\n        on: null,\n        getValue() {\n            return this.value || this.textContent;\n        },\n        setValue(value) {\n            const property = 'form' in this ? 'value' : 'textContent';\n            this[property] = value === null ? '' : `${value}`;\n        }\n    };\n}\n","import defaultBinders from './defaultbinders';\n\n// tries to find a binder for given node\nexport default function lookForBinder(node) {\n    for (let i = 0; i < defaultBinders.length; i++) {\n        const binder = defaultBinders[i].call(node, node);\n        if (binder) {\n            return binder;\n        }\n    }\n\n    return undefined;\n}\n","import is from '../_helpers/is';\nimport set from '../set';\n\n// returns a function which called when bound node state is changed (eg DOM event is fired)\nexport default function createNodeHandler({\n    object,\n    key,\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function nodeHandler(domEvent = {}) {\n        // nodeHandler.disabled = true is set in unbindNode\n        // we cannot \"turn off\" binder.on when its value is a function\n        // developer needs to clean memory (\"turn off\" callback) manualy in binder.destroy\n        if (nodeHandler.disabled) {\n            return;\n        }\n\n        const previousValue = propDef.value;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n        const { getValue } = binder;\n        const value = getValue.call(node, {\n            previousValue,\n            domEvent,\n            originalEvent: domEvent.originalEvent || domEvent, // jQuery thing\n            // will throw \"preventDefault is not a function\" when domEvent is empty object\n            preventDefault: () => domEvent.preventDefault(),\n            // will throw \"stopPropagation is not a function\" when domEvent is empty object\n            stopPropagation: () => domEvent.stopPropagation(),\n            which,\n            target,\n            ctrlKey,\n            altKey,\n            ...bindingOptions\n        });\n\n        if (!is(value, previousValue)) {\n            set(object, key, value, {\n                fromNode: true,\n                // the following properties are needed to avoid circular changes\n                // they are used at objectHandler\n                changedNode: node,\n                onChangeValue: value,\n                binder\n            });\n        }\n    };\n}\n","import lookForBinder from '../lookforbinder';\nimport createNodeHandler from './_createnodehandler';\nimport createObjectHandler from './_createobjecthandler';\nimport triggerOne from '../trigger/_triggerone';\nimport addListener from '../on/_addlistener';\nimport debounce from '../_helpers/debounce';\nimport assign from '../_helpers/assign';\nimport forEach from '../_helpers/foreach';\n\nconst spaceReg = /\\s+/;\n\n// handles binding for single property & node\n// the function is used at bindNode\nexport default function bindSingleNode(object, {\n    binder: givenBinder,\n    key,\n    $nodes,\n    node,\n    eventOptions,\n    propDef\n}) {\n    const {\n        silent,\n        getValueOnBind,\n        setValueOnBind,\n        // TODO: We probably need some general flag to cancel or force debouncing\n        // ... which overrides the following flags (something like debounceBinding)\n        debounceSetValue = true,\n        debounceGetValue = true,\n        debounceSetValueOnBind = false,\n        debounceGetValueOnBind = false,\n        debounceSetValueDelay = 0,\n        debounceGetValueDelay = 0,\n        useExactBinder = false\n    } = eventOptions;\n    // create bindings array in property definition object\n    const bindings = propDef.bindings = propDef.bindings || [];\n    const { value } = propDef;\n    const bindingOptions = {\n        self: object,\n        key,\n        value,\n        $nodes,\n        node\n    };\n    let isUndefined = typeof value === 'undefined';\n    let binder;\n    let objectHandler;\n    let nodeHandler;\n\n    // get actual binder\n    if (givenBinder !== null) {\n        // by default binder passed to bindNode is extended by default binder\n        // useExactBinder turns this behavior off\n        if (useExactBinder) {\n            binder = givenBinder;\n        } else {\n            // getting default binder\n            const foundBinder = lookForBinder(node);\n\n            // if default binder is found\n            if (foundBinder) {\n                // extend found binder by given binder\n                if (givenBinder) {\n                    assign(foundBinder, givenBinder);\n                }\n\n                binder = foundBinder;\n            } else {\n                // default binder is not found\n                binder = givenBinder || {};\n            }\n        }\n    }\n\n    const {\n        getValue, setValue, on, initialize\n    } = binder;\n\n    // call binder.initialize\n    if (initialize) {\n        initialize.call(node, bindingOptions);\n    }\n\n    // add needed event handlers to given node when getValue is given\n    if (getValue) {\n        const syncNodeHandler = createNodeHandler({\n            object,\n            key,\n            node,\n            propDef,\n            binder,\n            bindingOptions\n        });\n\n        let debouncedNodeHandler;\n\n        if (debounceGetValue || debounceGetValueOnBind) {\n            debouncedNodeHandler = debounce(syncNodeHandler, debounceGetValueDelay);\n        }\n\n        if (debounceGetValue) {\n            nodeHandler = debouncedNodeHandler;\n        } else {\n            nodeHandler = syncNodeHandler;\n        }\n\n        // TODO: Throw error when \"on\" and maybe other binder properties has wrong type\n        if (typeof on === 'function') {\n            on.call(node, nodeHandler, bindingOptions);\n        } else if (typeof on === 'string') {\n            // addEventListener is faster than \"on\" method from any DOM library\n            forEach(\n                on.split(spaceReg),\n                (evtName) => node.addEventListener(evtName, nodeHandler)\n            );\n        }\n\n        if ((isUndefined && getValueOnBind !== false) || getValueOnBind === true) {\n            if (debounceGetValueOnBind) {\n                debouncedNodeHandler();\n            } else {\n                syncNodeHandler();\n            }\n        }\n\n        isUndefined = typeof propDef.value === 'undefined';\n    }\n\n    // add needed event handlers to the object when setValue is given\n    if (setValue) {\n        const syncObjectHandler = createObjectHandler({\n            node,\n            propDef,\n            binder,\n            bindingOptions,\n            eventOptions\n        });\n\n        let debouncedObjectHandler;\n\n        if (debounceSetValue || debounceSetValueOnBind) {\n            debouncedObjectHandler = debounce(syncObjectHandler, debounceSetValueDelay);\n        }\n\n        if (debounceSetValue) {\n            objectHandler = debouncedObjectHandler;\n        } else {\n            objectHandler = syncObjectHandler;\n        }\n\n        // TODO: Is it possible to get previous value of a property?\n        addListener(object, `_change:bindings:${key}`, objectHandler, { skipChecks: true });\n\n        if ((!isUndefined && setValueOnBind !== false) || setValueOnBind === true) {\n            if (debounceSetValueOnBind) {\n                debouncedObjectHandler();\n            } else {\n                syncObjectHandler();\n            }\n        }\n    }\n\n    // add binding data to bindings array\n    bindings.push({\n        on,\n        node,\n        binder,\n        objectHandler,\n        nodeHandler,\n        bindingOptions\n    });\n\n    // fire events\n    if (!silent) {\n        const extendedEventOptions = {\n            key,\n            node,\n            ...eventOptions\n        };\n\n        triggerOne(object, `bind:${key}`, extendedEventOptions);\n        triggerOne(object, 'bind', extendedEventOptions);\n    }\n}\n","// returns a function which is called when property value is changed\nexport default function createObjectHandler({\n    node,\n    propDef,\n    binder,\n    bindingOptions\n}) {\n    return function objectHandler(eventOptions = {}) {\n        const { value } = propDef;\n        const { onChangeValue, changedNode, binder: evtBinder } = eventOptions;\n        const { setValue } = binder;\n        // a dirty hack for https://github.com/matreshkajs/matreshka/issues/19\n        const dirtyHackValue = onChangeValue === 'string' && typeof value === 'number'\n            ? `${value}` : value;\n\n        // don't call setValue if a property is changed via getValue of the same binder\n        if (changedNode === node && onChangeValue === dirtyHackValue && evtBinder === binder) {\n            return;\n        }\n\n        setValue.call(node, value, {\n            value,\n            ...bindingOptions\n        });\n    };\n}\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport getNodes from './_getnodes';\nimport createBindingSwitcher from './_createbindingswitcher';\nimport bindSingleNode from './_bindsinglenode';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport defiError from '../_helpers/defierror';\nimport forEach from '../_helpers/foreach';\nimport forOwn from '../_helpers/forown';\nimport addTreeListener from '../on/_addtreelistener';\n\n// initializes binsing between a property of an object to HTML node\nexport default function bindNode(object, key, node, binder, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bindNode');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    binder = binder || {}; // eslint-disable-line no-param-reassign\n\n    initDefi(object);\n\n    // throw an error when key is falsy\n    if (!key) {\n        throw defiError('binding:falsy_key');\n    }\n\n    if (key instanceof Array) {\n        /*\n         * accept array of keys\n         * this.bindNode(['a', 'b', 'c'], node)\n         */\n        forEach(key, (itemKey) => bindNode(object, itemKey, node, binder, eventOptions));\n\n        return object;\n    }\n\n\n    if (typeof key === 'object') {\n        forOwn(key, (keyObjValue, keyObjKey) => {\n            // binder means eventOptions\n            eventOptions = binder; // eslint-disable-line no-param-reassign\n\n            if (\n                keyObjValue\n                && keyObjValue.constructor === Object\n                && 'node' in keyObjValue\n            ) {\n                // this.bindNode({ key: { node: $(), binder } ) }, { on: 'evt' }, { silent: true });\n                bindNode(\n                    object, keyObjKey, keyObjValue.node,\n                    keyObjValue.binder || node, eventOptions\n                );\n            } else if (\n                keyObjValue\n                && keyObjValue.constructor === Array\n                && keyObjValue.length\n                && keyObjValue[0].constructor === Object\n                && 'node' in keyObjValue[0]\n            ) {\n                // this.bindNode({ key: [{\n                //   node: $(),\n                //   binder\n                // }] ) }, { on: 'evt' }, { silent: true });\n                forEach(keyObjValue, (keyObjValueItem) => {\n                    bindNode(\n                        object, keyObjKey, keyObjValueItem.node,\n                        keyObjValueItem.binder || node, eventOptions\n                    );\n                });\n            } else {\n                // this.bindNode({ key: $() }, { on: 'evt' }, { silent: true });\n                bindNode(object, keyObjKey, keyObjValue, node, eventOptions);\n            }\n        });\n\n        return object;\n    }\n\n    const {\n        optional = false,\n        exactKey = false\n    } = eventOptions;\n    const $nodes = getNodes(object, node);\n\n    // check node existence\n    if (!$nodes.length) {\n        if (optional) {\n            return object;\n        }\n\n        throw defiError('binding:node_missing', { key, node });\n    }\n\n    if (!exactKey) {\n        const deepPath = key.split('.');\n        const deepPathLength = deepPath.length;\n\n        if (deepPathLength > 1) {\n            // handle binding when key arg includes dots (eg \"a.b.c.d\")\n            const bindingSwitcher = createBindingSwitcher({\n                object,\n                deepPath,\n                $nodes,\n                binder,\n                eventOptions,\n                bindNode\n            });\n\n            addTreeListener(object, deepPath.slice(0, deepPathLength - 1), bindingSwitcher);\n\n            bindingSwitcher();\n\n            return object;\n        }\n    }\n\n    const propDef = defineProp(object, key);\n\n    // handle binding for every node separately\n    forEach($nodes, (oneNode) => bindSingleNode(object, {\n        $nodes,\n        node: oneNode,\n        key,\n        eventOptions,\n        binder,\n        propDef\n    }));\n\n    return object;\n}\n","import unbindNode from '../unbindnode';\n\n// returns a function which re-adds binding when object branch is changed\n// the function is called by bindNode when something like\n// 'foo.bar.baz' is passed to it as key argument value\n// this is one of the hardest things in the framework to understand\nexport default function createBindingSwitcher({\n    object,\n    deepPath,\n    $nodes,\n    binder,\n    eventOptions,\n    bindNode\n}) {\n    return function bindingSwitcher(changeEvent = {}) {\n        const deepPathLength = deepPath.length;\n        const lastDeepPathItem = deepPath[deepPathLength - 1];\n        const {\n            value, // new value of a branch\n            previousValue, // previous value of a branch\n            restPath // path starting currently changed branch (passed by addTreeListener)\n        } = changeEvent;\n        let target; // an object to call bindNode\n        let previousTarget; // an object to call unbindNode\n\n\n        if (value && typeof value === 'object' && restPath) {\n            // if rest path is given and new value is an object\n            target = value;\n            for (let i = 0; i < restPath.length; i++) {\n                target = target[restPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        } else {\n            // if rest path is not given\n            target = object;\n            for (let i = 0; i < deepPathLength - 1; i++) {\n                target = target[deepPath[i]];\n                if (!target) {\n                    break;\n                }\n            }\n        }\n\n        // if rest path is given and previous value is an object\n        if (previousValue && typeof previousValue === 'object' && restPath) {\n            previousTarget = previousValue;\n            for (let i = 0; i < restPath.length; i++) {\n                previousTarget = previousTarget[restPath[i]];\n                if (!previousTarget) {\n                    break;\n                }\n            }\n        }\n\n        // add binding for new target\n        if (target && typeof target === 'object') {\n            bindNode(target, lastDeepPathItem, $nodes, binder, eventOptions);\n        }\n\n        // remove binding for previously used object\n        if (previousTarget && typeof previousTarget === 'object') {\n            unbindNode(previousTarget, lastDeepPathItem, $nodes);\n        }\n    };\n}\n","import defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\n\n// the function returns bound node(s)\nexport default function bound(object, key, { all } = { all: false }) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'bound');\n\n    // if no key or falsy key is given\n    if (!key) {\n        return all ? [] : null;\n    }\n\n    const def = defs.get(object);\n    const propDef = def.props[key];\n\n    let nodes;\n\n    if (propDef) {\n        const { bindings } = propDef;\n        nodes = (bindings && bindings.map(({ node }) => node)) || [];\n    } else {\n        nodes = [];\n    }\n\n    return all ? nodes : nodes[0] || null;\n}\n","import unbindNode from './unbindnode';\nimport triggerOne from './trigger/_triggerone';\nimport removeListener from './off/_removelistener';\nimport defs from './_core/defs';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport defiError from './_helpers/defierror';\nimport forEach from './_helpers/foreach';\n\n// removes a property, its bindings and its events\n// TODO: remove function does not correctly removes delegated events, bindings, tree listeners etc\nexport default function remove(object, givenKey, eventOptions) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'remove');\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = defs.get(object);\n    const { silent } = eventOptions;\n    // allow to pass single key or an array of keys\n    const keys = givenKey instanceof Array ? givenKey : [givenKey];\n\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('remove:key_type', { key });\n        }\n\n        const props = def && def.props;\n        const propDef = props && props[key];\n\n        // if no object definition then simply delete the property\n        if (!propDef) {\n            delete object[key];\n            continue;\n        }\n\n        const { value } = propDef;\n\n        // remove all bindings\n        unbindNode(object, key);\n\n        // TODO: Manual listing of event prefixes may cause problems in future\n        const removeEventPrefies = [\n            '_change:deps',\n            '_change:bindings',\n            '_change:delegated',\n            '_change:tree',\n            'change',\n            'beforechange',\n            'bind',\n            'unbind'\n        ];\n\n        // remove all events\n        forEach(removeEventPrefies, (prefix) => removeListener(object, `${prefix}:${key}`));\n\n        // delete property definition\n        delete props[key];\n\n        // delete the property itself\n        delete object[key];\n\n        const extendedEventOptions = {\n            key,\n            value,\n            ...eventOptions\n        };\n\n        // trigger delegated events logic removal for asterisk events (*.*.*@foo)\n        triggerOne(object, '_delete:delegated', extendedEventOptions);\n\n        // fire events if \"silent\" is not true\n        if (!silent) {\n            triggerOne(object, 'delete', extendedEventOptions);\n            triggerOne(object, `delete:${key}`, extendedEventOptions);\n        }\n    }\n}\n","import initDefi from './_core/init';\nimport defineProp from './_core/defineprop';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport set from './set';\nimport defiError from './_helpers/defierror';\nimport forOwn from './_helpers/forown';\nimport forEach from './_helpers/foreach';\n\n// creates property mediator\nfunction createMediator({\n    object,\n    propDef,\n    key,\n    mediator\n}) {\n    return function propMediator(value) {\n        // args: value, previousValue, key, object itself\n        return mediator.call(object, value, propDef.value, key, object);\n    };\n}\n\n// transforms property value on its changing\nexport default function mediate(object, givenKeys, mediator) {\n    // throw error when object type is wrong\n    checkObjectType(object, 'mediate');\n\n    const isKeysArray = givenKeys instanceof Array;\n\n    // allow to use key-mediator object as another method variation\n    if (typeof givenKeys === 'object' && !isKeysArray) {\n        forOwn(givenKeys, (objVal, objKey) => mediate(object, objKey, objVal));\n        return object;\n    }\n\n    initDefi(object);\n\n    // allow to use both single key and an array of keys\n    const keys = isKeysArray ? givenKeys : [givenKeys];\n\n    forEach(keys, (key) => {\n        // if non-string is passed as a key\n        if (typeof key !== 'string') {\n            throw defiError('mediate:key_type', { key });\n        }\n\n        const propDef = defineProp(object, key);\n\n        const propMediator = propDef.mediator = createMediator({\n            object,\n            propDef,\n            key,\n            mediator\n        });\n\n        // set new value\n        set(object, key, propMediator(propDef.value), {\n            fromMediator: true\n        });\n    });\n\n    return object;\n}\n","import checkObjectType from './_helpers/checkobjecttype';\nimport * as functions from './_lib';\nimport forEach from './_helpers/foreach';\n\n// create a prototype of ChainClass\n// store target object at \"object\" property\nconst prototype = {\n    constructor(object) {\n        this.object = object;\n    }\n};\n\nconst funcNames = Object.keys(functions);\n\n// iterate over all universal methods\nfor (let i = 0; i < funcNames.length; i++) {\n    const funcName = funcNames[i];\n    const method = functions[funcName];\n\n    // create every chained method\n    prototype[funcName] = function chainedMethod() {\n        const args = [this.object];\n\n        forEach(arguments, (argument) => {\n            args.push(argument);\n        });\n\n        method(...args);\n\n        // returning this is important for chained calls\n        return this;\n    };\n}\n\n\nconst ChainClass = function ChainClass(object) {\n    this.object = object;\n};\n\nChainClass.prototype = prototype;\n\n// the function allows to chain static function calls on any object\nexport default function chain(object) {\n    // check for type and throw an error if it is not an object and is not a function\n    checkObjectType(object, 'chain');\n\n    return new ChainClass(object);\n}\n","import * as functions from './_lib';\n\nimport lookForBinder from './lookforbinder';\nimport chain from './chain';\nimport defaultBinders from './defaultbinders';\n\nexport default ({\n    ...functions,\n    lookForBinder,\n    chain,\n    defaultBinders\n});\n","import initDefi from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport addListener from './_addlistener';\nimport $ from '../_mq';\nimport createDomEventHandler from './_createdomeventhandler';\nimport forEach from '../_helpers/foreach';\n\n// returns an object with event handlers used at addDomListener\nfunction createBindingHandlers({\n    fullEventName,\n    domEventHandler,\n    selector\n}) {\n    return {\n        bindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).on(fullEventName, selector, domEventHandler);\n            }\n        },\n        unbindHandler(evt = {}) {\n            const { node } = evt;\n            if (node) {\n                $(node).off(fullEventName, selector, domEventHandler);\n            }\n        }\n    };\n}\n\n// adds DOM event listener for nodes bound to given property\nexport default function addDomListener(object, key, eventName, selector, callback, info) {\n    const def = initDefi(object);\n    const propDef = defineProp(object, key);\n\n    const domEventHandler = createDomEventHandler({\n        key,\n        object,\n        callback\n    });\n\n    // making possible to remove this event listener\n    domEventHandler._callback = callback;\n\n    const eventNamespace = def.id + key;\n    const fullEventName = `${eventName}.${eventNamespace}`;\n    const { bindHandler, unbindHandler } = createBindingHandlers({\n        fullEventName,\n        domEventHandler,\n        selector\n    });\n    const addBindListenerResult = addListener(object, `bind:${key}`, bindHandler, info);\n    const addUnbindListenerResult = addListener(object, `unbind:${key}`, unbindHandler, info);\n\n    // if events are added successfully then run bindHandler for every node immediately\n    // TODO: Describe why do we need addBindListenerResult and addUnbindListenerResult\n    if (addBindListenerResult && addUnbindListenerResult) {\n        const { bindings } = propDef;\n        if (bindings) {\n            forEach(bindings, ({ node }) => bindHandler({ node }));\n        }\n    }\n\n    return object;\n}\n","// returns DOM event handler\nexport default function createDomEventHandler({\n    key,\n    object,\n    callback\n}) {\n    return function domEventHandler(domEvent) {\n        const originalEvent = domEvent.originalEvent || domEvent;\n        // defiTriggerArgs are created when DOM event is triggered by trigger method\n        const triggerArgs = originalEvent.defiTriggerArgs;\n        const {\n            which, target, ctrlKey, altKey\n        } = domEvent;\n\n        if (triggerArgs) {\n            // if args are passed to trigger method then pass them to an event handler\n            callback.apply(object, triggerArgs);\n        } else {\n            // use the following object as an arg for event handler\n            callback.call(object, {\n                self: object,\n                node: this,\n                preventDefault: () => domEvent.preventDefault(),\n                stopPropagation: () => domEvent.stopPropagation(),\n                key,\n                domEvent,\n                originalEvent,\n                which,\n                target,\n                ctrlKey,\n                altKey\n            });\n        }\n    };\n}\n"],"sourceRoot":""}